<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>構建類似 ChatGPT 聊天機器人 Android 程式</title>
    <url>//post/android_dev_chatgpt_app.html</url>
    <content><![CDATA[<p>今天會跟大家編寫並開發一個類似 ChatGPT 的 OpenAI 聊天機器人 Android 程式。但在開發前，建議先看以下文章再續。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>這篇教學會使用 <a class="button " href="/post/android_dev_openai_util.html" title="這篇文章">這篇文章</a> 所實現的 <code>OpenAIUtil</code> 程式實現。</p>
</div>

<h1 id="什麼是-ChatGPT？"><a href="#什麼是-ChatGPT？" class="headerlink" title="什麼是 ChatGPT？"></a>什麼是 ChatGPT？</h1><p><a target="_blank" href="https://chat.openai.com/">ChatGPT</a> 是現今發展最大的一個聊天機器人技術，它透過 OpenAI 所研發的 API 權杖，利用<strong>自然語言生成</strong> （Natural Language Generation，簡稱 NLG）， 用戶可以透過輸入字詞與機器人進行對話，在這裏，稱為 <code>Prompt</code>，意思是<strong>用戶所傳達的訊息</strong>，而機器人的回應 <code>Completion</code> 就是補全的意思，機器人會<strong>根據所傳達的訊息來作相應輸出</strong>。</p>
<p><a target="_blank" href="https://openai.com/">OpenAI</a> 利用深度學習的方式訓練機器人，從而能夠理解用戶所傳達訊息，再作相應輸出。</p>
<p><img src="/post/android_dev_chatgpt_app/img1.jpg" alt="img1"></p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>直到目前，ChatGPT 現時所使用的模型 <code>Model</code> 是 <code>gpt-3.5-turbo</code>，但是這個模型<strong>不是完全免費提供使用</strong>，花費 0.002 美元的價格可獲得 1000 個權標 <code>Token</code>，或大約 750 個單字。</p>
<p>推薦使用 <code>text-davinci-003</code>，支援最大權標量為 <code>4097</code>，其中 <code>Prompt Token</code> 和 <code>Completion Token</code> 均計算在內。</p>
</div>

<hr>
<h1 id="OpenAI-或-ChatGPT-地區限制"><a href="#OpenAI-或-ChatGPT-地區限制" class="headerlink" title="OpenAI 或 ChatGPT 地區限制"></a>OpenAI 或 ChatGPT 地區限制</h1><p>可惜的是，OpenAI <strong>還未廣泛開放地區使用</strong>，例如：香港地區暫時無法使用，即使透過使用<strong>虛擬私有網絡</strong>（Virtual Personal Network，簡稱 VPN），都無法完成用戶身份驗證的步驟。</p>
<hr>
<h1 id="構建-Android-程式"><a href="#構建-Android-程式" class="headerlink" title="構建 Android 程式"></a>構建 Android 程式</h1><p>雖然 ChatGPT 暫時開放免費使用，但我們可以用 OpenAI <strong>開發類似的聊天機器人程式</strong>，進行其他<strong>自然語言處理</strong>（Natural Language Processing，簡稱 NLP）。在編程的時候。我們只需要透過<strong>個人帳戶的權杖</strong> <code>API Key</code>，並運用<strong>網絡傳輸</strong>，把 OpenAI 的回應記錄獲取出來。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>要注意的是，網絡不能夠長時間被呼喚，所以它有一定的<strong>連接時間總長</strong>，過了這個時間，就會<strong>逾時</strong> (Timeout)，這個操作是<strong>阻止詢問網絡時間過長而導致程式無反應</strong>等崩潰情況。</p>
</div>

<hr>
<h2 id="預備-XML-佈局"><a href="#預備-XML-佈局" class="headerlink" title="預備 XML 佈局"></a>預備 XML 佈局</h2><details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼 </summary>
              <div class="content">
              <div class="tabs" id="tab-source_code_layouts"><ul class="nav-tabs"><li class="tab active"><a class="#source_code_layouts-1">activity_main.xml</a></li><li class="tab"><a class="#source_code_layouts-2">layout_message_list_item.xml</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code_layouts-1"><p><font size="6"><strong>聊天界面的佈局</strong></font></p><p>我們會利用 XML 構建聊天界面的佈局，當中每一個的聊天對話泡泡會用 <code>RecyclerView</code> 實現。</p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>activity_main.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.progressindicator.LinearProgressIndicator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/progressBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:indeterminate</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rvChatList&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingEnd</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingTop</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingBottom</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingEnd</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/inputLayoutMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;@string/enter_message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:endIconMode</span>=<span class="string">&quot;custom&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:endIconDrawable</span>=<span class="string">&quot;@drawable/ic_baseline_send_24&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/etMessage&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code_layouts-2"><p><font size="6"><strong>聊天對話泡泡的佈局</strong></font></p><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_message_list_item.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:animateLayoutChanges</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/layoutBotMessage&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvBotMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/speech_bubble_bot&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;bot message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/layoutUserMessage&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvUserMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/speech_bubble_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;my message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div></div>
              </div>
            </details>

<hr>
<h2 id="預備對話訊息模型"><a href="#預備對話訊息模型" class="headerlink" title="預備對話訊息模型"></a>預備對話訊息模型</h2><p>預備一個類別 <code>MessageModel</code> 作對話訊息模型。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageModel</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="定義常量和變量"><a href="#定義常量和變量" class="headerlink" title="定義常量和變量"></a>定義常量和變量</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SENT_BY_USER</span> <span class="operator">=</span> <span class="string">&quot;me&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SENT_BY_BOT</span> <span class="operator">=</span> <span class="string">&quot;bot&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String message, sender;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫存取子及變異子"><a href="#編寫存取子及變異子" class="headerlink" title="編寫存取子及變異子"></a>編寫存取子及變異子</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>存取子 (Getter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123; <span class="keyword">return</span> message; &#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getSender</span><span class="params">()</span> &#123; <span class="keyword">return</span> sender; &#125;</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>當然你可以弄類似以下的判斷，並進行編寫存取子及變異子（但這篇教學沒有為它改良）：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> isSentByBot;</span><br><span class="line">isSentByBot = getSender().equals(SENT_BY_BOT);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSentByBot</span><span class="params">()</span> &#123; <span class="keyword">return</span> isSentByBot; &#125;</span><br></pre></td></tr></table></figure></div></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>變異子 (Setter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">(String message)</span> &#123; <span class="built_in">this</span>.message = message; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSender</span><span class="params">(String sender)</span> &#123; <span class="built_in">this</span>.sender = sender; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫建構子"><a href="#編寫建構子" class="headerlink" title="編寫建構子"></a>編寫建構子</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">MessageModel</span><span class="params">(String message, String sender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.message = message;</span><br><span class="line">    <span class="built_in">this</span>.sender = sender;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="預備配接器"><a href="#預備配接器" class="headerlink" title="預備配接器"></a>預備配接器</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageListAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MessageListAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫-ViewHolder"><a href="#編寫-ViewHolder" class="headerlink" title="編寫 ViewHolder"></a>編寫 ViewHolder</h3><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>這個 <code>ViewHolder</code> 要放在 <code>MessageListAdapter</code> 裏面：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MessageListAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="定義視圖變量"><a href="#定義視圖變量" class="headerlink" title="定義視圖變量"></a>定義視圖變量</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> LinearLayout layoutBotMessage, layoutUserMessage;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> TextView tvBotMessage, tvUserMessage;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫建構子，獲取視圖"><a href="#編寫建構子，獲取視圖" class="headerlink" title="編寫建構子，獲取視圖"></a>編寫建構子，獲取視圖</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> LayoutMessageListItemBinding binding)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(binding.getRoot());</span><br><span class="line">    </span><br><span class="line">    layoutBotMessage = binding.layoutBotMessage;</span><br><span class="line">    layoutUserMessage = binding.layoutUserMessage;</span><br><span class="line">    tvBotMessage = binding.tvBotMessage;</span><br><span class="line">    tvUserMessage = binding.tvUserMessage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="構建主活動頁"><a href="#構建主活動頁" class="headerlink" title="構建主活動頁"></a>構建主活動頁</h2><hr>
<h3 id="初始化變量"><a href="#初始化變量" class="headerlink" title="初始化變量"></a>初始化變量</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;MessageModel&gt; listMessage;</span><br><span class="line"><span class="keyword">private</span> MessageListAdapter adapterMessageList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> OpenAIUtil client;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="配置對話聊天紀錄"><a href="#配置對話聊天紀錄" class="headerlink" title="配置對話聊天紀錄"></a>配置對話聊天紀錄</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setupChatList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupChatList</span><span class="params">()</span> &#123;</span><br><span class="line">    client = <span class="keyword">new</span> <span class="title class_">OpenAIUtil</span>();</span><br><span class="line">    client.setAPIKey(apiKey);</span><br><span class="line">    client.setAPIUrl(apiUrl);</span><br><span class="line">    client.setModel(OpenAIUtil.TEXT_DAVINCI_003)</span><br><span class="line">    client.setTemperature(<span class="number">0.9</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    listMessage = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    adapterMessageList = <span class="keyword">new</span> <span class="title class_">MessageListAdapter</span>(listMessage);</span><br><span class="line">    binding.rvChatList.setAdapter(adapterMessageList);</span><br><span class="line"></span><br><span class="line">    <span class="type">var</span> <span class="variable">layoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>);</span><br><span class="line">    layoutManager.setStackFromEnd(<span class="literal">true</span>);</span><br><span class="line">    binding.rvChatList.setLayoutManager(layoutManager);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="獲取回應"><a href="#獲取回應" class="headerlink" title="獲取回應"></a>獲取回應</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callResponse</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        client.setPrompt(prompt);</span><br><span class="line">        client.generateResponse(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> IOException e)</span> &#123;</span><br><span class="line">                <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">                Log.e(TAG, e.toString())</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">responseBody</span> <span class="operator">=</span> response.body().string();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 獲取回應結果</span></span><br><span class="line"></span><br><span class="line">                    <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> client.getResponse(responseBody);</span><br><span class="line">                    <span class="type">TextView</span> <span class="variable">tvResult</span> <span class="operator">=</span> binding.tvResult;</span><br><span class="line">                    tvResult.setText(resultText);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">                    Log.e(TAG, client.getErrorResponse(responseBody))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">        Log.e(TAG, e.toString())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="新增訊息至訊息模型"><a href="#新增訊息至訊息模型" class="headerlink" title="新增訊息至訊息模型"></a>新增訊息至訊息模型</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage</span><span class="params">(String message, String sender)</span> &#123;</span><br><span class="line">    runOnUiThread(() -&gt; &#123;</span><br><span class="line">        listMessage.add(<span class="keyword">new</span> <span class="title class_">MessageModel</span>(message,sender));</span><br><span class="line">        adapterMessageList.notifyDataSetChanged();</span><br><span class="line">        binding.rvChatList.smoothScrollToPosition(adapterMessageList.getItemCount());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="新增機器人回應"><a href="#新增機器人回應" class="headerlink" title="新增機器人回應"></a>新增機器人回應</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addResponse</span><span class="params">(String response)</span> &#123;</span><br><span class="line">    addMessage(response, MessageModel.SENT_BY_BOT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="發送已輸入訊息"><a href="#發送已輸入訊息" class="headerlink" title="發送已輸入訊息"></a>發送已輸入訊息</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (TextUtils.isEmpty(message)) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">&quot;The message is empty&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        addMessage(message, MessageModel.SENT_BY_USER);</span><br><span class="line">        binding.etMessage.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            callResponse(message);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="點擊按鈕發送訊息"><a href="#點擊按鈕發送訊息" class="headerlink" title="點擊按鈕發送訊息"></a>點擊按鈕發送訊息</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">binding.inputLayoutMessage.setEndIconOnClickListener(v -&gt; &#123;</span><br><span class="line">    sendMessage(binding.etMessage.getText().toString().trim())</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="源代碼"><a href="#源代碼" class="headerlink" title="源代碼"></a>源代碼</h1><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>這篇教學會使用 <a class="button " href="/post/android_dev_openai_util.html" title="這篇文章">這篇文章</a> 所實現的 <code>OpenAIUtil</code> 程式實現。</p>
</div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>點我看代碼 </summary>
              <div class="content">
              <div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Layouts</a></li><li class="tab"><a class="#source_code-2">MessageModel.java</a></li><li class="tab"><a class="#source_code-3">MessageListAdapter.java</a></li><li class="tab"><a class="#source_code-4">MainActivity.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>activity_main.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.progressindicator.LinearProgressIndicator</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/progressBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:indeterminate</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">&quot;gone&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rvChatList&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingEnd</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingTop</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingBottom</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingStart</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingEnd</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/inputLayoutMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;@string/enter_message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:endIconMode</span>=<span class="string">&quot;custom&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">app:endIconDrawable</span>=<span class="string">&quot;@drawable/ic_baseline_send_24&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/etMessage&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:padding</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_message_list_item.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:animateLayoutChanges</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/layoutBotMessage&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvBotMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/speech_bubble_bot&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;bot message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/layoutUserMessage&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;40dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvUserMessage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@drawable/speech_bubble_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;my message&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageModel</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SENT_BY_USER</span> <span class="operator">=</span> <span class="string">&quot;me&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SENT_BY_BOT</span> <span class="operator">=</span> <span class="string">&quot;bot&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String message, sender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MessageModel</span><span class="params">(String message, String sender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.sender = sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSender</span><span class="params">(String sender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sender = sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageListAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;MessageListAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;MessageModel&gt; listMessage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MessageListAdapter</span><span class="params">(List&lt;MessageModel&gt; listMessage)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listMessage = listMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">context</span> <span class="operator">=</span> parent.getContext();</span><br><span class="line">        <span class="type">var</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">        <span class="type">var</span> <span class="variable">binding</span> <span class="operator">=</span> LayoutMessageListItemBinding.inflate(inflater, parent, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ViewHolder</span>(binding);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">message</span> <span class="operator">=</span> listMessage.get(position);</span><br><span class="line">        <span class="type">var</span> <span class="variable">context</span> <span class="operator">=</span> holder.itemView.getContext();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (message.getSender().equals(MessageModel.SENT_BY_USER)) &#123;</span><br><span class="line">            holder.layoutBotMessage.setVisibility(View.GONE);</span><br><span class="line">            holder.layoutUserMessage.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.tvUserMessage.setText(message.toString());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            holder.layoutUserMessage.setVisibility(View.GONE);</span><br><span class="line">            holder.layoutBotMessage.setVisibility(View.VISIBLE);</span><br><span class="line">            holder.tvBotMessage.setText(message.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listMessage.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line"></span><br><span class="line">        LinearLayout layoutBotMessage, layoutUserMessage;</span><br><span class="line">        TextView tvBotMessage, tvUserMessage;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(<span class="meta">@NonNull</span> LayoutMessageListItemBinding binding)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(binding.getRoot());</span><br><span class="line">            layoutBotMessage = binding.layoutBotMessage;</span><br><span class="line">            layoutUserMessage = binding.layoutUserMessage;</span><br><span class="line">            tvBotMessage = binding.tvBotMessage;</span><br><span class="line">            tvUserMessage = binding.tvUserMessage;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">OPENAI_URL</span> <span class="operator">=</span> <span class="string">&quot;https://api.openai.com/v1/completions&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">OPENAI_MODEL</span> <span class="operator">=</span> <span class="string">&quot;text-davinci-003&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">OPENAI_APIKEY</span> <span class="operator">=</span> <span class="string">&quot;...&quot;</span>; <span class="comment">// your API Key</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;MessageModel&gt; listMessage;</span><br><span class="line">    <span class="keyword">private</span> MessageListAdapter adapterMessageList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OpenAIUtil client;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        initialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">()</span> &#123;</span><br><span class="line">        setupChatList();</span><br><span class="line"></span><br><span class="line">        binding.inputLayoutMessage.setEndIconOnClickListener(v -&gt; sendMessage(binding.etMessage.getText().toString().trim()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupChatList</span><span class="params">()</span> &#123;</span><br><span class="line">        client = <span class="keyword">new</span> <span class="title class_">OpenAIUtil</span>();</span><br><span class="line">        client.setAPIKey(apiKey);</span><br><span class="line">        client.setAPIUrl(apiUrl);</span><br><span class="line">        client.setModel(OpenAIUtil.TEXT_DAVINCI_003)</span><br><span class="line">        client.setTemperature(<span class="number">0.9</span>);</span><br><span class="line"></span><br><span class="line">        listMessage = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        adapterMessageList = <span class="keyword">new</span> <span class="title class_">MessageListAdapter</span>(listMessage);</span><br><span class="line">        binding.rvChatList.setAdapter(adapterMessageList);</span><br><span class="line"></span><br><span class="line">        <span class="type">var</span> <span class="variable">layoutManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(<span class="built_in">this</span>);</span><br><span class="line">        layoutManager.setStackFromEnd(<span class="literal">true</span>);</span><br><span class="line">        binding.rvChatList.setLayoutManager(layoutManager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(message)) &#123;</span><br><span class="line">            showError(<span class="string">&quot;The message is empty&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            addMessage(message, MessageModel.SENT_BY_USER);</span><br><span class="line">            binding.etMessage.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                callResponse(message);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                showError(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage</span><span class="params">(String message, String sender)</span> &#123;</span><br><span class="line">        runOnUiThread(() -&gt; &#123;</span><br><span class="line">            listMessage.add(<span class="keyword">new</span> <span class="title class_">MessageModel</span>(message,sender));</span><br><span class="line">            adapterMessageList.notifyDataSetChanged();</span><br><span class="line">            binding.rvChatList.smoothScrollToPosition(adapterMessageList.getItemCount());</span><br><span class="line">            updateTypingStatus(<span class="literal">false</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addResponse</span><span class="params">(String response)</span> &#123;</span><br><span class="line">        addMessage(response, MessageModel.SENT_BY_BOT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callResponse</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client.setPrompt(prompt);</span><br><span class="line">            client.generateResponse(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> IOException e)</span> &#123;</span><br><span class="line">                    showError(e.getMessage());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                    <span class="type">var</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(response.body().string());</span><br><span class="line">                    <span class="keyword">if</span> (response.isSuccessful()) &#123;</span><br><span class="line">                        <span class="type">var</span> <span class="variable">messageResponse</span> <span class="operator">=</span> client.getResponse(jsonObject);</span><br><span class="line">                        addResponse(messageResponse);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="type">var</span> <span class="variable">error</span> <span class="operator">=</span> client.getErrorResponse(jsonObject);</span><br><span class="line">                        addResponse(error);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            showError(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateTypingStatus</span><span class="params">(<span class="type">boolean</span> bool)</span> &#123;</span><br><span class="line">        binding.progressBar.setVisibility(bool ? View.VISIBLE : View.GONE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">showError</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        SnackbarUtil.makeErrorSnackbar(<span class="built_in">this</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>
              </div>
            </details>

<a class="button  large center" href="/post/android_dev_openai_util.html" title="看這篇 <code>OpenAIUtil</code> 實用程式"><i class="fa-duotone fa-play-circle"></i> 看這篇 <code>OpenAIUtil</code> 實用程式</a>]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
      </tags>
  </entry>
  <entry>
    <title>建立自訂載入對話框</title>
    <url>//post/android_dev_custom_progress_dialog.html</url>
    <content><![CDATA[<p>當我們要建立應用程式時，載入對話框總是對我們來說尤其重要。在這篇文章，你將會學會如何建立自訂載入對話框。</p>
<hr>
<h1 id="過時的實現方式"><a href="#過時的實現方式" class="headerlink" title="過時的實現方式"></a>過時的實現方式</h1><p>在以前，我們可以透過使用 <code>ProgressDialog</code> 類別實現載入對話框，但是這方式已經不再建議使用了。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ProgressDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProgressDialog</span>(<span class="built_in">this</span>);</span><br><span class="line">dialog.setMessage(<span class="string">&quot;Loading...&quot;</span>);</span><br><span class="line"></span><br><span class="line">dialog.show(); <span class="comment">// to show the progress dialog</span></span><br><span class="line">dialog.dismiss(); <span class="comment">// to close the progress dialog</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="利用自訂佈局建立載入對話框"><a href="#利用自訂佈局建立載入對話框" class="headerlink" title="利用自訂佈局建立載入對話框"></a>利用自訂佈局建立載入對話框</h1><p>雖然 <code>ProgressDialog</code> 類別已經被棄用，但是我們仍能透過使用其他方式把其實現，在編寫程式之前，我們需要為它編寫佈局。</p>
<hr>
<h2 id="編寫全新佈局"><a href="#編寫全新佈局" class="headerlink" title="編寫全新佈局"></a>編寫全新佈局</h2><p>在這佈局，我們會定義一個 <code>ProgressBar</code> 和一個 <code>TextView</code>。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/pbLoading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvText&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;TextView&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="實現載入對話框"><a href="#實現載入對話框" class="headerlink" title="實現載入對話框"></a>實現載入對話框</h2><p>我們需要使用 <code>LayoutInflater</code> 類別從而動態載入 <code>layout_loading_dialog.xml</code> 佈局。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> getLayoutInflater().inflate(R.layout.layout_loading_dialog, <span class="literal">null</span>);</span><br></pre></td></tr></table></figure></div>

<p>接著，我們需要使用 <code>setView()</code> 方法把佈局設定至對話框顯示佈局。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>我們目前在使用的資源庫取至 <code>MaterialAlertDialog</code>，它跟 Android 系統預設的 <code>AlertDialog</code> 的使用方式類近。</p>
</div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">MaterialAlertDialogBuilder</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MaterialAlertDialogBuilder</span>(<span class="built_in">this</span>);</span><br><span class="line">dialog.setView(view)</span><br><span class="line">      .setCancelable(<span class="literal">false</span>)</span><br><span class="line">      .create()</span><br><span class="line">      .show();</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="自訂載入對話框文字內容"><a href="#自訂載入對話框文字內容" class="headerlink" title="自訂載入對話框文字內容"></a>自訂載入對話框文字內容</h2><p>有時我們使用載入對話框，裏面顯示的文字未必是經常顯示一樣的，因此，我們在佈局內定義的 <code>TextView</code>，現在大派用場了。</p>
<p>我們要用 <code>findViewById()</code> 方法獲取 <code>TextView</code>，但問題在於它現在位於 <code>layout_loading_dialog.xml</code> 佈局，我們不能直接呼喚這函數，而要利用 <code>view</code> 變量來執行。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> view.findViewById(R.id.tvText);</span><br></pre></td></tr></table></figure></div>

<p>當 <code>TextView</code> 能被獲取，我們便可以用 <code>setText()</code> 方法來動態修改文字內容。</p>
<hr>
<h2 id="利用函數重複調用"><a href="#利用函數重複調用" class="headerlink" title="利用函數重複調用"></a>利用函數重複調用</h2><p>在進行動態修改文字內容前，我們需要把程式結構改成一個模組，這樣便可以重複使用。</p>
<p>因此，你的函數應編寫成：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMLoadingDialog</span><span class="params">(Activity activity, String text)</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getLayoutInflater().inflate(R.layout.layout_loading_dialog, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> v.findViewById(R.id.tvText);</span><br><span class="line">    tvText.setText(text);</span><br><span class="line"></span><br><span class="line">    <span class="type">MaterialAlertDialogBuilder</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MaterialAlertDialogBuilder</span>(activity);</span><br><span class="line">    dialog.setView(view)</span><br><span class="line">          .setCancelable(<span class="literal">false</span>)</span><br><span class="line">          .create().show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>現在，你便可以調用這個函數來呼喚一個載入對話框。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">showMLoadingDialog(<span class="built_in">this</span>, <span class="string">&quot;Loading, Hello World!&quot;</span>);</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="輸出顯示"><a href="#輸出顯示" class="headerlink" title="輸出顯示"></a>輸出顯示</h1><p>這個是輸出顯示：</p>
<p><img src="/post/android_dev_custom_progress_dialog/preview.png" alt="Preview"></p>
<hr>
<h1 id="完整源始碼"><a href="#完整源始碼" class="headerlink" title="完整源始碼"></a>完整源始碼</h1><p>這裏是完整源始碼作參考：</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>Java</code> 和 <code>Kotlin</code> 程式碼任選其一。</p>
</div>

<div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">activity_main.xml</a></li><li class="tab"><a class="#source_code-2">MainActivity.java</a></li><li class="tab"><a class="#source_code-3">MainActivity.kt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/pbLoading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvText&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;TextView&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        showMLoadingDialog(<span class="built_in">this</span>, <span class="string">&quot;Loading, Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showMLoadingDialog</span><span class="params">(Activity activity, String text)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getLayoutInflater().inflate(R.layout.layout_loading_dialog, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> v.findViewById(R.id.tvText);</span><br><span class="line">        tvText.setText(text);</span><br><span class="line">        </span><br><span class="line">        <span class="type">MaterialAlertDialogBuilder</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MaterialAlertDialogBuilder</span>(activity);</span><br><span class="line">        dialog.setView(view)</span><br><span class="line">              .setCancelable(<span class="literal">false</span>)</span><br><span class="line">              .create().show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainActivity</span> : <span class="type">AppCompatActivity</span>() &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        </span><br><span class="line">        showMLoadingDialog(<span class="keyword">this</span>, <span class="string">&quot;Loading, Hello World!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">showMLoadingDialog</span><span class="params">(activity: <span class="type">Activity</span>?, text: <span class="type">String</span>?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> view = activity.getLayoutInflater().inflate(R.layout.layout_loading_dialog, <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">var</span> tv = view.findViewById(R.id.tvText) <span class="keyword">as</span> TextView</span><br><span class="line">        tv.setText(text)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> dialog = MaterialAlertDialogBuilder(<span class="keyword">this</span>)</span><br><span class="line">        dialog.setView(view)</span><br><span class="line">              .setCancelable(<span class="literal">false</span>)</span><br><span class="line">              .create().show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<p>就是這樣了，通過這個教學，希望你們學會建立自訂載入對話框。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
      </tags>
  </entry>
  <entry>
    <title>開發偵錯工具，但直接 Log 在組件上顯示？</title>
    <url>//post/android_dev_debug_logger.html</url>
    <content><![CDATA[<p>相信你們對使用 <code>Log</code> 類的方法都不陌生，因為它是<strong>偵錯</strong> (Debugging) 和進行<strong>回波檢查</strong> (Echo check) 的好幫手。</p>
<p>例如：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Log.d(TAG, <span class="string">&quot;Debug World!&quot;</span>);</span><br></pre></td></tr></table></figure></div>

<p>就會在 Android Studio 的 Logcat 那處輸出了「Debug World!」這字串。</p>
<p>可是，萬一你現在不在使用電腦呢？可能是外出什麼的，但又想暸解程式報錯什麼問題，那就有點費解。</p>
<p>今天，就來解決這個問題！</p>
<hr>
<h1 id="構建佈局"><a href="#構建佈局" class="headerlink" title="構建佈局"></a>構建佈局</h1><p>定義一個 <code>LoggerView</code>。</p>
<p>什麼？你說什麼來的…？！開玩笑而已。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LoggerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/logger_view&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>現在要做出這個製成品，實在是天方夜譚，<font size="6">哈哈！</font></p>
<hr>
<h2 id="構建組件佈局"><a href="#構建組件佈局" class="headerlink" title="構建組件佈局"></a>構建組件佈局</h2><p>我們會用 <code>RecyclerView</code> 列出所有 Log 訊息，並把這個佈局封裝成一個組件。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_logger.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rv_list_log&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="構建-RecyclerView-的獨立項目佈局"><a href="#構建-RecyclerView-的獨立項目佈局" class="headerlink" title="構建 RecyclerView 的獨立項目佈局"></a>構建 <code>RecyclerView</code> 的獨立項目佈局</h2><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_log_message_list_item.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/img_log_icon&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;top&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_baseline_info_24&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_log_message&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is a log message.\nSecond line testing.&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:typeface</span>=<span class="string">&quot;monospace&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫-LogMessage-模型"><a href="#編寫-LogMessage-模型" class="headerlink" title="編寫 LogMessage 模型"></a>編寫 <code>LogMessage</code> 模型</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessage</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>好！首先，先一切從簡，編寫 Getter setter。</p>
<hr>
<h2 id="定義變量和常量"><a href="#定義變量和常量" class="headerlink" title="定義變量和常量"></a>定義變量和常量</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>Global Variables</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> messageLevel, messageColor, messageTypeface, messageIcon;</span><br><span class="line"><span class="keyword">private</span> String tag, message;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>Constants</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">// Log 訊息優先序 / 級別 (由小至大)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_VERBOSE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_DEBUG</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_INFO</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_WARN</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_ERROR</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_ASSERT</span> <span class="operator">=</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫建構子"><a href="#編寫建構子" class="headerlink" title="編寫建構子"></a>編寫建構子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">LogMessage</span><span class="params">(String tag, String message, <span class="type">int</span> messageLevel)</span> &#123;</span><br><span class="line">    <span class="comment">// 如果沒有設置 tag，則應用預設 (LogMessage)</span></span><br><span class="line">    <span class="keyword">if</span> (tag == <span class="literal">null</span>) tag = LogMessage.class.getSimpleName();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    <span class="built_in">this</span>.message = message;</span><br><span class="line">    <span class="built_in">this</span>.messageLevel = messageLevel;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫存取子及變異子"><a href="#編寫存取子及變異子" class="headerlink" title="編寫存取子及變異子"></a>編寫存取子及變異子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>存取子 (Getter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageLevel</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageLevel; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageTypeface</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageTypeface; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageIcon</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageIcon; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getTag</span><span class="params">()</span> &#123; <span class="keyword">return</span> tag; &#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123; <span class="keyword">return</span> message; &#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>變異子 (Setter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageLevel</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageLevel = messageLevel; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageColor = messageColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageTypeface</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageTypeface = messageTypeface; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageIcon</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageIcon = messageIcon; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">()</span> &#123; <span class="built_in">this</span>.tag = tag; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">()</span> &#123; <span class="built_in">this</span>.message = message; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫-Log-級別訊息樣式"><a href="#編寫-Log-級別訊息樣式" class="headerlink" title="編寫 Log 級別訊息樣式"></a>編寫 Log 級別訊息樣式</h2><p>既然是當作級別去看，通常 <code>ERROR</code> 和 <code>ASSERT</code> 的訊息都是<font color="#ff4757">紅色的，而且<b>粗粗的</b></font>，讓人有種感覺是這訊息相當嚴重似的。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>順帶一提，<code>ASSERT</code> 即是 <strong><u>W</u>hat a <u>T</u>erriable <u>F</u>ailure</strong> (WTF)。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Log.wtf(TAG, <span class="string">&quot;This is a failure message.&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>絕對不是 What the <span style="text-shadow: 0 0 4px #ff4757; color: transparent;">FXXX</span>！</p>
</div>

<hr>
<h3 id="定義要使用的常數顏色"><a href="#定義要使用的常數顏色" class="headerlink" title="定義要使用的常數顏色"></a>定義要使用的常數顏色</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Log 級別偏好顏色</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_RED</span> <span class="operator">=</span> <span class="number">0xFFeb3b5a</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_ORANGE</span> <span class="operator">=</span> <span class="number">0xFffa8231</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_CYAN</span> <span class="operator">=</span> <span class="number">0xFF2bcbba</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_GREEN</span> <span class="operator">=</span> <span class="number">0xFF20bf6b</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫配置訊息樣式"><a href="#編寫配置訊息樣式" class="headerlink" title="編寫配置訊息樣式"></a>編寫配置訊息樣式</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupMessageStyles</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (level) &#123;</span><br><span class="line">        <span class="keyword">case</span> LEVEL_DEBUG:</span><br><span class="line">            messageColor = C_CYAN;</span><br><span class="line">            messageTypeface = Typeface.NORMAL;</span><br><span class="line">            messageIcon = R.drawable.ic_baseline_bug_report_24;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LEVEL_WARN:</span><br><span class="line">            messageColor = C_ORANGE;</span><br><span class="line">            messageTypeface = Typeface.NORMAL;</span><br><span class="line">            messageIcon = R.drawable.ic_baseline_warning_24;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LEVEL_ERROR:</span><br><span class="line">        <span class="keyword">case</span> LEVEL_ASSERT:</span><br><span class="line">            messageColor = C_RED;</span><br><span class="line">            messageTypeface = Typeface.BOLD;</span><br><span class="line">            messageIcon = R.drawable.ic_baseline_error_24;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LEVEL_INFO:</span><br><span class="line">        <span class="keyword">case</span> LEVEL_VERBOSE:</span><br><span class="line">            messageColor = C_GREEN;</span><br><span class="line">            messageTypeface = Typeface.NORMAL;</span><br><span class="line">            messageIcon = R.drawable.ic_baseline_info_24;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="更新建構子的初始程序"><a href="#更新建構子的初始程序" class="headerlink" title="更新建構子的初始程序"></a>更新建構子的初始程序</h3><p>加上 <code>setupMessageStyles()</code> 配置樣式。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">LogMessage</span><span class="params">(String tag, String message, <span class="type">int</span> level)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (tag == <span class="literal">null</span>) tag = LogMessage.class.getSimpleName();</span><br><span class="line">    <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    <span class="built_in">this</span>.message = message;</span><br><span class="line">    <span class="built_in">this</span>.level = level;</span><br><span class="line"></span><br><span class="line">    setupMessageStyles();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫-LogMessageBuilder"><a href="#編寫-LogMessageBuilder" class="headerlink" title="編寫 LogMessageBuilder"></a>編寫 <code>LogMessageBuilder</code></h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessageBuilder</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>寫好 <code>LogMessage</code> 模型後，就來到實現 Builder，有幾項功能我們需要的：</p>
<ul>
<li><code>addMessage()</code> 新增訊息；</li>
<li><code>removeMessage(position)</code> 刪除指定訊息；</li>
<li><code>clear()</code> 清空所有訊息。</li>
</ul>
<hr>
<h2 id="定義實例-instance"><a href="#定義實例-instance" class="headerlink" title="定義實例 (instance)"></a>定義實例 (instance)</h2><p>所說的實例就是自己 (<code>LogMessageBuilder</code>)，我們會用這個 <code>instance</code> 調用方法。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LogMessageBuilder instance;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="取出實例"><a href="#取出實例" class="headerlink" title="取出實例"></a>取出實例</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> LogMessageBuilder <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (instance == <span class="literal">null</span>) instance = <span class="keyword">new</span> <span class="title class_">LogMessageBuilder</span>();</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫建構子-1"><a href="#編寫建構子-1" class="headerlink" title="編寫建構子"></a>編寫建構子</h2><p>首先我們要定義一個用 <code>LogMessage</code> 模型的 <code>List</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;LogMessage&gt; list;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="title function_">LogMessageBuilder</span><span class="params">()</span> &#123;</span><br><span class="line">    list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫監聽器-Listener"><a href="#編寫監聽器-Listener" class="headerlink" title="編寫監聽器 (Listener)"></a>編寫監聽器 (Listener)</h2><p>首先我們要編寫一個界面。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnNewMessageListener</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">onNewMessage</span><span class="params">(List&lt;LogMessage&gt; list, LogMessage message)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>然後聲明這個監聽器。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> OnNewMessageListener listener;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnNewMessageListener</span><span class="params">(OnNewMessageListener listener)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.listener = listener;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫存取子及變異子-1"><a href="#編寫存取子及變異子-1" class="headerlink" title="編寫存取子及變異子"></a>編寫存取子及變異子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String tag;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getTag</span><span class="params">()</span> &#123; <span class="keyword">return</span> tag; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">()</span> &#123; <span class="built_in">this</span>.tag = tag; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫核心功能"><a href="#編寫核心功能" class="headerlink" title="編寫核心功能"></a>編寫核心功能</h2><hr>
<h3 id="刪除訊息"><a href="#刪除訊息" class="headerlink" title="刪除訊息"></a>刪除訊息</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">    list.remove(position);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="清空所有訊息"><a href="#清空所有訊息" class="headerlink" title="清空所有訊息"></a>清空所有訊息</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">    list.clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="新增訊息"><a href="#新增訊息" class="headerlink" title="新增訊息"></a>新增訊息</h3><p>新增訊息就有些複雜，絕對不會很像以上兩個這樣一行代碼就好。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage</span><span class="params">(LogMessage message)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (listener != <span class="literal">null</span>) listener.onNewMessage(list, message);</span><br><span class="line">    list.add(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>好了，聰明的你或許會發現，<code>addMessage()</code> 方法接受的參數是 <code>LogMessage</code> 類的，而我們期望的是用 <code>String</code> 對吧？</p>
<p>那就再多編寫一個方法，姑且稱它為 <code>addMessage2()</code>。</p>
<p><code>addMessage2()</code> 將會接受兩個參數 <code>message</code> (String)、<code>level</code> (int)。</p>
<p>哦你說 <code>tag</code> 呢？這個會即將透過以下方法完成：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">setTag(TAG);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage2</span><span class="params">(String message, <span class="type">int</span> level)</span> &#123;</span><br><span class="line">    addMessage(<span class="keyword">new</span> <span class="title class_">LogMessage</span>(tag, message, level));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>欸不是惹，我們都被沖昏頭腦了……</p>
<p>我們是要弄像 <code>Log</code> 類的</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Log.w(...)</span><br></pre></td></tr></table></figure></div>

<p><font size="6">那就來啊！</font></p>
<hr>
<h4 id="新增個別級別訊息"><a href="#新增個別級別訊息" class="headerlink" title="新增個別級別訊息"></a>新增個別級別訊息</h4><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">verbose</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_VERBOSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">debug</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_DEBUG);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_INFO);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">warn</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_WARN);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">error</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_ERROR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">failure</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_ASSERT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>你喜歡的話可以乾脆用縮寫：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">v</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_VERBOSE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">wtf</span><span class="params">(String message)</span> &#123;</span><br><span class="line">    addMessage2(message, LogMessage.LEVEL_ASSERT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫-LoggerApplication"><a href="#編寫-LoggerApplication" class="headerlink" title="編寫 LoggerApplication"></a>編寫 <code>LoggerApplication</code></h1><p>我們會用一個 <code>Application</code> 來獲取 <code>instance</code>。</p>
<hr>
<h2 id="設定為應用程式的-Application"><a href="#設定為應用程式的-Application" class="headerlink" title="設定為應用程式的 Application"></a>設定為應用程式的 <code>Application</code></h2><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">&quot;.LoggerApplication&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="獲取-instance"><a href="#獲取-instance" class="headerlink" title="獲取 instance"></a>獲取 <code>instance</code></h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoggerApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> LoggerApplication.class.getSimpleName();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">LogMessageBuilder</span> <span class="variable">log</span> <span class="operator">=</span> getLogMessageBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LogMessageBuilder <span class="title function_">getLogMessageBuilder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> LogMessageBuilder.getInstance();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫-LogMessageAdapter-適配器"><a href="#編寫-LogMessageAdapter-適配器" class="headerlink" title="編寫 LogMessageAdapter 適配器"></a>編寫 <code>LogMessageAdapter</code> 適配器</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessageAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;LogMessageAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LogMessageAdapter.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> LogMessageAdapter.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> logMessageList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫-ViewHolder"><a href="#編寫-ViewHolder" class="headerlink" title="編寫 ViewHolder"></a>編寫 <code>ViewHolder</code></h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p><code>ViewHolder</code> 在 <code>LogMessageAdapter</code> 裏面，即：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LogMessageAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>

<hr>
<h3 id="定義視圖變量"><a href="#定義視圖變量" class="headerlink" title="定義視圖變量"></a>定義視圖變量</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> View item;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> TextView messageView;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> ImageView messageIconView;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫建構子，獲取視圖"><a href="#編寫建構子，獲取視圖" class="headerlink" title="編寫建構子，獲取視圖"></a>編寫建構子，獲取視圖</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(View itemView)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(itemView);</span><br><span class="line">    messageView = itemView.findViewById(R.id.tv_log_message);</span><br><span class="line">    messageIconView = itemView.findViewById(R.id.img_log_icon);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="綁定視圖"><a href="#綁定視圖" class="headerlink" title="綁定視圖"></a>綁定視圖</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bind</span><span class="params">(LogMessage logMessage)</span> &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">color</span> <span class="operator">=</span> logMessage.getMessageColor();</span><br><span class="line">    <span class="type">var</span> <span class="variable">fullMessage</span> <span class="operator">=</span> <span class="string">&quot;[&quot;</span> + logMessage.getTag() + <span class="string">&quot;] &quot;</span> + logMessage.getMessage();</span><br><span class="line"></span><br><span class="line">    itemView.setBackgroundColor(ColorUtils.setAlphaComponent(color, messageBgAlpha));</span><br><span class="line"></span><br><span class="line">    messageView.setText(fullMessage);</span><br><span class="line">    messageView.setTextColor(color);</span><br><span class="line">    messageView.setTypeface(Typeface.MONOSPACE, logMessage.getMessageTypeface());</span><br><span class="line"></span><br><span class="line">    messageIconView.setImageResource(logMessage.getMessageIcon());</span><br><span class="line">    messageIconView.setColorFilter(color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="定義變量"><a href="#定義變量" class="headerlink" title="定義變量"></a>定義變量</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> LayoutLogMessageListItemBinding binding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;LogMessage&gt; logMessageList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> LogMessageBuilder logMessageArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ViewHolder holder;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫建構子-2"><a href="#編寫建構子-2" class="headerlink" title="編寫建構子"></a>編寫建構子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">LogMessageAdapter</span><span class="params">()</span> &#123;</span><br><span class="line">    logMessageArray = LogMessageBuilder.getInstance();</span><br><span class="line">    logMessageArray.setOnNewMessageListener((list, message) -&gt; &#123;</span><br><span class="line">        logMessageList.clear();</span><br><span class="line">        logMessageList.addAll(list);</span><br><span class="line">        notifyDataSetChanged();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="創建並初始化佈局"><a href="#創建並初始化佈局" class="headerlink" title="創建並初始化佈局"></a>創建並初始化佈局</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> LogMessageAdapter.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">context</span> <span class="operator">=</span> parent.getContext();</span><br><span class="line">    <span class="type">var</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">    binding = LayoutLogMessageListItemBinding.inflate(inflater, parent, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> holder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="綁定佈局"><a href="#綁定佈局" class="headerlink" title="綁定佈局"></a>綁定佈局</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> LogMessageAdapter.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">    <span class="type">LogMessage</span> <span class="variable">logMessage</span> <span class="operator">=</span> logMessageList.get(position);</span><br><span class="line">    holder.bind(logMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫-LoggerView-組件"><a href="#編寫-LoggerView-組件" class="headerlink" title="編寫 LoggerView 組件"></a>編寫 <code>LoggerView</code> 組件</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoggerView</span> <span class="keyword">extends</span> <span class="title class_">LinearLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="定義變量-1"><a href="#定義變量-1" class="headerlink" title="定義變量"></a>定義變量</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> LoggerView.class.getSimpleName();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> LayoutLoggerBinding binding;</span><br><span class="line"><span class="keyword">private</span> LogMessageAdapter adapter;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫存取子"><a href="#編寫存取子" class="headerlink" title="編寫存取子"></a>編寫存取子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> LayoutLoggerBinding <span class="title function_">getBinding</span><span class="params">()</span> &#123; <span class="keyword">return</span> binding; &#125;</span><br><span class="line"><span class="keyword">public</span> LogMessageAdapter <span class="title function_">getAdapter</span><span class="params">()</span> &#123; <span class="keyword">return</span> adapter; &#125;</span><br><span class="line"><span class="keyword">public</span> RecyclerView <span class="title function_">getRecyclerView</span><span class="params">()</span> &#123; <span class="keyword">return</span> binding.rvListLog; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="初始化佈局"><a href="#初始化佈局" class="headerlink" title="初始化佈局"></a>初始化佈局</h2><p>我們要預設這個佈局的寬度是 <code>match_parent</code>，預備一個方法：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setLayoutWidth</span><span class="params">(View v, <span class="type">int</span> width)</span> &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">layoutParams</span> <span class="operator">=</span> (LinearLayout.LayoutParams) v.getLayoutParams();</span><br><span class="line">    layoutParams.width = width;</span><br><span class="line">    v.setLayoutParams(layoutParams);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">    binding = LayoutLoggerBinding.inflate(inflater);</span><br><span class="line"></span><br><span class="line">    <span class="type">var</span> <span class="variable">root</span> <span class="operator">=</span> binding.getRoot();</span><br><span class="line">    addView(root);</span><br><span class="line">    setLayoutWidth(root, LayoutParams.MATCH_PARENT);</span><br><span class="line"></span><br><span class="line">    <span class="type">var</span> <span class="variable">logList</span> <span class="operator">=</span> binding.rvListLog;</span><br><span class="line">    adapter = <span class="keyword">new</span> <span class="title class_">LogMessageAdapter</span>();</span><br><span class="line"></span><br><span class="line">    logList.setAdapter(adapter);</span><br><span class="line">    logList.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(context));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫建構子-3"><a href="#編寫建構子-3" class="headerlink" title="編寫建構子"></a>編寫建構子</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context);</span><br><span class="line">    initView(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    initView(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    initView(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="使用組件"><a href="#使用組件" class="headerlink" title="使用組件"></a>使用組件</h1><p>在佈局定義一個 <code>LoggerView</code>。要修改套件名稱。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.xxx.yyy.LoggerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/logger_view&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>在 <code>MainActivity</code> 定義變量：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">LogMessageBuilder</span> <span class="variable">log</span> <span class="operator">=</span> LoggerApplication.getLogMessageBuilder();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> MainActivity.class.getSimpleName();</span><br></pre></td></tr></table></figure></div>

<p>在 <code>onCreate()</code> 設置 <code>tag</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">    log.setTag(TAG);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>那現在就可以用。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">log.verbose(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">log.debug(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">log.info(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">log.warn(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">log.error(<span class="string">&quot;...&quot;</span>);</span><br><span class="line">log.failure(<span class="string">&quot;...&quot;</span>); <span class="comment">// wtf</span></span><br></pre></td></tr></table></figure></div>

<p>就會在 <code>LoggerView</code> 顯示。</p>
<hr>
<h1 id="顯示在-Logcat"><a href="#顯示在-Logcat" class="headerlink" title="顯示在 Logcat"></a>顯示在 Logcat</h1><p>如果你想這個都可以顯示在 Android Studio 的 Logcat，你可以：</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視實現方法及代碼 </summary>
              <div class="content">
              <p><font size="6"><strong>定義變量</strong></font></p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> isReserveNormalLog;</span><br></pre></td></tr></table></figure></div><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>isReserveNormalLog</code> 是保留一般 Log 的行為（即能同時預設顯示在 Logcat）。</p></div><hr><p><font size="6"><strong>編寫存取子及變異子</strong></font></p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isReserveNormalLog</span><span class="params">()</span> &#123; <span class="keyword">return</span> isReserveNormalLog; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setReserveNormalLog</span><span class="params">()</span> &#123; <span class="built_in">this</span>.isReserveNormalLog = isReserveNormalLog; &#125;</span><br></pre></td></tr></table></figure></div><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>存取子如果是存取布爾值 (boolean) 的話，就不是用 <code>get</code> 前綴，是用 <code>is</code> 前綴，雖然沒有語法錯誤，但是這個是約定俗成的。</p></div><hr><p><font size="6"><strong>修改 <code>addMessage2()</code></strong></font></p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage2</span><span class="params">(String message, <span class="type">int</span> level)</span> &#123;</span><br><span class="line">    addMessage(<span class="keyword">new</span> <span class="title class_">LogMessage</span>(tag, message, level));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isReserveNormalLog) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (level) &#123;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_VERBOSE:</span><br><span class="line">                Log.v(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_DEBUG:</span><br><span class="line">                Log.d(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_INFO:</span><br><span class="line">                Log.i(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_WARN:</span><br><span class="line">                Log.w(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_ERROR:</span><br><span class="line">                Log.e(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LogMessage.LEVEL_ASSERT:</span><br><span class="line">                Log.wtf(tag, message);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<hr>
<h1 id="源代碼"><a href="#源代碼" class="headerlink" title="源代碼"></a>源代碼</h1><p>來到緊張又興奮的環節！，要源代碼是嗎？</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼 </summary>
              <div class="content">
              <div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Layouts</a></li><li class="tab"><a class="#source_code-2">LogMessage.java</a></li><li class="tab"><a class="#source_code-3">LogMessageBuilder.java</a></li><li class="tab"><a class="#source_code-4">LoggerApplication.java</a></li><li class="tab"><a class="#source_code-5">LogMessageAdapter.java</a></li><li class="tab"><a class="#source_code-6">LoggerView.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_logger.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.recyclerview.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/rv_list_log&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_log_message_list_item.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/img_log_icon&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;15dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;top&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;7dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_baseline_info_24&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_log_message&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:lineSpacingExtra</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;This is a log message.\nSecond line testing.&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:typeface</span>=<span class="string">&quot;monospace&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>LogMessage.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessage</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> messageLevel, messageColor, messageTypeface, messageIcon;</span><br><span class="line">    <span class="keyword">private</span> String tag, message;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Log 訊息優先序 / 級別 (由小至大)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_VERBOSE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_DEBUG</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_INFO</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_WARN</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_ERROR</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">LEVEL_ASSERT</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Log 級別偏好顏色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_RED</span> <span class="operator">=</span> <span class="number">0xFFeb3b5a</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_ORANGE</span> <span class="operator">=</span> <span class="number">0xFffa8231</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_CYAN</span> <span class="operator">=</span> <span class="number">0xFF2bcbba</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">C_GREEN</span> <span class="operator">=</span> <span class="number">0xFF20bf6b</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LogMessage</span><span class="params">(String tag, String message, <span class="type">int</span> level)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (tag == <span class="literal">null</span>) tag = LogMessage.class.getSimpleName();</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="built_in">this</span>.level = level;</span><br><span class="line"></span><br><span class="line">        setupMessageStyles();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageLevel</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageLevel; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageTypeface</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageTypeface; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMessageIcon</span><span class="params">()</span> &#123; <span class="keyword">return</span> messageIcon; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTag</span><span class="params">()</span> &#123; <span class="keyword">return</span> tag; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123; <span class="keyword">return</span> message; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageLevel</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageLevel = messageLevel; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageColor = messageColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageTypeface</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageTypeface = messageTypeface; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessageIcon</span><span class="params">()</span> &#123; <span class="built_in">this</span>.messageIcon = messageIcon; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">()</span> &#123; <span class="built_in">this</span>.tag = tag; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMessage</span><span class="params">()</span> &#123; <span class="built_in">this</span>.message = message; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupMessageStyles</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (level) &#123;</span><br><span class="line">            <span class="keyword">case</span> LEVEL_DEBUG:</span><br><span class="line">                messageColor = C_CYAN;</span><br><span class="line">                messageTypeface = Typeface.NORMAL;</span><br><span class="line">                messageIcon = R.drawable.ic_baseline_bug_report_24;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEVEL_WARN:</span><br><span class="line">                messageColor = C_ORANGE;</span><br><span class="line">                messageTypeface = Typeface.NORMAL;</span><br><span class="line">                messageIcon = R.drawable.ic_baseline_warning_24;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEVEL_ERROR:</span><br><span class="line">            <span class="keyword">case</span> LEVEL_ASSERT:</span><br><span class="line">                messageColor = C_RED;</span><br><span class="line">                messageTypeface = Typeface.BOLD;</span><br><span class="line">                messageIcon = R.drawable.ic_baseline_error_24;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LEVEL_INFO:</span><br><span class="line">            <span class="keyword">case</span> LEVEL_VERBOSE:</span><br><span class="line">                messageColor = C_GREEN;</span><br><span class="line">                messageTypeface = Typeface.NORMAL;</span><br><span class="line">                messageIcon = R.drawable.ic_baseline_info_24;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>LogMessageBuilder.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessageBuilder</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LogMessageBuilder instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;LogMessage&gt; list;</span><br><span class="line">    <span class="keyword">private</span> OnNewMessageListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String tag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OnNewMessageListener</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">onNewMessage</span><span class="params">(List&lt;LogMessage&gt; list, LogMessage message)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">LogMessageBuilder</span><span class="params">()</span> &#123;</span><br><span class="line">        list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LogMessageBuilder <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="literal">null</span>) instance = <span class="keyword">new</span> <span class="title class_">LogMessageBuilder</span>();</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTag</span><span class="params">()</span> &#123; <span class="keyword">return</span> tag; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">()</span> &#123; <span class="built_in">this</span>.tag = tag; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOnNewMessageListener</span><span class="params">(OnNewMessageListener listener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listener = listener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        list.remove(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">        list.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage</span><span class="params">(LogMessage message)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (listener != <span class="literal">null</span>) listener.onNewMessage(list, message);</span><br><span class="line">        list.add(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addMessage2</span><span class="params">(String message, <span class="type">int</span> level)</span> &#123;</span><br><span class="line">        addMessage(<span class="keyword">new</span> <span class="title class_">LogMessage</span>(tag, message, level));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">verbose</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_VERBOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">debug</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_DEBUG);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">info</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_INFO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">warn</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_WARN);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">error</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">failure</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        addMessage2(message, LogMessage.LEVEL_ASSERT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>LoggerApplication.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoggerApplication</span> <span class="keyword">extends</span> <span class="title class_">Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> LoggerApplication.class.getSimpleName();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">LogMessageBuilder</span> <span class="variable">log</span> <span class="operator">=</span> getLogMessageBuilder();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LogMessageBuilder <span class="title function_">getLogMessageBuilder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> LogMessageBuilder.getInstance();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-5"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>LogMessageAdapter.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogMessageAdapter</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.Adapter&lt;LogMessageAdapter.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LayoutLogMessageListItemBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;LogMessage&gt; logMessageList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> LogMessageBuilder logMessageArray;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewHolder holder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LogMessageAdapter</span><span class="params">()</span> &#123;</span><br><span class="line">        logMessageArray = LogMessageBuilder.getInstance();</span><br><span class="line">        logMessageArray.setOnNewMessageListener((list, message) -&gt; &#123;</span><br><span class="line">            logMessageList.clear();</span><br><span class="line">            logMessageList.addAll(list);</span><br><span class="line">            notifyDataSetChanged();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LogMessageAdapter.ViewHolder <span class="title function_">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="type">int</span> viewType)</span> &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">context</span> <span class="operator">=</span> parent.getContext();</span><br><span class="line">        <span class="type">var</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">        binding = LayoutLogMessageListItemBinding.inflate(inflater, parent, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> LogMessageAdapter.ViewHolder holder, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="type">LogMessage</span> <span class="variable">logMessage</span> <span class="operator">=</span> logMessageList.get(position);</span><br><span class="line">        holder.bind(logMessage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getItemCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> logMessageList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> <span class="keyword">extends</span> <span class="title class_">RecyclerView</span>.ViewHolder &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> View item;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> TextView messageView;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">final</span> ImageView messageIconView;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ViewHolder</span><span class="params">(View itemView)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>(itemView);</span><br><span class="line">            messageView = itemView.findViewById(R.id.tv_log_message);</span><br><span class="line">            messageIconView = itemView.findViewById(R.id.img_log_icon);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bind</span><span class="params">(LogMessage logMessage)</span> &#123;</span><br><span class="line">            <span class="type">var</span> <span class="variable">color</span> <span class="operator">=</span> logMessage.getMessageColor();</span><br><span class="line">            <span class="type">var</span> <span class="variable">fullMessage</span> <span class="operator">=</span> <span class="string">&quot;[&quot;</span> + logMessage.getTag() + <span class="string">&quot;] &quot;</span> + logMessage.getMessage();</span><br><span class="line"></span><br><span class="line">            itemView.setBackgroundColor(ColorUtils.setAlphaComponent(color, messageBgAlpha));</span><br><span class="line"></span><br><span class="line">            messageView.setText(fullMessage);</span><br><span class="line">            messageView.setTextColor(color);</span><br><span class="line">            messageView.setTypeface(Typeface.MONOSPACE, logMessage.getMessageTypeface());</span><br><span class="line"></span><br><span class="line">            messageIconView.setImageResource(logMessage.getMessageIcon());</span><br><span class="line">            messageIconView.setColorFilter(color);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-6"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>LoggerView.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoggerView</span> <span class="keyword">extends</span> <span class="title class_">LinearLayout</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> LoggerView.class.getSimpleName();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LayoutLoggerBinding binding;</span><br><span class="line">    <span class="keyword">private</span> LogMessageAdapter adapter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        initView(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        initView(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoggerView</span><span class="params">(Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        initView(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">inflater</span> <span class="operator">=</span> LayoutInflater.from(context);</span><br><span class="line">        binding = LayoutLoggerBinding.inflate(inflater);</span><br><span class="line"></span><br><span class="line">        <span class="type">var</span> <span class="variable">root</span> <span class="operator">=</span> binding.getRoot();</span><br><span class="line">        addView(root);</span><br><span class="line">        setLayoutWidth(root, LayoutParams.MATCH_PARENT);</span><br><span class="line"></span><br><span class="line">        <span class="type">var</span> <span class="variable">logList</span> <span class="operator">=</span> binding.rvListLog;</span><br><span class="line">        adapter = <span class="keyword">new</span> <span class="title class_">LogMessageAdapter</span>();</span><br><span class="line"></span><br><span class="line">        logList.setAdapter(adapter);</span><br><span class="line">        logList.setLayoutManager(<span class="keyword">new</span> <span class="title class_">LinearLayoutManager</span>(context));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LayoutLoggerBinding <span class="title function_">getBinding</span><span class="params">()</span> &#123; <span class="keyword">return</span> binding; &#125;</span><br><span class="line">    <span class="keyword">public</span> LogMessageAdapter <span class="title function_">getAdapter</span><span class="params">()</span> &#123; <span class="keyword">return</span> adapter; &#125;</span><br><span class="line">    <span class="keyword">public</span> RecyclerView <span class="title function_">getRecyclerView</span><span class="params">()</span> &#123; <span class="keyword">return</span> binding.rvListLog; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setLayoutWidth</span><span class="params">(View v, <span class="type">int</span> width)</span> &#123;</span><br><span class="line">        <span class="type">var</span> <span class="variable">layoutParams</span> <span class="operator">=</span> (LinearLayout.LayoutParams) v.getLayoutParams();</span><br><span class="line">        layoutParams.width = width;</span><br><span class="line">        v.setLayoutParams(layoutParams);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>
              </div>
            </details>]]></content>
      <categories>
        <category>Android 開發</category>
        <category>自訂組件</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
      </tags>
  </entry>
  <entry>
    <title>外部存取之寫入與讀取</title>
    <url>//post/android_dev_external_storage.html</url>
    <content><![CDATA[<p>寫入與讀取是利用外部存取機制，透過寫入與讀取，程序可根據所予的檔案路徑，以字符形式寫入和讀取數據，尤其編寫一個檔案總管的客戶端程序，寫入與讀取乃是重要的核心部分。</p>
<hr>
<h1 id="為應用程序設定權限"><a href="#為應用程序設定權限" class="headerlink" title="為應用程序設定權限"></a>為應用程序設定權限</h1><p>首先，我們需要在 <code>AndroidManifest.xml</code> 設定權限至應用程序，負責掌控應用程序權限的是<code>&lt;uses-permission&gt;</code> 標示，其屬性 <code>android:name</code> 就是根據官方所定義權限的名稱。</p>
<p>如果不設定相關權限而利用該權限編寫相關程序，則會顯示錯誤。</p>
<hr>
<h2 id="設定寫入和讀取外部貯存權限"><a href="#設定寫入和讀取外部貯存權限" class="headerlink" title="設定寫入和讀取外部貯存權限"></a>設定寫入和讀取外部貯存權限</h2><p>以下就是設定寫入和讀取外部貯存的權限：</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- write storage --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- read storage --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">...</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="詢問用戶開啟權限"><a href="#詢問用戶開啟權限" class="headerlink" title="詢問用戶開啟權限"></a>詢問用戶開啟權限</h1><p>儘管我們能夠順利地把權限設定好了，完成編譯後，應用程序並不會自動向用戶詢問權限開啟，故此，我們需要在 <code>MainActivity.java</code> 編寫相關事件。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Import libraries</span></span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> androidx.core.app.ActivityCompat;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the permission code of request</span></span><br><span class="line"><span class="type">int</span> <span class="variable">REQUEST_CODE</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">writePerms</span> <span class="operator">=</span> Manifest.permission.WRITE_EXTERNAL_STORAGE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ActivityCompat.checkSelfPermission(<span class="built_in">this</span>, writePerms) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    <span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale(<span class="built_in">this</span>, writePerms)) &#123;</span><br><span class="line">        ActivityCompat.requestPermissions(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; writePerms &#125;, REQUEST_CODE);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ActivityCompat.requestPermissions(<span class="built_in">this</span>, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; writePerms &#125;, REQUEST_CODE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Android-11-版本限制"><a href="#Android-11-版本限制" class="headerlink" title="Android 11 版本限制"></a>Android 11 版本限制</h1><p>自 Android 11 版本起，外部存取在 Android 11 或以上版本之裝置不起作用，你可以把<code>targetSdkVersion</code> 降至 <code>29</code> ，或開啟 <code>requestLegacyExternalStorage</code> 設定。</p>
<hr>
<h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Android 10 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;29&quot;</span> /&gt;</span>   </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Android 11 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">&quot;30&quot;</span> /&gt;</span>     </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:requestLegacyExternalStorage</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>完成了以上的步驟後，就可以開始編寫<code>Java</code>編碼，實現寫入數據和讀取數據的程序。</p>
<hr>
<h1 id="略過接下來的-Java-編程步驟"><a href="#略過接下來的-Java-編程步驟" class="headerlink" title="略過接下來的 Java 編程步驟"></a>略過接下來的 Java 編程步驟</h1><p>若你不想按教學自行編寫編碼或並非 Sketchware Pro 用戶，你可以直接從這裏下載 <code>FileUtil.java</code> 檔案直接使用，但記得把這檔案內的 <code>package</code> 修改為你的應用程序的 <code>package</code>，否則會出現錯誤。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bluewhaleyt.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentResolver;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="FileUtil-java-檔案下載"><a href="#FileUtil-java-檔案下載" class="headerlink" title="FileUtil.java 檔案下載"></a>FileUtil.java 檔案下載</h2><a class="button " href="https://www.mediafire.com/file/2g57vdcuk19nwch/FileUtil.java/file" title="FileUtil.java"><i class="fa-solid fa-download"></i> FileUtil.java</a>

<hr>
<h1 id="開始編程"><a href="#開始編程" class="headerlink" title="開始編程"></a>開始編程</h1><hr>
<h2 id="匯入函式庫"><a href="#匯入函式庫" class="headerlink" title="匯入函式庫"></a>匯入函式庫</h2><p>我們所需要的函式庫如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br></pre></td></tr></table></figure></div>

<p>在編寫寫入數據的程序前，我們需要先編寫建立新檔案的程序，繼而方可執行寫入和讀取的工序。</p>
<p>以下程序編碼取至於Sketchware Pro 的 <code>FileUtil.java</code> 附加檔案。</p>
<hr>
<h2 id="程序：建立新資訊夾"><a href="#程序：建立新資訊夾" class="headerlink" title="程序：建立新資訊夾"></a>程序：建立新資訊夾</h2><p>先編寫一個建立新資料夾的程序，如該檔案路徑在裝置上不存在，那就建立新資料夾。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// create a new directory</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">makeDir</span><span class="params">(String path)</span> &#123;</span><br><span class="line">    <span class="comment">// if path is not exist, then create it as a new directory </span></span><br><span class="line">    <span class="keyword">if</span> (!isExistFile(path)) &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">        file.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="程序：建立新檔案"><a href="#程序：建立新檔案" class="headerlink" title="程序：建立新檔案"></a>程序：建立新檔案</h2><p>再建立新檔案，同樣地，也是根據該檔案路徑是否存在，而執行相關程序。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// create a new file</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createNewFile</span><span class="params">(String path)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">lastSep</span> <span class="operator">=</span> path.lastIndexOf(File.separator);</span><br><span class="line">    <span class="keyword">if</span> (lastSep &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dirPath</span> <span class="operator">=</span> path.substring(<span class="number">0</span>, lastSep);</span><br><span class="line">        <span class="comment">// create a new directory</span></span><br><span class="line">        makeDir(dirPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// if the path of file is not exist, then create a new file</span></span><br><span class="line">        <span class="keyword">if</span> (!file.exists())</span><br><span class="line">            file.createNewFile();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="comment">// catch errors when it&#x27;s necessary</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="File-separator-的額外說明"><a href="#File-separator-的額外說明" class="headerlink" title="File.separator 的額外說明"></a>File.separator 的額外說明</h3><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>File.separator</code> 的作用與Windows操作系統的分隔符 <code>/</code> 或 <code>\</code> 有異曲同工之妙的地方，主要是因為Linux操作系統不懂得識別這些分隔符，因此 <code>File.separator</code> 就是可以稱上為 Linux 度身訂造的分隔符，在UNIX操作系統中，此分隔符會被識別為 <code>/</code> 。結論就是，使用 <code>File.separator</code> 能夠保證在任何操作系統運作不會出錯。除了<code>separator</code>，與它類似的還有 <code>separatorChar</code> 、 <code>pathSeparatorChar</code> 以及 <code>pathSeparator</code>。</p>
</div>

<hr>
<h2 id="程序：寫入數據"><a href="#程序：寫入數據" class="headerlink" title="程序：寫入數據"></a>程序：寫入數據</h2><p>於指定檔案內寫入數據，但要留意，<code>FileWriter#flush()</code> 是建議使用的，因為它能夠有效清除緩衝區內所有數據，以確保在寫入數據的過程中，沒有任何數據流失。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// write data to the file</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">writeFile</span><span class="params">(String path, String str)</span> &#123;</span><br><span class="line">    createNewFile(path);</span><br><span class="line">    <span class="type">FileWriter</span> <span class="variable">fileWriter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fileWriter = <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="keyword">new</span> <span class="title class_">File</span>(path), <span class="literal">false</span>);</span><br><span class="line">        fileWriter.write(str);</span><br><span class="line">        <span class="comment">// clear all data of buffers</span></span><br><span class="line">        fileWriter.flush();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="comment">// catch errors when it&#x27;s necessary</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (fileWriter != <span class="literal">null</span>)</span><br><span class="line">                fileWriter.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// catch errors when it&#x27;s necessary</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="程序：讀取數據"><a href="#程序：讀取數據" class="headerlink" title="程序：讀取數據"></a>程序：讀取數據</h2><p>讀取指定檔案的數據，主要是使用 <code>StringBuilder#append()</code> 來把讀取後的數據附加至目標。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// read data from the file</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readFile</span><span class="params">(String path)</span> &#123;</span><br><span class="line">    createNewFile(path);</span><br><span class="line"></span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    <span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fr = <span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="keyword">new</span> <span class="title class_">File</span>(path));</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] buff = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((length = fr.read(buff)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            sb.append(<span class="keyword">new</span> <span class="title class_">String</span>(buff, <span class="number">0</span>, length));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="comment">// catch errors when it&#x27;s necessary</span></span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (fr != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fr.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                <span class="comment">// catch errors when it&#x27;s necessary</span></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="調用函數"><a href="#調用函數" class="headerlink" title="調用函數"></a>調用函數</h1><p>好了，主要要編寫的程序基本上就完工的了，但別忘記，我們所編寫的目前是函數，要令到它們能夠被執行，需要調用函數。</p>
<p>假設以上的程序編寫在 <code>FileUtil.java</code> 內，而 <code>MainActivity.java</code> 就是主要的 <code>Java</code> 檔案，以下就是以上所編寫函數的基本調用示例，<code>filePath</code> 是目標檔案路徑，而 <code>text</code> 就是為目標檔案而命名的檔案名稱。</p>
<p>主要調用函數：<code>writeFile()</code> 和 <code>readFile()</code></p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// write data to the file</span></span><br><span class="line">FileUtil.writeFile(String filePath, String text);</span><br><span class="line"></span><br><span class="line"><span class="comment">// read data from the file</span></span><br><span class="line">FileUtil.readFile(String filePath);</span><br></pre></td></tr></table></figure></div>

<hr>
<p>好了，教學就來到這裏了，希望大家學懂怎樣在 Android 開發中使用外部存取，下次再見。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>動態獲取 Material You 樣式色彩值</title>
    <url>//post/android_dev_get_dynamic_color.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我們平常要獲取 Material 樣式的色彩來設定元件的文本顏色等，都會在 xml 佈局文件中使用 <code>?attr/</code> 這個前綴，例如套用 <code>?attr/colorPrimary</code> 或 <code>?colorPrimary</code> ，可以把指定元件的特性用至<strong>主要顏色</strong>（primary）。</p>
<p>例如：</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello World&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>可是，如果我們要以 Java 編碼<strong>程式化獲取</strong>這些顏色呢？那就要用 Material 3 的 Dynamic Color 工具。</p>
<hr>
<h1 id="運作原理"><a href="#運作原理" class="headerlink" title="運作原理"></a>運作原理</h1><p>把 <code>R.attr</code> （即是 <code>?attr/</code>）所貯存的色彩值轉換為<strong>二進位陣列</strong> <code>TypedArray</code>，再<strong>從這個陣列獲取相應的顏色</strong>。</p>
<p>在獲取顏色前，我們會有這樣的結構：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (DynamicColors.isDynamicColorAvailable()) &#123;</span><br><span class="line">    <span class="type">Context</span> <span class="variable">dynamicColorContext</span> <span class="operator">=</span> DynamicColors.wrapContextIfAvailable(context);</span><br><span class="line">    <span class="type">int</span>[] attrsToResolve = &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><code>attrsToResolve</code> 是一個以 <code>int</code> <strong>整數數據類型的陣列</strong>，例如我們要獲取 <code>colorPrimary</code> 的顏色值，如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] attrsToResolve = &#123;</span><br><span class="line">    R.attr.colorPrimary,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">var</span> <span class="variable">typedArray</span> <span class="operator">=</span> dynamicColorContext.obtainStyledAttributes(attrsToResolve);</span><br><span class="line"><span class="type">var</span> <span class="variable">primary</span> <span class="operator">=</span> typedArray.getColor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">typedArray.recycle();</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>要注意的是 <code>typedArray.getColor(0, 0)</code> 第一個參數的值是<strong>根據 <code>attrsToResolve</code> 的次序來判斷</strong>。</p>
</div>

<p>即是如果我要獲取另一個值，如新增 <code>R.attr.colorSecondary</code> 獲取次要顏色，就會是 <code>typedArray.getColor(1, 0)</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] attrsToResolve = &#123;</span><br><span class="line">    R.attr.colorPrimary,</span><br><span class="line marked">    R.attr.colorSecondary</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">var</span> <span class="variable">typedArray</span> <span class="operator">=</span> dynamicColorContext.obtainStyledAttributes(attrsToResolve);</span><br><span class="line"><span class="type">var</span> <span class="variable">primary</span> <span class="operator">=</span> typedArray.getColor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line marked"><span class="type">var</span> <span class="variable">secondary</span> <span class="operator">=</span> typedArray.getColor(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">typedArray.recycle();</span><br></pre></td></tr></table></figure></div>

<p>當然，如果你把 <code>R.attr.colorSecondary</code> 新增在 <code>R.attr colorPrimary</code> <strong>之上</strong>，程式<strong>便會先解釋 <code>R.attr.colorSecondary</code></strong> ，就是 <code>typedArray.getColor(0, 0)</code>。簡而言之，就是<strong>先後次序問題</strong>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] attrsToResolve = &#123;</span><br><span class="line marked">    R.attr.colorSecondary,</span><br><span class="line">    R.attr.colorPrimary</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">var</span> <span class="variable">typedArray</span> <span class="operator">=</span> dynamicColorContext.obtainStyledAttributes(attrsToResolve);</span><br><span class="line marked"><span class="type">var</span> <span class="variable">secondary</span> <span class="operator">=</span> typedArray.getColor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="type">var</span> <span class="variable">primary</span> <span class="operator">=</span> typedArray.getColor(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">typedArray.recycle();</span><br></pre></td></tr></table></figure></div>

<p>好了，那 <code>primary</code> 和 <code>secondary</code> 就是我們要獲取的顏色，現在可以使用，如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">textView.setTextColor(primary);</span><br><span class="line">button.setBackgroundTint(ColorStateList.valueOf(secondary));</span><br></pre></td></tr></table></figure></div>

<p>如是者，Material You 的 24 種色彩就是這樣獲取：</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>點我看代碼 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">TypedArray typedArray;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> primary, onPrimary, primaryContainer, onPrimaryContainer,</span><br><span class="line">    secondary, onSecondary, secondaryContainer, onSecondaryContainer,</span><br><span class="line">    tertiary, onTertiary, tertiaryContainer, onTertiaryContainer,</span><br><span class="line">    error, onError, errorContainer, onErrorContainer,</span><br><span class="line">    background, onBackground,</span><br><span class="line">    surface, onSurface,</span><br><span class="line">    surfaceVariant, onSurfaceVariant,</span><br><span class="line">    outline, outlineVariant;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(&quot;ResourceType&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">DynamicColorsUtil</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (DynamicColors.isDynamicColorAvailable()) &#123;</span><br><span class="line">        <span class="type">Context</span> <span class="variable">dynamicColorContext</span> <span class="operator">=</span> DynamicColors.wrapContextIfAvailable(context);</span><br><span class="line">        <span class="type">int</span>[] attrsToResolve = &#123;</span><br><span class="line">            R.attr.colorPrimary,</span><br><span class="line">            R.attr.colorOnPrimary,</span><br><span class="line">            R.attr.colorPrimaryContainer,</span><br><span class="line">            R.attr.colorOnPrimaryContainer,</span><br><span class="line"></span><br><span class="line">            R.attr.colorSecondary,</span><br><span class="line">            R.attr.colorOnSecondary,</span><br><span class="line">            R.attr.colorSecondaryContainer,</span><br><span class="line">            R.attr.colorOnSecondaryContainer,</span><br><span class="line"></span><br><span class="line">            R.attr.colorTertiary,</span><br><span class="line">            R.attr.colorOnTertiary,</span><br><span class="line">            R.attr.colorTertiaryContainer,</span><br><span class="line">            R.attr.colorOnTertiaryContainer,</span><br><span class="line"></span><br><span class="line">            R.attr.colorError,</span><br><span class="line">            R.attr.colorOnError,</span><br><span class="line">            R.attr.colorErrorContainer,</span><br><span class="line">            R.attr.colorOnErrorContainer,</span><br><span class="line"></span><br><span class="line">            R.attr.backgroundColor,</span><br><span class="line">            R.attr.colorOnBackground,</span><br><span class="line">            R.attr.colorSurface,</span><br><span class="line">            R.attr.colorOnSurface,</span><br><span class="line">            R.attr.colorSurfaceVariant,</span><br><span class="line">            R.attr.colorOnSurfaceVariant,</span><br><span class="line">            R.attr.colorOutline,</span><br><span class="line">            R.attr.colorOutlineVariant,</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        typedArray = dynamicColorContext.obtainStyledAttributes(attrsToResolve);</span><br><span class="line"></span><br><span class="line">        primary = typedArray.getColor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        onPrimary = typedArray.getColor(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        primaryContainer = typedArray.getColor(<span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">        onPrimaryContainer = typedArray.getColor(<span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        secondary = typedArray.getColor(<span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line">        onSecondary = typedArray.getColor(<span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">        secondaryContainer = typedArray.getColor(<span class="number">6</span>, <span class="number">0</span>);</span><br><span class="line">        onSecondaryContainer = typedArray.getColor(<span class="number">7</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        tertiary = typedArray.getColor(<span class="number">8</span>, <span class="number">0</span>);</span><br><span class="line">        onTertiary = typedArray.getColor(<span class="number">9</span>, <span class="number">0</span>);</span><br><span class="line">        tertiaryContainer = typedArray.getColor(<span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">        onTertiaryContainer = typedArray.getColor(<span class="number">11</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        error = typedArray.getColor(<span class="number">12</span>, <span class="number">0</span>);</span><br><span class="line">        onError = typedArray.getColor(<span class="number">13</span>, <span class="number">0</span>);</span><br><span class="line">        errorContainer = typedArray.getColor(<span class="number">14</span>, <span class="number">0</span>);</span><br><span class="line">        onErrorContainer = typedArray.getColor(<span class="number">15</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        background = typedArray.getColor(<span class="number">16</span>, <span class="number">0</span>);</span><br><span class="line">        onBackground = typedArray.getColor(<span class="number">17</span>, <span class="number">0</span>);</span><br><span class="line">        surface = typedArray.getColor(<span class="number">18</span>, <span class="number">0</span>);</span><br><span class="line">        onSurface = typedArray.getColor(<span class="number">19</span>, <span class="number">0</span>);</span><br><span class="line">        surfaceVariant = typedArray.getColor(<span class="number">20</span>, <span class="number">0</span>);</span><br><span class="line">        onSurfaceVariant = typedArray.getColor(<span class="number">21</span>, <span class="number">0</span>);</span><br><span class="line">        outline = typedArray.getColor(<span class="number">22</span>, <span class="number">0</span>);</span><br><span class="line">        outlineVariant = typedArray.getColor(<span class="number">23</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        typedArray.recycle();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<hr>
<h1 id="透過函式庫-WhaleUtils"><a href="#透過函式庫-WhaleUtils" class="headerlink" title="透過函式庫 - WhaleUtils"></a>透過函式庫 - WhaleUtils</h1><p>的確，要編寫這樣才能解釋 24 種顏色，實在費時，你可以用 WhaleUtils 函式庫裏的 <code>DynamicColorsUtil</code> 助你一把。</p>
<p>首先你要初始化 <code>DynamicColorsUtil</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">DynamicColorsUtil</span> <span class="variable">dynamicColors</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DynamicColorsUtil</span>(context);</span><br></pre></td></tr></table></figure></div>

<p>例如你要獲取 <code>colorPrimary</code>，如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">dynamicColors.getColorPrimary();</span><br><span class="line">dynamicColors.getColorOnError();</span><br><span class="line"></span><br><span class="line"><span class="comment">// example</span></span><br><span class="line">textView.setTextColor(dynamicColors.getColorPrimary());</span><br><span class="line">button.setBackgroundTint(ColorStateList.valueOf(dynamicColors.getColorTertiary()));</span><br></pre></td></tr></table></figure></div>

<hr>
<p>就是這樣，再見。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>實現漸變色彩按鈕組件 GradientButton</title>
    <url>//post/android_dev_gradient_button.html</url>
    <content><![CDATA[<p>歡迎閱讀這篇文章。</p>
<p>在我們對 Android 開發中，暸解到有關 <code>Button</code> 按鈕組件，AppCompat 庫的是 <code>AppCompatButton</code>，Material 庫的就是 <code>MaterialButton</code>。</p>
<p>它們都有一個「共通點」，就是都不能直接修改成漸變色彩，使得在 Android 程式界面設計時，出現一些阻礙。話雖如此，要為按鈕實現漸變色彩是有可能的。</p>
<hr>
<h1 id="為按鈕實現漸變色彩的常見方案"><a href="#為按鈕實現漸變色彩的常見方案" class="headerlink" title="為按鈕實現漸變色彩的常見方案"></a>為按鈕實現漸變色彩的常見方案</h1><hr>
<h2 id="方法-1：設置-drawable-背景"><a href="#方法-1：設置-drawable-背景" class="headerlink" title="方法 1：設置 drawable 背景"></a>方法 1：設置 <code>drawable</code> 背景</h2><p>建立一個有漸變色彩的圖形。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>gradient_bg.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:type</span>=<span class="string">&quot;linear&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">&quot;#f6ee19&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">&quot;#115ede&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>再把這個 drawable 設置到指定的視圖 (View) 上。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/gradient_bg&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="方法-2：使用-GradientDrawable"><a href="#方法-2：使用-GradientDrawable" class="headerlink" title="方法 2：使用 GradientDrawable"></a>方法 2：使用 <code>GradientDrawable</code></h2><p>定義一個 <code>GradientDrawable</code>，其實跟 XML 的設置 drawable 差不多。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">GradientDrawable</span> <span class="variable">gd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>(</span><br><span class="line">    GradientDrawable.Orientation.TOP_BOTTOM,</span><br><span class="line">    &#123;</span><br><span class="line">        Color.parseColor(<span class="string">&quot;#008000&quot;</span>),</span><br><span class="line">        Color.parseColor(<span class="string">&quot;#ADFF2F&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line">btn.setBackground(gd);</span><br></pre></td></tr></table></figure></div>

<p>雖然是成功能做到，但是 <font size="5"><strong>不方便！</strong></font> 對吧？有什麼是比在 XML 直接使用組件更方便。</p>
<hr>
<h2 id="方法-3：自定義組件"><a href="#方法-3：自定義組件" class="headerlink" title="方法 3：自定義組件"></a>方法 3：自定義組件</h2><p>所以我們即將會將我們的想法實現出來！</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">GradientButton</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:startColor</span>=<span class="string">&quot;#008000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:endColor</span>=<span class="string">&quot;#ADFF2F&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<a class="button  large center" href="/post/android_dev_gradient_button.html#%E4%BD%BF%E7%94%A8%E7%B5%84%E4%BB%B6" title="點我化幻想為現實！"><i class="fa-duotone fa-wand-magic-sparkles"></i> 點我化幻想為現實！</a>

<hr>
<h1 id="組件實現"><a href="#組件實現" class="headerlink" title="組件實現"></a>組件實現</h1><hr>
<h2 id="預備-attrs-xml-檔案"><a href="#預備-attrs-xml-檔案" class="headerlink" title="預備 attrs.xml 檔案"></a>預備 <code>attrs.xml</code> 檔案</h2><p><code>attrs.xml</code> 檔案就是用來製作自定義的屬性，前綴將會是用 <code>app:</code>，預設是沒有這個檔案，你需要自行於 <code>res/values/</code> 建立。</p>
<p>在這教學，我們會命名這個組件為 <code>GradientButton</code>。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;GradientButton&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>我們會期望這個組件有以下基本屬性：</p>
<ul>
<li><code>startColor</code>: 起始色彩</li>
<li><code>endColor</code>: 結束色彩</li>
<li><code>orientation</code>: 漸變色彩的角度</li>
</ul>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;GradientButton&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;startColor&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;endColor&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;orientation&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;right_left&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;left_right&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;bottom_top&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;top_bottom&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫-GradientButton-類"><a href="#編寫-GradientButton-類" class="headerlink" title="編寫 GradientButton 類"></a>編寫 <code>GradientButton</code> 類</h2><p>因為 <code>MaterialButton</code> 功能好用，所以這個組件是會繼承它的程式，再另外附加漸變色的功能。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GradientButton</span> <span class="keyword">extends</span> <span class="title class_">MaterialButton</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="定義變量和常量"><a href="#定義變量和常量" class="headerlink" title="定義變量和常量"></a>定義變量和常量</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> startColor, endColor, orientation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_RIGHT_LEFT</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_LEFT_RIGHT</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_BOTTOM_TOP</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_TOP_BOTTOM</span> <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫預設必要的建構式"><a href="#編寫預設必要的建構式" class="headerlink" title="編寫預設必要的建構式"></a>編寫預設必要的建構式</h3><p>這些建構式是用以告知這個類是在 XML 可用的組件。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫存取子與變異子"><a href="#編寫存取子與變異子" class="headerlink" title="編寫存取子與變異子"></a>編寫存取子與變異子</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>存取子 (Getter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStartColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> startColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEndColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> endColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrientation</span><span class="params">()</span> &#123; <span class="keyword">return</span> orientation; &#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>變異子 (Setter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStartColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.startColor = startColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEndColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.endColor = endColor; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrientation</span><span class="params">()</span> &#123; <span class="built_in">this</span>.orientation = orientation; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫應用-XML-屬性"><a href="#編寫應用-XML-屬性" class="headerlink" title="編寫應用 XML 屬性"></a>編寫應用 XML 屬性</h3><p>你可以設定預設使用的漸變色，例漸變藍色：<code>#12a5fa</code>、<code>#6d7bfe</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_GRADIENT_BLUE_START</span> <span class="operator">=</span> <span class="number">0xFF12a5fa</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_GRADIENT_BLUE_END</span> <span class="operator">=</span> <span class="number">0xFF6d7bfe</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_ORIENTATION</span> <span class="operator">=</span> ORIENTATION_GRADIENT_RIGHT_LEFT;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyTypedArrays</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">    <span class="type">TypedArray</span> <span class="variable">ta</span> <span class="operator">=</span> context.obtainStyledAttributes(attrs, R.styleable.GradientButton, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        startColor = ta.getColor(R.styleable.Button_startColor, DEFAULT_GRADIENT_BLUE_START);</span><br><span class="line">        endColor = ta.getColor(R.styleable.GradientButton_endColor, DEFAULT_GRADIENT_BLUE_END);</span><br><span class="line">        orientation = ta.getInteger(R.styleable.GradientButton_button_orientation, DEFAULT_ORIENTATION);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        ta.recycle();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫設置漸變色程式"><a href="#編寫設置漸變色程式" class="headerlink" title="編寫設置漸變色程式"></a>編寫設置漸變色程式</h3><p>我們在 Java 程式中，不會用</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">setStartColor(startColor);</span><br><span class="line">setEndColor(endColor);</span><br></pre></td></tr></table></figure></div>

<p>這個方法姑且只供 XML 使用，我們可以新寫 <code>setGradient()</code> 方法。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGradient</span><span class="params">(<span class="type">int</span> startColor, <span class="type">int</span> endColor)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.startColor = startColor;</span><br><span class="line">    <span class="built_in">this</span>.endColor = endColor;</span><br><span class="line"></span><br><span class="line">    <span class="type">GradientDrawable</span> <span class="variable">gd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>();</span><br><span class="line">    gd.setColors(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123; startColor, endColor &#125;);</span><br><span class="line">    gd.setOrientation(getGDOrientation(orientation));</span><br><span class="line"></span><br><span class="line">    setBackground(gd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="判斷-Orientation"><a href="#判斷-Orientation" class="headerlink" title="判斷 Orientation"></a>判斷 Orientation</h4><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> GradientDrawable.Orientation <span class="title function_">getGDOrientation</span><span class="params">(<span class="type">int</span> orientationValue)</span> &#123;</span><br><span class="line">    GradientDrawable.<span class="type">Orientation</span> <span class="variable">orientation</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">switch</span> (orientationValue) &#123;</span><br><span class="line">        <span class="keyword">case</span> ORIENTATION_GRADIENT_RIGHT_LEFT:</span><br><span class="line">            orientation = GradientDrawable.Orientation.RIGHT_LEFT;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ORIENTATION_GRADIENT_LEFT_RIGHT:</span><br><span class="line">            orientation = GradientDrawable.Orientation.LEFT_RIGHT;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ORIENTATION_GRADIENT_BOTTOM_TOP:</span><br><span class="line">            orientation = GradientDrawable.Orientation.BOTTOM_TOP;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ORIENTATION_GRADIENT_TOP_BOTTOM:</span><br><span class="line">            orientation = GradientDrawable.Orientation.TOP_BOTTOM;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> orientation;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="編寫應用屬性"><a href="#編寫應用屬性" class="headerlink" title="編寫應用屬性"></a>編寫應用屬性</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyDefaultProperties</span><span class="params">()</span> &#123;</span><br><span class="line">    setBackgroundTintList(<span class="literal">null</span>);</span><br><span class="line">    setGradient(startColor, endColor);</span><br><span class="line">    setOrientation(orientation);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="初始化視圖"><a href="#初始化視圖" class="headerlink" title="初始化視圖"></a>初始化視圖</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context);</span><br><span class="line">    initView(context, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs);</span><br><span class="line">    initView(context, attrs);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    initView(context, attrs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">    applyTypedArrays(context, attrs);</span><br><span class="line">    applyDefaultProperties();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>那就大功告成了，現在可以使用這個組件。</p>
<hr>
<h1 id="使用組件"><a href="#使用組件" class="headerlink" title="使用組件"></a>使用組件</h1><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p><code>com.xxx.yyy</code> 是你的套件名稱，記得要修改。</p>
</div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.xxx.yyy.GradientButton</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Gradient button&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:startColor</span>=<span class="string">&quot;#12a5fa&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:endColor</span>=<span class="string">&quot;#6d7bfe&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:orientation</span>=<span class="string">&quot;left_right&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">GradientButton</span> <span class="variable">btn</span> <span class="operator">=</span> findViewById(R.id.btn);</span><br><span class="line"></span><br><span class="line">btn.setGradient(startColor, endColor);</span><br><span class="line">btn.setOrientation(GradientButton.ORIENTATION_GRADIENT_LEFT_RIGHT);</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="源代碼"><a href="#源代碼" class="headerlink" title="源代碼"></a>源代碼</h1><div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">attrs.xml</a></li><li class="tab"><a class="#source_code-2">GradientButton.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>attrs.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">&quot;GradientButton&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;startColor&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;endColor&quot;</span> <span class="attr">format</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">&quot;orientation&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;right_left&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;left_right&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;bottom_top&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flag</span> <span class="attr">name</span>=<span class="string">&quot;top_bottom&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>GradientButton.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GradientButton</span> <span class="keyword">extends</span> <span class="title class_">MaterialButton</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> startColor, endColor, orientation;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_RIGHT_LEFT</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_LEFT_RIGHT</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_BOTTOM_TOP</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ORIENTATION_GRADIENT_TOP_BOTTOM</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_GRADIENT_BLUE_START</span> <span class="operator">=</span> <span class="number">0xFF12a5fa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_GRADIENT_BLUE_END</span> <span class="operator">=</span> <span class="number">0xFF6d7bfe</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_ORIENTATION</span> <span class="operator">=</span> ORIENTATION_GRADIENT_RIGHT_LEFT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context);</span><br><span class="line">        initView(context, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs);</span><br><span class="line">        initView(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GradientButton</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        initView(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        applyTypedArrays(context, attrs);</span><br><span class="line">        applyDefaultProperties();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyTypedArrays</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="type">TypedArray</span> <span class="variable">ta</span> <span class="operator">=</span> context.obtainStyledAttributes(attrs, R.styleable.GradientButton, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            startColor = ta.getColor(R.styleable.Button_startColor, DEFAULT_GRADIENT_BLUE_START);</span><br><span class="line">            endColor = ta.getColor(R.styleable.GradientButton_endColor, DEFAULT_GRADIENT_BLUE_END);</span><br><span class="line">            orientation = ta.getInteger(R.styleable.GradientButton_button_orientation, DEFAULT_ORIENTATION);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            ta.recycle();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyDefaultProperties</span><span class="params">()</span> &#123;</span><br><span class="line">        setBackgroundTintList(<span class="literal">null</span>);</span><br><span class="line">        setGradient(startColor, endColor);</span><br><span class="line">        setOrientation(orientation);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGradient</span><span class="params">(<span class="type">int</span> startColor, <span class="type">int</span> endColor)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.startColor = startColor;</span><br><span class="line">        <span class="built_in">this</span>.endColor = endColor;</span><br><span class="line"></span><br><span class="line">        <span class="type">GradientDrawable</span> <span class="variable">gd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GradientDrawable</span>();</span><br><span class="line">        gd.setColors(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123; startColor, endColor &#125;);</span><br><span class="line">        gd.setOrientation(getGDOrientation(orientation));</span><br><span class="line"></span><br><span class="line">        setBackground(gd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> GradientDrawable.Orientation <span class="title function_">getGDOrientation</span><span class="params">(<span class="type">int</span> orientationValue)</span> &#123;</span><br><span class="line">        GradientDrawable.<span class="type">Orientation</span> <span class="variable">orientation</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (orientationValue) &#123;</span><br><span class="line">            <span class="keyword">case</span> ORIENTATION_GRADIENT_RIGHT_LEFT:</span><br><span class="line">                orientation = GradientDrawable.Orientation.RIGHT_LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ORIENTATION_GRADIENT_LEFT_RIGHT:</span><br><span class="line">                orientation = GradientDrawable.Orientation.LEFT_RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ORIENTATION_GRADIENT_BOTTOM_TOP:</span><br><span class="line">                orientation = GradientDrawable.Orientation.BOTTOM_TOP;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ORIENTATION_GRADIENT_TOP_BOTTOM:</span><br><span class="line">                orientation = GradientDrawable.Orientation.TOP_BOTTOM;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> orientation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getStartColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> startColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getEndColor</span><span class="params">()</span> &#123; <span class="keyword">return</span> endColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrientation</span><span class="params">()</span> &#123; <span class="keyword">return</span> orientation; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStartColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.startColor = startColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setEndColor</span><span class="params">()</span> &#123; <span class="built_in">this</span>.endColor = endColor; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setOrientation</span><span class="params">()</span> &#123; <span class="built_in">this</span>.orientation = orientation; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>]]></content>
      <categories>
        <category>Android 開發</category>
        <category>自訂組件</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
      </tags>
  </entry>
  <entry>
    <title>Create online compiler android app</title>
    <url>//post/android_dev_online-compiler.html</url>
    <content><![CDATA[<hr>
<p>Wanna type and compile code in your app on your own device? In this article, we will learn how to create an online Java compiler application using CodeX API, <strong>a powerful API which provides functions to compile and execute program codes</strong>.</p>
<p>Here is the documentaion of <a href="https://github.com/Jaagrav/CodeX-API" target="_blank">CodeX API</a> .</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>CodeX API is <strong>still in early stages development</strong> and <strong>not recommended to be used in production</strong> since it’s deployed in a Free tier on <a target="_blank" href="https://render.com">render</a>, which <strong>slows down the API sometimes</strong>. Plus, this is a simple online compiler application using CodeX API only. Therefore, there won’t be advanced features of compilation.</p>
</div>

<blockquote>
<p>However, a good news is that CodeX API <strong>supports standard inputs</strong> e.g. <code>Scanner</code> in Java, which helps us write simple programs with inputs on mobile.</p>
</blockquote>
<hr>
<h1 id="Manifest-Configuration"><a href="#Manifest-Configuration" class="headerlink" title="Manifest Configuration"></a>Manifest Configuration</h1><hr>
<h2 id="Set-permission"><a href="#Set-permission" class="headerlink" title="Set permission"></a>Set permission</h2><p>Since we are gonna build online compiler application, it <strong>requires Internet and network access</strong>. Therefore, we have to add these codes in <code>AndroidManifest.xml</code> to grant permissions for the application.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Allow-HTTP-URLs-access"><a href="#Allow-HTTP-URLs-access" class="headerlink" title="Allow HTTP URLs access"></a>Allow HTTP URLs access</h2><p>Starting from <strong>Android 9 (API level 28) and above</strong>, it disallows HTTP URLs by default. It will throw error messages informing that <strong>cleartext HTTP traffic is not permitted</strong> if there are programs accessing HTTP URLs.</p>
<p>If the URL can’t be really changed and connected from HTTP to HTTPS, while you want to use the HTTP URL to continue building your project.</p>
<p>Here are two popular solutions of resolving HTTP traffic errors:</p>
<hr>
<h3 id="Solution-1-Cleartext-Traffic"><a href="#Solution-1-Cleartext-Traffic" class="headerlink" title="Solution 1 - Cleartext Traffic"></a>Solution 1 - Cleartext Traffic</h3><p>In <code>AndroidManifest.xml</code>, set <code>android:usesCleartextTraffic</code> property to <code>true</code>.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:usesCleartextTraffic</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Solution-2-Allow-connections-to-specific-site"><a href="#Solution-2-Allow-connections-to-specific-site" class="headerlink" title="Solution 2 - Allow connections to specific site"></a>Solution 2 - Allow connections to specific site</h3><p>I used this method before, and I still recommend using it. The second way is to allow connections to specific sites.</p>
<p>Unlike Solution 1, we need to create a new XML file named <code>network_security_config.xml </code> in <code>/res/xml/</code>.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">domain-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">domain</span> <span class="attr">includeSubdomains</span>=<span class="string">&quot;true&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">domain-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>The <code>...</code> to be replaced is <strong>your desired HTTP URL</strong>. Once you put it inside the <code>&lt;domain&gt;</code>, it can be permitted and be accessed.</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>For example, if I want to enable this HTTP URL: <code>bluewhaleyt.ddns.net</code>, then I will do the following like this.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">network-security-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">domain-config</span> <span class="attr">cleartextTrafficPermitted</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">domain</span> <span class="attr">includeSubdomains</span>=<span class="string">&quot;true&quot;</span>&gt;</span>bluewhaleyt.ddns.net<span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">domain-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">network-security-config</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div>

<p>After doing this, you need to set <code>android:networkSecurityConfig</code> in the <code>AndroidManifest.xml</code>.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:networkSecurityConfig</span>=<span class="string">&quot;@xml/network_security_config&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>Done, it’s now ready to be accessed.</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Both solutions are great. To make it simple, I prefer Solution 1, which is much easier.</p>
</div>

<hr>
<h1 id="Create-Layout"><a href="#Create-Layout" class="headerlink" title="Create Layout"></a>Create Layout</h1><p>In this project, we will use Sora Editor as a code editor instead of using EditText. With this, we can type codes with syntax highlighting. However, the guide of using Sora Editor will not be written here. You can read this related <a target="_blank" href="using-sora-editor-with-textmate-0-18-1">article</a> for more info.</p>
<p>Here are dependencies of Sora Editor and the layout in case you are familiar with them.</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation(platform(<span class="string">&quot;io.github.Rosemoe.sora-editor:bom:0.20.2&quot;</span>))</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:editor&quot;</span>)</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:language-textmate&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">io.github.rosemoe.sora.widget.CodeEditor</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="RequestNetwork-Java-Files"><a href="#RequestNetwork-Java-Files" class="headerlink" title="RequestNetwork Java Files"></a>RequestNetwork Java Files</h1><p>Sketchware Pro provides the utils of network request components, <code>RequestNetwork.java</code> and <code>RequestNetworkController.java</code>. These are the useful utility program files helping us <strong>fetch data from URL easily</strong>.</p>
<p>We can simply bring these files to our project in case you don’t have them.</p>
<blockquote>
<p>Of course, you can use others like <code>HttpURLConnection</code> to do the same job.</p>
</blockquote>
<a class="button " href="https://www.mediafire.com/file/te1fpek885qhrl2/RequestNetwork.java/file" title="RequestNetwork.java"><i class="fa-solid fa-download"></i> RequestNetwork.java</a>

<a class="button " href="https://www.mediafire.com/file/df6c6k61zuobs0j/RequestNetworkController.java/file" title="RequestNetworkController.java"><i class="fa-solid fa-download"></i> RequestNetworkController.java</a>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>These files were simplified with <code>lambda</code> expressions.</p>
</div>

<p>Besides, we need to add <code>okhttp</code> dependency.</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation(platform(<span class="string">&quot;com.squareup.okhttp3:okhttp-bom:4.10.0&quot;</span>))</span><br><span class="line">implementation(<span class="string">&quot;com.squareup.okhttp3:okhttp&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<h2 id="Why-RequestNetwork-files"><a href="#Why-RequestNetwork-files" class="headerlink" title="Why RequestNetwork files?"></a>Why RequestNetwork files?</h2><p>We will use <code>POST</code> endpoint to execute the program script and fetch the compilation output later.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">requestNetwork.startRequestNetwork(RequestNetworkController.POST, url, <span class="string">&quot;api&quot;</span>, requestListener);</span><br></pre></td></tr></table></figure></div>

<p>These files help us do network data api fetching stuffs, which is efficient for us.</p>
<hr>
<h1 id="Use-CodeX-API"><a href="#Use-CodeX-API" class="headerlink" title="Use CodeX API"></a>Use CodeX API</h1><p>As aforementioned, we will build an online compiler application with CodeX API.</p>
<p>This is the URL that the API is located in: </p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.codex.jaagrav.in</span><br></pre></td></tr></table></figure></div>

<p>This URL <strong>is supposed not to be and unable to be directed</strong> but we will use this API to compile and execute program codes.</p>
<hr>
<h2 id="Create-a-Compiler-class"><a href="#Create-a-Compiler-class" class="headerlink" title="Create a Compiler class"></a>Create a Compiler class</h2><p>In order to make our project be clean, we will create a new Java class <code>Compiler.java</code> to do it so.</p>
<p>Your <code>Compiler.java</code> should be like this:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Compiler</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>In this class, there will be two methods, <code>init()</code> and <code>compile()</code>, <strong>both of them must be <code>public</code></strong> since they will be called in <code>MainActivity.java</code> later.</p>
<h2 id="Define-Variables"><a href="#Define-Variables" class="headerlink" title="Define Variables"></a>Define Variables</h2><p>Now, initialize the following variables.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://api.codex.jaagrav.in&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> RequestNetwork requestNetwork;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> RequestNetwork.RequestListener requestListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ModernDialog.Builder dialog;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> AlertDialog progressDialog;</span><br></pre></td></tr></table></figure></div>

<p><code>ModernDialog.Builder</code> belongs to <code>ModernDialog</code> library which is created by myself. If you want to use this library, you can read this <a target="_blank" href="modern-dialog-tutorial">article</a>.</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Instead of using <code>ModernDialog</code>, you can either use <code>AlertDialog</code> or <code>MaterialAlertDialogBuilder</code>.</p>
</div>

<hr>
<h2 id="Initialize-RequestNetwork"><a href="#Initialize-RequestNetwork" class="headerlink" title="Initialize RequestNetwork"></a>Initialize RequestNetwork</h2><p>To start a new instance of <code>RequestNetwork</code>, add the code below.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">RequestNetwork</span> <span class="variable">requestNetwork</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestNetwork</span>(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure></div>

<p>We will create a new method <code>init()</code> to do the initialization stuffs.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    requestNetwork = <span class="keyword">new</span> <span class="title class_">RequestNetwork</span>(activity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Use-RequestListener"><a href="#Use-RequestListener" class="headerlink" title="Use RequestListener"></a>Use RequestListener</h2><p>This is the basic start of <code>RequestListener</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">RequestListener</span> <span class="variable">requestListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestNetwork</span>.RequestListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(String tag, String response, HashMap&lt;String, Object&gt; responseHeaders)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onErrorResponse</span><span class="params">(String tag, String message)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>onResponse()</code> is to <strong>fetch data from URLs</strong> if there’s no errors occuring.<br><code>onErrorResponse()</code> is to <strong>throw errors</strong> during the issues of fetching data from URLs.</p>
</div>

<hr>
<h2 id="Loading-dialog"><a href="#Loading-dialog" class="headerlink" title="Loading dialog"></a>Loading dialog</h2><p>In both <code>onResponse()</code> and <code>onErrorResponse()</code> methods, we need to define a progress dialog to tell users that <strong>the data from URLs is fetching, since it would take time to fetch</strong>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">compile</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>Create a new method <code>compile()</code> and add the progress dialog.</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>In this article, progress dialog will not be detailed, see <a target="_blank" href="implement-android-custom-progress-dialog">article</a>.</p>
</div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/pbLoading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvText&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;TextView&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">compile</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">    <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getLayoutInflater().inflate(R.layout.dialog_progress, <span class="literal">null</span>);</span><br><span class="line">    <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> view.findViewById(R.id.tvText);</span><br><span class="line">    tv.setText(<span class="string">&quot;Compiling, please wait ...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    progressDialog = <span class="keyword">new</span> <span class="title class_">MaterialAlertDialogBuilder</span>(activity).create();</span><br><span class="line">    progressDialog.setView(view);</span><br><span class="line">    progressDialog.setCancelable(<span class="literal">false</span>);</span><br><span class="line">    progressDialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>When there are responses, dismiss the progress dialog.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(String tag, String response, HashMap&lt;String, Object&gt; responseHeaders)</span> &#123;</span><br><span class="line">    progressDialog.dismiss();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onErrorResponse</span><span class="params">(String tag, String message)</span> &#123;</span><br><span class="line">    progressDialog.dismiss();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Connection-Error-Alert"><a href="#Connection-Error-Alert" class="headerlink" title="Connection Error Alert"></a>Connection Error Alert</h2><p>Once again, this is an online compiler which requires Internet connection. We need to alert users activating it before starting to code.</p>
<p>To do this, we need to use <code>onErrorResponse()</code> method.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onErrorResponse</span><span class="params">(String tag, String message)</span> &#123;</span><br><span class="line">    progressDialog.dismiss();</span><br><span class="line"></span><br><span class="line">    dialog.setTitle(<span class="string">&quot;No Internet&quot;</span>);</span><br><span class="line">    dialog.setMessage(message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Fetch-data"><a href="#Fetch-data" class="headerlink" title="Fetch data"></a>Fetch data</h2><p>We will use <code>Gson</code> to stringify JSON, add dependency:</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.google.code.gson:gson:2.10&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>To put <code>response</code> as a part of JSON to <code>data</code> using <code>Gson</code>:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">data = <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(response, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;HashMap&lt;String, Object&gt;&gt;()&#123;&#125;.getType());</span><br></pre></td></tr></table></figure></div>

<p>Therefore, we have the following code.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(String tag, String response, HashMap&lt;String, Object&gt; responseHeaders)</span> &#123;</span><br><span class="line">    progressDialog.dismiss();</span><br><span class="line"></span><br><span class="line">    data = <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(response, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;HashMap&lt;String, Object&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>In the <a target="_blank" href="https://github.com/Jaagrav/CodeX-API">docs</a> of CodeX API, we can see there is a sample output of a NodeJS Program.</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;timeStamp&quot;</span>: <span class="number">1672439982964</span>,</span><br><span class="line">  <span class="string">&quot;status&quot;</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="string">&quot;output&quot;</span>: <span class="string">&quot;Enter your value: 12\n&quot;</span>,</span><br><span class="line">  <span class="string">&quot;error&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;language&quot;</span>: <span class="string">&quot;py&quot;</span>,</span><br><span class="line">  <span class="string">&quot;info&quot;</span>: <span class="string">&quot;Python 3.6.9\n&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>This code is exactly to get the output:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">data = <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(response, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;HashMap&lt;String, Object&gt;&gt;()&#123;&#125;.getType());</span><br></pre></td></tr></table></figure></div>

<p>You can simply inspect its content via <code>Log</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Log.d(TAG, String.valueOf(data));</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>TAG</code> is your Java class. Usually, if we define <code>TAG</code>, we will use the code like this below:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> MainActivity.class.getName();</span><br></pre></td></tr></table></figure></div>

<p>the <code>TAG</code>‘s value will be defined as <code>MainActivity</code>.</p>
</div>

<p>This is an example output from Android Studio’s Logcat:</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;timeStamp&quot;</span><span class="punctuation">:</span> <span class="number">1.672711656435E12</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hello World!\nScanner input: 43&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;language&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">200.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;info&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openjdk 11.0.17 2022-10-18 OpenJDK Runtime Environment (build 11.0.17+8-post-Ubuntu-1ubuntu218.04) OpenJDK 64-Bit Server VM (build 11.0.17+8-post-Ubuntu-1ubuntu218.04, mixed mode, sharing)&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Compilation"><a href="#Compilation" class="headerlink" title="Compilation"></a>Compilation</h2><p>CodeX API compilation needs requirement below:</p>
<ol>
<li><code>code</code>     - the code to be compiled</li>
<li><code>language</code> - the programming language to be used</li>
<li><code>input</code>    - the execution of program input</li>
</ol>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Here’s the programming languages available for CodeX API:</p>
<ul>
<li><code>js</code> - NodeJS (JavaScript)</li>
<li><code>java</code> - Java</li>
<li><code>c</code> - C</li>
<li><code>cpp</code> - C++</li>
<li><code>cs</code> - C#</li>
<li><code>py</code> - Python</li>
<li><code>go</code> - GoLang</li>
</ul>
<p>The inline code is the <strong>language as a payload</strong>. For instance, if you want to compile C++, the compilation shouldn’t be loaded as <code>c++</code>. Instead, it should be <code>cpp</code>.</p>
</div>

<p>Here’s how to set the configuration.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">map.put(<span class="string">&quot;code&quot;</span>, strCode);</span><br><span class="line">map.put(<span class="string">&quot;language&quot;</span>, strLang);</span><br><span class="line">map.put(<span class="string">&quot;input&quot;</span>, strInput);</span><br><span class="line"></span><br><span class="line">requestNetwork.setParams(map, RequestNetworkController.REQUEST_BODY);</span><br></pre></td></tr></table></figure></div>

<p>We are going to extend the <code>compile()</code> method with three more parameters: <code>text</code>, <code>lang</code>, and <code>input</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">compile</span><span class="params">(Activity activity, String text, String lang, String input)</span> &#123;</span><br><span class="line"></span><br><span class="line">    map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, text);</span><br><span class="line">    map.put(<span class="string">&quot;language&quot;</span>, lang);</span><br><span class="line">    map.put(<span class="string">&quot;input&quot;</span>, input);</span><br><span class="line"></span><br><span class="line">    requestNetwork.setParams(map, RequestNetworkController.REQUEST_BODY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>After the setting is done, starts the <code>RequestNetwork</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">requestNetwork.startRequestNetwork(RequestNetworkController.POST, url, <span class="string">&quot;api&quot;</span>, requestListener);</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>url</code> is <code>&quot;https://api.codex.jaagrav.in&quot;</code>, which has already been defined. If you do not, add this code.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://api.codex.jaagrav.in&quot;</span>;</span><br></pre></td></tr></table></figure></div></div>

<p>During the compilation, there will be one of two results, <strong>Compilation Success</strong> and <strong>Compilation Failed</strong>.</p>
<hr>
<h3 id="Compilation-Success"><a href="#Compilation-Success" class="headerlink" title="Compilation Success"></a>Compilation Success</h3><p>We will declare it as a success situation if there’s no error response. Then, display the compilation output.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (data.get(<span class="string">&quot;error&quot;</span>).toString().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">    dialog.setTitle(<span class="string">&quot;Compilation output&quot;</span>);</span><br><span class="line">    dialog.setMessage(data.get(<span class="string">&quot;output&quot;</span>).toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>data.get(&quot;error&quot;)</code> is to fetch error responses if there’s any.<br><code>data.get(&quot;output&quot;)</code> is to fetch the output of compilation if there’s no error responses.</p>
<p>In order to check and display as a <code>String</code>, we need to set <code>toString()</code> for them.</p>
</div>

<hr>
<h3 id="Compilation-Failed"><a href="#Compilation-Failed" class="headerlink" title="Compilation Failed"></a>Compilation Failed</h3><p>The compilation failed means there’s error response during the compilation. If there are errors, display them.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    dialog.setTitle(<span class="string">&quot;Compilation error&quot;</span>);</span><br><span class="line">    dialog.setMessage(data.get(<span class="string">&quot;error&quot;</span>).toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>Don’t forget to show the <code>dialog</code> after the <code>if</code> statement.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">dialog.show();</span><br></pre></td></tr></table></figure></div></div>

<p>Following instructions above, your code should be like below:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(String tag, String response, HashMap&lt;String, Object&gt; responseHeaders)</span> &#123;</span><br><span class="line">    progressDialog.dismiss();</span><br><span class="line">    data = <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(response, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;HashMap&lt;String, Object&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data.get(<span class="string">&quot;error&quot;</span>).toString().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">        dialog.setTitle(<span class="string">&quot;Compilation output&quot;</span>);</span><br><span class="line">        dialog.setMessage(data.get(<span class="string">&quot;output&quot;</span>).toString());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        dialog.setTitle(<span class="string">&quot;Compilation error&quot;</span>);</span><br><span class="line">        dialog.setMessage(data.get(<span class="string">&quot;error&quot;</span>).toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Call-Compiler-class"><a href="#Call-Compiler-class" class="headerlink" title="Call Compiler class"></a>Call Compiler class</h2><p>We’re almost there, we’re now in the step of calling methods from <code>Compiler</code> class.</p>
<p>Your <code>MainActivity.java</code> should be like this.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>View Binding - <code>binding</code> is not required to be used in this project. However, it is a good way to get rid of using <code>findViewById()</code>.</p>
<p>For instance:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get TextView&#x27;s text using findViewById()</span></span><br><span class="line"><span class="type">String</span> <span class="variable">tv</span> <span class="operator">=</span> findViewById(R.id.tv);</span><br><span class="line"><span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> tv.getText().toString();</span><br><span class="line"></span><br><span class="line"><span class="comment">// get TextView&#x27;s text using view binding</span></span><br><span class="line"><span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> binding.tv.getText().toString();</span><br></pre></td></tr></table></figure></div>

<p>Therefore, using view binding has several advantages:</p>
<ol>
<li>Supports null safety. There won’t be <code>Attempt to invoke virtual method on a null object reference</code> errors since the components are binded in view binding. It also prevents non-existent views or components being called.</li>
<li>Reduces boileplate code, since <code>findViewById()</code> requires to be defined again if it is being used again, which takes too many places of the entire program and wastes on the operations. If it comes to view binding, it literally eliminates these problems.</li>
<li>Facilitates type safety, since the binding class that’s generated matches the views declared in the layout file.</li>
</ol>
</div>

<p>To compile, call <code>compile()</code> from the <code>Compiler</code> class.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Compiler.compile(<span class="built_in">this</span>, strCode, strLang, strInput);</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Handle-input-execution"><a href="#Handle-input-execution" class="headerlink" title="Handle input execution"></a>Handle input execution</h3><p>Now, we need to implement the compilation of input. We will make a new dialog with its custom view in <code>MainActivity.java</code>. Again, <code>ModernDialog</code> is used, you can use others.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/et&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;Input&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    dialog = <span class="keyword">new</span> <span class="title class_">ModernDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">            .setDialogStyle(ModernDialog.DIALOG_STYLE_BOTTOM_SHEET)</span><br><span class="line">            .setView(R.layout.dialog_edittext)</span><br><span class="line">            .setTitle(<span class="string">&quot;Leave it empty if no inputs is needed.&quot;</span>)</span><br><span class="line">            .setPositiveButton(<span class="literal">null</span>, v -&gt; &#123;</span><br><span class="line">                <span class="type">EditText</span> <span class="variable">et</span> <span class="operator">=</span> dialog.dialogBS.findViewById(R.id.et);</span><br><span class="line">                <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> et.getText().toString();</span><br><span class="line">                Compiler.compile(<span class="built_in">this</span>, binding.editor.getText().toString(), <span class="string">&quot;java&quot;</span>, input);</span><br><span class="line">            &#125;)</span><br><span class="line">            .show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<p>Lastly, call <code>init()</code> from the <code>Compiler</code> class to initialize the <code>RequestNetwork</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">Compiler.init(<span class="built_in">this</span>);</span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>The initialization - <code>init()</code> should be executed before the compilation <code>compile()</code>. Otherwise, the program will never work and show <code>onResponse()</code> or <code>onErrorResponse()</code> with <code>Attempt to invoke interface method on a null object reference</code>.</p>
</div>

<p>To make sure you don’t get lost, here’s the code:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line"></span><br><span class="line">        Compiler.init(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>You may ask, where does <code>compile()</code> code? It should be executed on a button click or else.</p>
<p>Here’s an example of defining a <code>Button</code> and executing its click event.</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Compile&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">binding.btn.setOnClickListener(v -&gt; &#123;</span><br><span class="line">    dialog = <span class="keyword">new</span> <span class="title class_">ModernDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">            .setDialogStyle(ModernDialog.DIALOG_STYLE_BOTTOM_SHEET)</span><br><span class="line">            .setView(R.layout.dialog_edittext)</span><br><span class="line">            .setTitle(<span class="string">&quot;Leave it empty if no inputs is needed.&quot;</span>)</span><br><span class="line">            .setPositiveButton(<span class="literal">null</span>, v -&gt; &#123;</span><br><span class="line">                <span class="type">EditText</span> <span class="variable">et</span> <span class="operator">=</span> dialog.dialogBS.findViewById(R.id.et);</span><br><span class="line">                <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> et.getText().toString();</span><br><span class="line">                Compiler.compile(<span class="built_in">this</span>, binding.editor.getText().toString(), <span class="string">&quot;java&quot;</span>, input);</span><br><span class="line">            &#125;)</span><br><span class="line">            .show();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Full-source-code"><a href="#Full-source-code" class="headerlink" title="Full source code"></a>Full source code</h1><p>Here’s the full source code.</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>Due to the source code below was written before this article is created, some of the code may not match with this article’s content codes. Plus, <strong>replace the package name to yours</strong>.</p>
</div>

<div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Libraries</a></li><li class="tab"><a class="#source_code-2">Manifest</a></li><li class="tab"><a class="#source_code-3">Layouts</a></li><li class="tab"><a class="#source_code-4">Packages</a></li><li class="tab"><a class="#source_code-5">Compiler.java</a></li><li class="tab"><a class="#source_code-6">MainActivity.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ==== [ Gson ] ====</span></span><br><span class="line">implementation <span class="string">&#x27;com.google.code.gson:gson:2.10&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ==== [ Okhttp ] ====</span></span><br><span class="line">implementation(platform(<span class="string">&quot;com.squareup.okhttp3:okhttp-bom:4.10.0&quot;</span>))</span><br><span class="line">implementation(<span class="string">&quot;com.squareup.okhttp3:okhttp&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ==== [ Sora Editor ] =====</span></span><br><span class="line">implementation(platform(<span class="string">&quot;io.github.Rosemoe.sora-editor:bom:0.20.2&quot;</span>))</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:editor&quot;</span>)</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:language-textmate&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// === [ Modern Dialog ] ====</span></span><br><span class="line">implementation <span class="string">&#x27;com.github.BlueWhaleYT:ModernDialog:1.0.2&#x27;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- required permissions --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- cleartext traffic --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:usesCleartextTraffic</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>activity_main.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">io.github.rosemoe.sora.widget.CodeEditor</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>dialog_progress.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/pbLoading&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvText&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;TextView&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>dialog_edittext.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/et&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">&quot;Input&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Compiler (Compiler.java)</span></span><br><span class="line"><span class="keyword">import</span> com.xxx.yyy.Compiler;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RequestNetwork</span></span><br><span class="line"><span class="keyword">import</span> com.bluewhaleyt.javaide.util.network.RequestNetwork;</span><br><span class="line"><span class="keyword">import</span> com.bluewhaleyt.javaide.util.network.RequestNetworkController;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Gson</span></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Modern Dialog</span></span><br><span class="line"><span class="keyword">import</span> com.bluewhaleyt.moderndialog.ModernDialog;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MaterialAlertDialog</span></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.dialog.MaterialAlertDialogBuilder;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-5"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Compiler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// declare constants</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> Compiler.class.getName();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// declare variables</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;https://api.codex.jaagrav.in&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HashMap&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestNetwork requestNetwork;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> RequestNetwork.RequestListener requestListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ModernDialog.Builder dialog;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AlertDialog progressDialog;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line">        requestNetwork = <span class="keyword">new</span> <span class="title class_">RequestNetwork</span>(activity);</span><br><span class="line"></span><br><span class="line">        <span class="type">RequestListener</span> <span class="variable">requestListener</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RequestNetwork</span>.RequestListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(String tag, String response, HashMap&lt;String, Object&gt; responseHeaders)</span> &#123;</span><br><span class="line">                progressDialog.dismiss();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// get the output and print it to Logcat</span></span><br><span class="line">                data = <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(response, <span class="keyword">new</span> <span class="title class_">TypeToken</span>&lt;HashMap&lt;String, Object&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line">                Log.d(TAG, data);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// compilation success</span></span><br><span class="line">                <span class="keyword">if</span> (data.get(<span class="string">&quot;error&quot;</span>).toString().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">                    dialog.setTitle(<span class="string">&quot;Compilation output&quot;</span>);</span><br><span class="line">                    dialog.setMessage(data.get(<span class="string">&quot;output&quot;</span>).toString());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// compilation failed</span></span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    dialog.setTitle(<span class="string">&quot;Compilation error&quot;</span>);</span><br><span class="line">                    dialog.setMessage(data.get(<span class="string">&quot;error&quot;</span>).toString());</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// display the dialog</span></span><br><span class="line">                dialog.show();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onErrorResponse</span><span class="params">(String tag, String message)</span> &#123;</span><br><span class="line">                progressDialog.dismiss();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// check if no internet connection</span></span><br><span class="line">                dialog.setTitle(<span class="string">&quot;No Internet&quot;</span>);</span><br><span class="line">                dialog.setMessage(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">compile</span><span class="params">(Activity activity, String code, String lang, String input)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// configuration</span></span><br><span class="line">        map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;code&quot;</span>, text);</span><br><span class="line">        map.put(<span class="string">&quot;language&quot;</span>, lang);</span><br><span class="line">        map.put(<span class="string">&quot;input&quot;</span>, input);</span><br><span class="line">        requestNetwork.setParams(map, RequestNetworkController.REQUEST_BODY);</span><br><span class="line">        requestNetwork.startRequestNetwork(RequestNetworkController.POST, url, <span class="string">&quot;api&quot;</span>, requestListener);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// progress dialog</span></span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> activity.getLayoutInflater().inflate(R.layout.dialog_progress, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> view.findViewById(R.id.tvText);</span><br><span class="line">        tv.setText(<span class="string">&quot;Compiling, please wait ...&quot;</span>);</span><br><span class="line">        progressDialog = <span class="keyword">new</span> <span class="title class_">MaterialAlertDialogBuilder</span>(activity).create();</span><br><span class="line">        progressDialog.setView(view);</span><br><span class="line">        progressDialog.setCancelable(<span class="literal">false</span>);</span><br><span class="line">        progressDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-6"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// declare variables</span></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// initialize the compiler</span></span><br><span class="line">        Compiler.init(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// compile program code</span></span><br><span class="line">        binding.btn.setOnClickListener(v -&gt; compile(binding.editor.getText().toString()));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">compile</span><span class="params">(String input)</span> &#123;</span><br><span class="line">        dialog = <span class="keyword">new</span> <span class="title class_">ModernDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line">                .setDialogStyle(ModernDialog.DIALOG_STYLE_BOTTOM_SHEET)</span><br><span class="line">                .setView(R.layout.dialog_edittext)</span><br><span class="line">                .setTitle(<span class="string">&quot;Leave it empty if no inputs is needed.&quot;</span>)</span><br><span class="line">                .setPositiveButton(<span class="literal">null</span>, v -&gt; &#123;</span><br><span class="line">                    <span class="type">EditText</span> <span class="variable">et</span> <span class="operator">=</span> dialog.dialogBS.findViewById(R.id.et);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">input</span> <span class="operator">=</span> et.getText().toString();</span><br><span class="line">                    Compiler.compile(<span class="built_in">this</span>, binding.editor.getText().toString(), <span class="string">&quot;java&quot;</span>, input);</span><br><span class="line">                &#125;)</span><br><span class="line">                .show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h1 id="Useful-Links"><a href="#Useful-Links" class="headerlink" title="Useful Links"></a>Useful Links</h1><ul class="useful-links">
    <a target="_blank" href="https://github.com/Jaagrav/CodeX-API"><li>CodeX API</li></a>
    <a target="_blank" href="using-sora-editor-with-textmate-0-18-1"><li>Using Sora Editor with TextMate 0.18.1</li></a>
    <a target="_blank" href="implement-android-custom-progress-dialog"><li>建立自訂載入對話框</li></a>
</ul>

<hr>
<p>That’s all for this article. According to the <a target="_blank" href="https://github.com/Jaagrav/CodeX-API/releases/tag/v1-alpha">latest announcement</a>:</p>
<blockquote>
<p>Sorry for the long downtime but <strong>CodeX API is now back</strong>. I worked on some major refactoring and cleanup to make the codebase more neat and make it easier to add support for new languages in the future.</p>
</blockquote>
<p>With its revive, we are now able to use this API to make an online compiler for different programming languages.</p>
<p>However, as I mentioned early this article, this API is still <strong>unstable and will be renovated with breaking changes</strong>. Thus, <strong>this article’s content will be deprecated or even no longer worked as expected</strong>.</p>
<p>Anyways, I hope you guys enjoy this article, See ya.</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
      </tags>
  </entry>
  <entry>
    <title>Modern Dialog - Get Started</title>
    <url>//post/android_dev_modern_dialog_library_tutorial.html</url>
    <content><![CDATA[<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>As the development of Modern Dialog is getting advanced, <strong>this blog article may not be updated regularly</strong>. That means, the guide shows below might not be compatiable with newer versions.</p>
</div>

<hr>
<h1 id="Modern-Dialog-‎"><a href="#Modern-Dialog-‎" class="headerlink" title="Modern Dialog ‎ "></a>Modern Dialog ‎ <a target="_blank" href="https://jitpack.io/#BlueWhaleYT/ModernDialog"><img style="display: inline" src="https://jitpack.io/v/BlueWhaleYT/ModernDialog.svg"></a></h1><img style="display: inline" src="http://forthebadge.com/images/badges/built-for-android.svg">

<p>Do you feel frustrated about using <code>AlertDialog</code> and <code>MaterialAlertDialog</code> with their normal designs? If so, ModernDialog is your new choice. It is a powerful library for Android Development written in Java.</p>
<hr>
<h1 id="Showcase"><a href="#Showcase" class="headerlink" title="Showcase"></a>Showcase</h1><p>Here are some sample showcase you can take a look at them before attempting to use this library. Sorry it is hard to make them synchronize.</p>
<table>
<thead>
<tr>
<th>Light Mode Showcase</th>
<th>Dark Mode Showcase</th>
</tr>
</thead>
<tbody><tr>
<td><img src="https://github.com/BlueWhaleYT/ModernDialog/blob/main/screenshots/showcase_light.gif?raw=true" alt="Light Mode" style="border-radius: 8px; width: 100%;"></td>
<td><img src="https://github.com/BlueWhaleYT/ModernDialog/blob/main/screenshots/showcase_dark.gif?raw=true" alt="Dark Mode" style="border-radius: 8px; width: 100%;"></td>
</tr>
</tbody></table>
<hr>
<h1 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h1><p>Modern Dialog supports <a class="link" target="_blank" href="https://lottiefiles.com">Lottie Animations <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> by default, <strong>you are not required to add this library on your own.</strong> However, if you’re interested about the development of Lottie Animation, you can go to this <a class="link" target="_blank" href="https://github.com/airbnb/lottie-android">documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more details.</p>
<hr>
<h1 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h1><p>You are required to follow the instruction if you want to use this library in your project.</p>
<hr>
<h2 id="Add-JitPack-Repository"><a href="#Add-JitPack-Repository" class="headerlink" title="Add JitPack Repository"></a>Add JitPack Repository</h2><p>Add the JitPack repository to your root <code>build.gradle</code> or <code>build.gradle (Project: xxx)</code> inside <code>Gradle Scripts</code>.</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        ...</span><br><span class="line marked">        maven &#123; url <span class="string">&#x27;https://jitpack.io&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>However, if you’re using <strong>Android Studio Bumblebee</strong>, the method describes above <strong>is not working in this version</strong>. Instead, you need to add JitPack repository in your <code>settings.gradle</code>.</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">pluginManagement &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        ...</span><br><span class="line marked">        maven &#123; url <span class="string">&#x27;https://jitpack.io&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">dependencyResolutionManagement &#123;</span><br><span class="line">    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        ...</span><br><span class="line marked">        maven &#123; url <span class="string">&#x27;https://jitpack.io&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Add-Dependency"><a href="#Add-Dependency" class="headerlink" title="Add Dependency"></a>Add Dependency</h2><p>Add the dependency in your app <code>build.gradle</code> or <code>build.gradle (Module: xxx.app)</code> inside <code>Gradle Scripts</code>.</p>
<p>The <code>$version</code> can be found in <a class="link" target="_blank" href="https://github.com/BlueWhaleYT/ModernDialog/releases">Releases <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>, or you can use the latest version -  <a target="_blank" href="https://jitpack.io/#BlueWhaleYT/ModernDialog"><img class="noFW" src="https://jitpack.io/v/BlueWhaleYT/ModernDialog.svg"></a></p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    implementation <span class="string">&#x27;com.github.BlueWhaleYT:ModernDialog:$version&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><p>These are the basic methods came from original <code>Dialog</code>, so we’re not going to investigate these methods.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">ModernDialog</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModernDialog</span>.Builder(<span class="built_in">this</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set title</span></span><br><span class="line">    .setTitle(<span class="string">&quot;Your title here&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set message</span></span><br><span class="line">    .setMessage(<span class="string">&quot;Your text here&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set dialog cancelable</span></span><br><span class="line">    <span class="comment">// 1st param: setCancelable</span></span><br><span class="line">    <span class="comment">// 2nd param: setCancelableTouchOutside</span></span><br><span class="line">    .setCancelable(<span class="literal">true</span>, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set positive button, set &quot;null&quot; if dismiss only</span></span><br><span class="line">    .setPositiveButton(<span class="string">&quot;OK&quot;</span>, <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set negative button, set &quot;null&quot; if dismiss only</span></span><br><span class="line">    .setNegativeButton(<span class="string">&quot;Close&quot;</span>, <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// show the dialog</span></span><br><span class="line">    .show();</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a>Dialog</h2><hr>
<h3 id="Dismiss"><a href="#Dismiss" class="headerlink" title="Dismiss"></a>Dismiss</h3><p>Sometimes you don’t want the dialog to be dismissed after clicking the positive button or anything else. By default, the dismiss action will be executed after the click listener is done. If you want to ignore this, you can simply add this code.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setDialogDismiss(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>Note that if you set <code>null</code> in the click listener, this method will not work and will still dismiss the dialog.</p>
</div>

<hr>
<h3 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h3><p>ModernDialog has provided two styles, one is default, another one is Bottom Sheet style. Let’s see how we can alter the dialog to Bottom Sheet style.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setDialogStyle(ModernDialog.DIALOG_STYLE_BOTTOM_SHEET)</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>ModernDialog supports Lottie Animations by default.</p>
</div>

<p>Now we’re going to load the animation to the dialog. Currently, there are two ways to load it.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimation(String url)</span><br><span class="line">.setAnimation(<span class="type">int</span> rawRes)</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Load-animation-via-URL"><a href="#Load-animation-via-URL" class="headerlink" title="Load animation via URL"></a>Load animation via URL</h3><p>Now, go to <a class="link" target="_blank" href="https://lottiefiles.com"> <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> and search for any animations you like, find the <code>Lottie Animation URL</code> section and copy the URL for later use.</p>
<p>Once we copied it, we can now load the selected animation to the dialog. For example, I chose this animation and this is it’s URL.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimation(<span class="string">&quot;https://assets9.lottiefiles.com/packages/lf20_iIq3IA.json&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>Very simple, isn’t it?</p>
<hr>
<h3 id="Load-animation-via-raw-resource"><a href="#Load-animation-via-raw-resource" class="headerlink" title="Load animation via raw resource"></a>Load animation via raw resource</h3><p>Instead of grabing the URL, we need to find the <code>Download</code> button and download it by clicking <code>Lottie JSON</code>.</p>
<p>Once we downloaded it, we need to put the JSON file into <code>res/raw/</code> directory, create one if you do not.</p>
<p>For example, I put this animation into <code>res/raw/7974-gooey-cube-emits.json</code> and I rename it to <code>animation1.json</code> for a cleaner name.</p>
<p>Then, this JSON file can be loaded via:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimation(R.raw.animation1)</span><br></pre></td></tr></table></figure></div>

<p>Done, enjoy the dialog within the beautiful animation!</p>
<hr>
<h3 id="Set-the-animation-to-play-repeatedly"><a href="#Set-the-animation-to-play-repeatedly" class="headerlink" title="Set the animation to play repeatedly"></a>Set the animation to play repeatedly</h3><p>By default, animation is played for once, if you want to loop the animation. You can add following.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// choose either one: </span></span><br><span class="line">.setAnimationLoop(<span class="literal">true</span>)</span><br><span class="line">.setAnimationLoop(ModernDialog.ANIMATION_INFINITE)</span><br></pre></td></tr></table></figure></div>

<p>Or, you want to specific its repeat time, then you can set like below:</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimationLoop(<span class="type">int</span> count)</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Set-color-to-the-animation"><a href="#Set-color-to-the-animation" class="headerlink" title="Set color to the animation"></a>Set color to the animation</h3><p>When the animation is sucessfully loaded, sometimes you may not feel satisfied the color of the animation. Therefore, there are two methods to apply colors to the animation.</p>
<hr>
<h4 id="Set-color-globally"><a href="#Set-color-globally" class="headerlink" title="Set color globally"></a>Set color globally</h4><p>If you just want to change whole set of color overlay, then you can change it globally. That means, the animation’s color overlay will be applied once you set the color.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimationColorOverlayForAllLayers(<span class="type">int</span> color)</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="Set-color-specifically"><a href="#Set-color-specifically" class="headerlink" title="Set color specifically"></a>Set color specifically</h4><p>You may want to change a part of the layer’s color instead of changing whole set of animation’s color. Then, you need to specific the layer name and set its color.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimationColorOverlayForSpecificLayer(String layerName, <span class="type">int</span> color)</span><br></pre></td></tr></table></figure></div>
<p>To get the layer name of the part of animation, you can go to the JSON file or Lottie Animation Editor to inspect it.</p>
<p>For example, the part of animation’s layer name is <code>Shape Layer 3</code>. Then, you can do following.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">.setAnimationColorOverlayForSpecificLayer(<span class="string">&quot;Shape Layer 3&quot;</span>, color)</span><br></pre></td></tr></table></figure></div>

<hr>
<p>Tutorial ends, Enjoy!</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>解決 PopupMenu 複選框點選後自動重置為未勾選狀態</title>
    <url>//post/android_dev_popup_menu_checkbox_issue.html</url>
    <content><![CDATA[<p>今天要寫 PopupMenu 的時候，發現在要用<strong>點選複選框的項目會重置狀態</strong>，一般我都會這樣定義一個 PopupMenu 的。</p>
<p>當按鈕 <code>btn</code> 點擊後便執行：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">btn.setOnClickListener(v -&gt; &#123;</span><br><span class="line">    <span class="type">PopupMenu</span> <span class="variable">popupMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PopupMenu</span>(<span class="built_in">this</span>, btn);</span><br><span class="line">    popupMenu.getLayoutInflater().inflate(R.menu.main_menu, popupMenu.getMenu());</span><br><span class="line">    popupMenu.setOnMenuItemClickListener(i -&gt; &#123;</span><br><span class="line">        i.setChecked(!i.isChecked());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    popupMenu.show();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p>但這樣做，如果你不是要做被選框，只是純粹一個項目的話，這樣問題不大，不然會有一個問題，就是<strong>複選框勾選後會自動重置到未勾選狀態</strong>。</p>
<p>原來是因為這個 PopupMenu 是靠按鈕 <code>btn</code> 生成的，所以每當這個 PopupMenu 彈出後，<strong>都會重新建立</strong>，導致到看似會有勾選後重置的結果。</p>
<hr>
<h1 id="解決問題"><a href="#解決問題" class="headerlink" title="解決問題"></a>解決問題</h1><p>要解決這個問題，我們不應該把 PopupMenu 以按鈕 <code>Button</code> 的點擊事件來生成，而是在活動 <code>Activity</code> 生成。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">PopupMenu popupMenu;</span><br><span class="line"></span><br><span class="line">popupMenu = <span class="keyword">new</span> <span class="title class_">PopupMenu</span>(<span class="built_in">this</span>, btn);</span><br><span class="line">popupMenu.inflate(R.menu.main_menu);</span><br><span class="line">popupMenu.setOnMenuItemClickListener(i -&gt; &#123;</span><br><span class="line">    i.setChecked(!i.isChecked());</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>再用按鈕 <code>btn</code> 的點擊事件呼喚 PopupMenu：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">btn.setOnClickListener(v -&gt; popupMenu.show());</span><br></pre></td></tr></table></figure></div>
<hr>
<h1 id="完整代碼"><a href="#完整代碼" class="headerlink" title="完整代碼"></a>完整代碼</h1><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    ActivityMainBinding binding;</span><br><span class="line marked">    PopupMenu popupMenu;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line"></span><br><span class="line marked">        popupMenu = <span class="keyword">new</span> <span class="title class_">PopupMenu</span>(<span class="built_in">this</span>, binding.button);</span><br><span class="line marked">        popupMenu.inflate(R.menu.menu);</span><br><span class="line marked">        popupMenu.setOnMenuItemClickListener(i -&gt; &#123;</span><br><span class="line marked">            i.setChecked(!i.isChecked());</span><br><span class="line marked">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line marked">        &#125;);</span><br><span class="line"></span><br><span class="line marked">        binding.button.setOnClickListener(v -&gt; popupMenu.show());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<p>那就不會重置了，問題解決。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>編寫 OpenAIUtil 實用程式類</title>
    <url>//post/android_dev_openai_util.html</url>
    <content><![CDATA[<p>大家好，歡迎閱讀本篇文章：「編寫 <code>OpenAIUtil</code> 實用程式類」。今天會說一下如何編寫一個實用程式 (Util)，進行往後簡易使用 OpenAI 所提供的 API (全稱：Application Programming Interface) 來實現和開發相關的另類學習程式。</p>
<a class="button " href="https://openai.com/" title="前往 OpenAI 官網"><i class="fa-solid fa-play-circle"></i> 前往 OpenAI 官網</a>

<hr>
<h1 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h1><p>在急不及待編寫程式之前，我們需要準備一些東西。</p>
<hr>
<h2 id="要求執行網絡作業"><a href="#要求執行網絡作業" class="headerlink" title="要求執行網絡作業"></a>要求執行網絡作業</h2><p>因為我們即將要使用 OpenAI 所提供的 API，而使用 API 的前提是，我們需要<strong>連線網絡的許可權</strong>，在 Android 開發中，我們可以在 <code>AndroidManifest.xml</code> 設置相關權限。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="INTERNET-與-ACCESS-NETWORK-STATE-分別"><a href="#INTERNET-與-ACCESS-NETWORK-STATE-分別" class="headerlink" title="INTERNET 與 ACCESS_NETWORK_STATE 分別"></a><code>INTERNET</code> 與 <code>ACCESS_NETWORK_STATE</code> 分別</h3><ul>
<li><code>INTERNET</code>: 為應用程式啟用網絡插槽 (Network Socket)，簡而言之就是用於連接網絡。</li>
<li><code>ACCESS_NETWORK_STATE</code>: 為應用程式執行相關網絡作業，如經網絡獲取資訊等。</li>
</ul>
<p>實際上，在絕大多數的情況下，只需要啟用 <code>INTERNET</code> 權限便可以。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><a target="_blank" href="https://developer.android.com/reference/android/Manifest.permission#INTERNET"><code>INTERNET</code></a> 和 <a target="_blank" href="https://developer.android.com/reference/android/Manifest.permission#ACCESS_NETWORK_STATE"><code>ACCESS_NETWORK_STATE</code></a> 權限都是一般權限，代表系統會在<strong>安裝時授予權限</strong>，因此不需要在執行階段請求授予。</p>
</div>

<hr>
<h3 id="判斷已經連線網絡"><a href="#判斷已經連線網絡" class="headerlink" title="判斷已經連線網絡"></a>判斷已經連線網絡</h3><p>因為我們即將寫的程式，基本上其處理和輸出是依賴網絡的，如果你想判斷目前該設備是否已經啟用網絡，可以編寫一個簡單的模塊，例傳回布爾值的 <code>isNetworkAvailable()</code>。</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼: <code>isNetworkAvailable()</code> </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.net.ConnectivityManager;</span><br><span class="line"><span class="keyword">import</span> android.net.NetworkInfo;</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isNetworkAvailable</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">    <span class="type">ConnectivityManager</span> <span class="variable">connectivityManager</span> <span class="operator">=</span> (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (connectivityManager != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="type">NetworkInfo</span> <span class="variable">activeNetwork</span> <span class="operator">=</span> connectivityManager.getActiveNetworkInfo();</span><br><span class="line">        <span class="keyword">return</span> (activeNetwork != <span class="literal">null</span> &amp;&amp; activeNetwork.isConnectedOrConnecting());</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>使用方法：</p><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (isNetworkAvailable()) Log.d(TAG, <span class="string">&quot;Network is available&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> Log.e(TAG, <span class="string">&quot;Network is not available&quot;</span>);</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<hr>
<h2 id="匯入-Okhttp-依賴"><a href="#匯入-Okhttp-依賴" class="headerlink" title="匯入 Okhttp 依賴"></a>匯入 Okhttp 依賴</h2><p>什麼是依賴 (Dependency) ？，其實就是相當於函式庫 (Library)，我們可以在 <code>build.gradle</code> 文件中手動匯入依賴。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>這個 <code>build.gradle</code> 檔案是 <code>app/</code> 目錄那一個，你會找到有 <code>dependencies</code> 那部分，就是加入依賴的。</p>
</div>

<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.squareup.okhttp3:okhttp:4.10.0&#x27;</span></span><br></pre></td></tr></table></figure></div>

<h3 id="什麼是-Okhttp？"><a href="#什麼是-Okhttp？" class="headerlink" title="什麼是 Okhttp？"></a>什麼是 Okhttp？</h3><p><a target="_blank" href="https://square.github.io/okhttp/">Okhttp</a> 是一個用於<strong>處理網絡請求的框架</strong>，在較早之前。我們是用 <a target="_blank" href="https://google.github.io/volley/">Volley</a> 的，這個函式庫是由 Google 開發的，但值得留意的是，Volley 是用 <code>HttpClient</code> 的，而這個類在 <strong>Android 6.0 (SDK 23) 起不再支援</strong>，而使得 Volley 鮮少再被使用，現在的替代品就是 Okhttp。</p>
<hr>
<h1 id="程式實現"><a href="#程式實現" class="headerlink" title="程式實現"></a>程式實現</h1><p>完成好準備作業後，就可以編寫代碼。</p>
<hr>
<h2 id="建立-OpenAIUtil-類"><a href="#建立-OpenAIUtil-類" class="headerlink" title="建立 OpenAIUtil 類"></a>建立 <code>OpenAIUtil</code> 類</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenAIUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Okhttp-初始化程序"><a href="#Okhttp-初始化程序" class="headerlink" title="Okhttp 初始化程序"></a>Okhttp 初始化程序</h3><p>聲明 <code>OkHttpClient</code> 類的變量 <code>client</code>，用於稍後初始化。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> OkHttpClient client;</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="構建-OpenAIUtil"><a href="#構建-OpenAIUtil" class="headerlink" title="構建 OpenAIUtil"></a>構建 <code>OpenAIUtil</code></h4><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">OpenAIUtil</span><span class="params">()</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h5 id="設置逾時作業"><a href="#設置逾時作業" class="headerlink" title="設置逾時作業"></a>設置逾時作業</h5><p>由於 OpenAI 的請求會有<strong>可能超出預設的逾時</strong>，導致因為<strong>逾時而未能得到完整的請求</strong>，因此我們需要處理逾時作業。</p>
<p>我們會用這三個設定：<code>readTimeout</code>、<code>writeTimeout</code> 及 <code>connectTimeout</code>。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">long</span> readTimeout, writeTimeout, connectTimeout;</span><br></pre></td></tr></table></figure></div>

<hr>
<h6 id="編寫存取子與變異子"><a href="#編寫存取子與變異子" class="headerlink" title="編寫存取子與變異子"></a>編寫存取子與變異子</h6><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>存取子 (Getter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getReadTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> readTimeout; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getWriteTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> writeTimeout; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getConnectTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> connectTimeout; &#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>變異子 (Setter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setReadTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.readTimeout = readTimeout; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWriteTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.writeTimeout = writeTimeout; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConnectTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.connectTimeout = connectTimeout; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h6 id="為-client-設置逾時"><a href="#為-client-設置逾時" class="headerlink" title="為 client 設置逾時"></a>為 <code>client</code> 設置逾時</h6><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">client = <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder()</span><br><span class="line">        .connectTimeout(connectTimeout, TimeUnit.SECONDS)</span><br><span class="line">        .readTimeout(readTimeout, TimeUnit.SECONDS)</span><br><span class="line">        .writeTimeout(writeTimeout, TimeUnit.SECONDS)</span><br><span class="line">        .build();</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="OpenAI-參數設定"><a href="#OpenAI-參數設定" class="headerlink" title="OpenAI 參數設定"></a>OpenAI 參數設定</h3><p>OpenAI 提供的 API 的參數設定 (Parameter)，常用的有：</p>
<ul>
<li><code>model</code>: 要應用的 AI 模型。</li>
<li><code>prompt</code>: 要輸入的文本。</li>
<li><code>max_tokens</code>: 可支援的最大 Token 數目。</li>
<li><code>temperature</code>: 生成文本的多樣性、創造性。</li>
</ul>
<hr>
<h4 id="聲明變量"><a href="#聲明變量" class="headerlink" title="聲明變量"></a>聲明變量</h4><p>稍後我們會編寫<strong>存取子與變異子</strong> (Getter &amp; Setter)，所以我們要先定義全域變量。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">double</span> maxTokens,</span><br><span class="line">               temperature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String apiKey,</span><br><span class="line">               apiUrl,</span><br><span class="line">               model,</span><br><span class="line">               prompt;</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="編寫存取子與變異子-1"><a href="#編寫存取子與變異子-1" class="headerlink" title="編寫存取子與變異子"></a>編寫存取子與變異子</h4><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>存取子 (Getter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getMaxTokens</span><span class="params">()</span> &#123; <span class="keyword">return</span> maxTokens; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getTemperature</span><span class="params">()</span> &#123; <span class="keyword">return</span> temperature; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getAPIKey</span><span class="params">()</span> &#123; <span class="keyword">return</span> apiKey; &#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getAPIUrl</span><span class="params">()</span> &#123; <span class="keyword">return</span> apiUrl; &#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getModel</span><span class="params">()</span> &#123; <span class="keyword">return</span> model; &#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getPrompt</span><span class="params">()</span> &#123; <span class="keyword">return</span> prompt; &#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>變異子 (Setter)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMaxTokens</span><span class="params">(<span class="type">double</span> maxTokens)</span> &#123; <span class="built_in">this</span>.maxTokens = maxTokens; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTemperature</span><span class="params">(<span class="type">double</span> temperature)</span> &#123; <span class="built_in">this</span>.temperature = temperature; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAPIUrl</span><span class="params">(String apiUrl)</span> &#123; <span class="built_in">this</span>.apiUrl = apiUrl; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAPIKey</span><span class="params">(String apiKey)</span> &#123; <span class="built_in">this</span>.apiKey = apiKey; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModel</span><span class="params">(String model)</span> &#123; <span class="built_in">this</span>.model = model; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrompt</span><span class="params">(String prompt)</span> &#123; <span class="built_in">this</span>.prompt = prompt; &#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="設置參數"><a href="#設置參數" class="headerlink" title="設置參數"></a>設置參數</h4><hr>
<h5 id="使用哪一個模型？"><a href="#使用哪一個模型？" class="headerlink" title="使用哪一個模型？"></a>使用哪一個模型？</h5><p>現今 OpenAI 強大的模型有兩個：</p>
<ul>
<li><code>text-davinci-003</code>: 一個簡單的自動補全的模型，不建議用於聊天對話。</li>
<li><code>gpt-3.5-turbo</code>: GPT 3.5 模型，ChatGPT 現時在使用的模型，尤其是如果要與機器人進行聊天對話，保留持續的對話脈絡或上下文 (Context)，就可以用這個模型，因為這模型是接受一系列的訊息作為 Prompt 的傳遞。</li>
</ul>
<p>在 <a target="_blank" href="https://platform.openai.com/docs/api-reference/completions/create?lang=node.js">OpenAI 官方開發文案</a> 所見，我們需要設置參數，當中 <code>model</code> 和 <code>prompt</code> 是必要的參數。</p>
<hr>
<h6 id="text-davinci-003-參數設定"><a href="#text-davinci-003-參數設定" class="headerlink" title="text-davinci-003 參數設定"></a><code>text-davinci-003</code> 參數設定</h6><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> openai.<span class="title function_">createCompletion</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: <span class="string">&quot;text-davinci-003&quot;</span>,</span><br><span class="line">    <span class="attr">prompt</span>: <span class="string">&quot;Say this is a test&quot;</span>,</span><br><span class="line">    <span class="attr">max_tokens</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">temperature</span>: <span class="number">0</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>即是我們需要編寫以下編碼，用以為 <code>text-davinci-003</code> 設置參數。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getSettings</span><span class="params">()</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">    json.put(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">    json.put(<span class="string">&quot;prompt&quot;</span>, prompt);</span><br><span class="line">    json.put(<span class="string">&quot;temperature&quot;</span>, temperature);</span><br><span class="line">    json.put(<span class="string">&quot;max_tokens&quot;</span>, maxTokens);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h6 id="gpt-3-5-turbo-參數設定"><a href="#gpt-3-5-turbo-參數設定" class="headerlink" title="gpt-3.5-turbo 參數設定"></a><code>gpt-3.5-turbo</code> 參數設定</h6><p><code>gpt-3.5-turbo</code> 的參數設定有些不同，特別是 <code>prompt</code>，在 GPT 3.5 模型中，<code>prompt</code> 已被 <code>messages</code> 取代了，但是 <code>messages</code> 的值是陣列 (Array)：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> completion = <span class="keyword">await</span> openai.<span class="title function_">createChatCompletion</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: <span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">    <span class="attr">messages</span>: [&#123;<span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: <span class="string">&quot;Hello world&quot;</span>&#125;],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getSettings</span><span class="params">()</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonMessageObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">    jsonMessageObj.put(<span class="string">&quot;role&quot;</span>, <span class="string">&quot;user&quot;</span>);</span><br><span class="line">    jsonMessageObj.put(<span class="string">&quot;content&quot;</span>, prompt);</span><br><span class="line">    jsonArray.put(jsonMessageObj);</span><br><span class="line"></span><br><span class="line">    json.put(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">    json.put(<span class="string">&quot;messages&quot;</span>, jsonArray);</span><br><span class="line">    json.put(<span class="string">&quot;temperature&quot;</span>, temperature);</span><br><span class="line">    json.put(<span class="string">&quot;max_tokens&quot;</span>, maxTokens);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="OpenAI-創建請求"><a href="#OpenAI-創建請求" class="headerlink" title="OpenAI 創建請求"></a>OpenAI 創建請求</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> configuration = <span class="keyword">new</span> <span class="title class_">Configuration</span>(&#123;</span><br><span class="line">    <span class="attr">apiKey</span>: process.<span class="property">env</span>.<span class="property">OPENAI_API_KEY</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>我們要編寫的代碼如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">MediaType</span> <span class="variable">mediaType</span> <span class="operator">=</span> MediaType.parse(<span class="string">&quot;application/json; charset=utf-8&quot;</span>);</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">generateResponse</span><span class="params">(Callback callback)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> getSettings();</span><br><span class="line">    <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">            .url(apiUrl)</span><br><span class="line">            .header(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;Bearer &quot;</span> + apiKey)</span><br><span class="line">            .header(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">            .post(RequestBody.create(json.toString(), mediaType))</span><br><span class="line">            .build();</span><br><span class="line">    client.newCall(request).enqueue(callback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="OpenAI-獲取回應"><a href="#OpenAI-獲取回應" class="headerlink" title="OpenAI 獲取回應"></a>OpenAI 獲取回應</h3><hr>
<h4 id="text-davinci-003-回應輸出"><a href="#text-davinci-003-回應輸出" class="headerlink" title="text-davinci-003 回應輸出"></a><code>text-davinci-003</code> 回應輸出</h4><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span><code>text-davinci-003</code> 回應輸出 (部分經省略)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text_completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-davinci-003&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nThis is indeed a test&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;logprobs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;length&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getResponse</span><span class="params">(String responseBody)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(responseBody);</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;choices&quot;</span>);</span><br><span class="line"></span><br><span class="line">    resultText = jsonArray.getJSONObject(<span class="number">0</span>).getString(<span class="string">&quot;text&quot;</span>);</span><br><span class="line">    resultText.trim();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resultText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h4 id="gpt-3-5-turbo-回應輸出"><a href="#gpt-3-5-turbo-回應輸出" class="headerlink" title="gpt-3.5-turbo 回應輸出"></a><code>gpt-3.5-turbo</code> 回應輸出</h4><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span><code>gpt-3.5-turbo</code> 回應輸出 (部分經省略)</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chat.completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nHello there, how may I assist you today?&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stop&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getResponse</span><span class="params">(String responseBody)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(responseBody);</span><br><span class="line">    <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;choices&quot;</span>);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonMessageObj</span> <span class="operator">=</span> jsonArray.getJSONObject(<span class="number">0</span>).getJSONObject(<span class="string">&quot;message&quot;</span>);</span><br><span class="line"></span><br><span class="line">    resultText = jsonMessageObj.getString(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">    resultText.trim();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resultText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="OpenAI-獲取報錯訊息"><a href="#OpenAI-獲取報錯訊息" class="headerlink" title="OpenAI 獲取報錯訊息"></a>OpenAI 獲取報錯訊息</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getErrorResponse</span><span class="params">(String responseBody)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(responseBody);</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">errorObj</span> <span class="operator">=</span> jsonObject.getJSONObject(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> errorObj.getString(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> resultText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="實戰應用-OpenAIUtil"><a href="#實戰應用-OpenAIUtil" class="headerlink" title="實戰應用 OpenAIUtil"></a>實戰應用 <code>OpenAIUtil</code></h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> OpenAIUtil client;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="設置-OpenAIUtil"><a href="#設置-OpenAIUtil" class="headerlink" title="設置 OpenAIUtil"></a>設置 <code>OpenAIUtil</code></h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">client = <span class="keyword">new</span> <span class="title class_">OpenAIUtil</span>();</span><br><span class="line">client.setAPIKey(apiKey);</span><br><span class="line">client.setAPIUrl(apiUrl);</span><br><span class="line">client.setModel(model);</span><br><span class="line">client.setTemperature(temperature);</span><br><span class="line">client.setMaxTokens(maxTokens);</span><br></pre></td></tr></table></figure></div>

<p>你可能會問，那 <code>setPrompt()</code> 呢？我們會在另一個區塊設置。</p>
<hr>
<h3 id="發送請求"><a href="#發送請求" class="headerlink" title="發送請求"></a>發送請求</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendRequest</span><span class="params">(String prompt)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        client.setPrompt(prompt);</span><br><span class="line">        client.generateResponse(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> IOException e)</span> &#123;</span><br><span class="line">                <span class="comment">// 顯示報錯訊息</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">responseBody</span> <span class="operator">=</span> response.body().string();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 獲取回應結果</span></span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="comment">// 顯示報錯訊息</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="comment">// 顯示報錯訊息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="獲取回應"><a href="#獲取回應" class="headerlink" title="獲取回應"></a>獲取回應</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> String <span class="title function_">getResponse</span><span class="params">(String responseBody)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> client.getResponse(responseBody);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="附加資訊"><a href="#附加資訊" class="headerlink" title="附加資訊"></a>附加資訊</h1><hr>
<h2 id="OpenAI-參數說明"><a href="#OpenAI-參數說明" class="headerlink" title="OpenAI 參數說明"></a>OpenAI 參數說明</h2><ul>
<li><code>max_tokens</code>: 是機器人<strong>最大可補全的權標數目</strong>，預設是 <code>16</code>。如果<strong>設定較小</strong>，會<strong>限制機器人對所輸入文本的理解能力</strong>，反之，則讓它<strong>更好理解文本內容</strong>。</li>
</ul>
<div class="note-large notel-info"><div class="notel-title"><p>如何數出Tokens數目</p>
</div><div class="notel-content"><p>詳見官方支援服務：<a class="link" href="https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them">https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<br>

<p>1 個權標 ≃ 4 個英文字符<br>1 個權標 ≃ ¾ (四分之三) 個字詞<br>100 個權標 ≃ 75 個字詞</p>
<br>

<p>1-2 個句子 ≃ 30 個權標<br>1 個句子 ≃ 100 個權標</p>
<br>
1,500 字詞 ≃ 2048 個權標 </div></div>

<ul>
<li><code>temperature</code> 是用以控制機器人<strong>創造文本的多樣性及創造性</strong>，範圍為 <code>0-2</code>，預設是 <code>1</code>，不用設置 <code>top_p</code>。</li>
<li><code>top_p</code>: 功能主要與 <code>temperature</code> 相同，不用 <code>temperature</code>。</li>
<li><code>echo</code>: 是用於輸出補全後文本前傳回 <code>prompt</code> 所設定的文本。</li>
</ul>
<div class="note-large notel-info"><div class="notel-title"><p>Echo示例結果展示</p>
</div><div class="notel-content"><div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><figcaption><span>沒有設置<code>echo</code></span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Prompt:</span> <span class="string">Hello.</span></span><br><span class="line"><span class="attr">Completion:</span> <span class="string">Hi!</span> <span class="string">how</span> <span class="string">can</span> <span class="string">I</span> <span class="string">assist</span> <span class="string">you</span> <span class="string">today?</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><figcaption><span>有設置<code>echo</code></span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">Prompt:</span> <span class="string">Hello.</span></span><br><span class="line"><span class="attr">Completion:</span> <span class="string">Hello.</span></span><br><span class="line">            <span class="string">Hi!</span> <span class="string">how</span> <span class="string">can</span> <span class="string">I</span> <span class="string">assist</span> <span class="string">you</span> <span class="string">today?</span></span><br></pre></td></tr></table></figure></div>
 </div></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼: 建立請求 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><figcaption><span>建立請求 - text-davinci-003</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Configuration</span>, <span class="title class_">OpenAIApi</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;openai&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> configuration = <span class="keyword">new</span> <span class="title class_">Configuration</span>(&#123;</span><br><span class="line">    <span class="attr">apiKey</span>: process.<span class="property">env</span>.<span class="property">OPENAI_API_KEY</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> openai = <span class="keyword">new</span> <span class="title class_">OpenAIApi</span>(configuration);</span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> openai.<span class="title function_">createCompletion</span>(&#123;</span><br><span class="line">    <span class="attr">model</span>: <span class="string">&quot;text-davinci-003&quot;</span>,</span><br><span class="line">    <span class="attr">prompt</span>: <span class="string">&quot;Say this is a test&quot;</span>,</span><br><span class="line">    <span class="attr">max_tokens</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="attr">temperature</span>: <span class="number">0</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><figcaption><span>建立請求 - gpt-3.5-turbo</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Configuration</span>, <span class="title class_">OpenAIApi</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;openai&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> configuration = <span class="keyword">new</span> <span class="title class_">Configuration</span>(&#123;</span><br><span class="line">  <span class="attr">apiKey</span>: process.<span class="property">env</span>.<span class="property">OPENAI_API_KEY</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> openai = <span class="keyword">new</span> <span class="title class_">OpenAIApi</span>(configuration);</span><br><span class="line"><span class="keyword">const</span> completion = <span class="keyword">await</span> openai.<span class="title function_">createChatCompletion</span>(&#123;</span><br><span class="line">  <span class="attr">model</span>: <span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">  <span class="attr">messages</span>: [&#123;<span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: <span class="string">&quot;Hello world&quot;</span>&#125;],</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(completion.<span class="property">data</span>.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>);</span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼: 參數設定 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>參數設定 - text-davinci-003</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-davinci-003&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prompt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Say this is a test&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_tokens&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;top_p&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;n&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;stream&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;logprobs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;stop&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>參數設定 - gpt-3.5-turbo</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gpt-3.5-turbo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;messages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hello!&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視代碼: 回應結果 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>回應結果 - text-davinci-003</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text_completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1589478378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;model&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text-davinci-003&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nThis is indeed a test&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;logprobs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;length&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">7</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">12</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>回應結果 - gpt-3.5-turbo</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chatcmpl-123&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;object&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chat.completion&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;created&quot;</span><span class="punctuation">:</span> <span class="number">1677652288</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;choices&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assistant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n\nHello there, how may I assist you today?&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;finish_reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stop&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usage&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prompt_tokens&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;completion_tokens&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;total_tokens&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
              </div>
            </details>

<hr>
<h1 id="源代碼"><a href="#源代碼" class="headerlink" title="源代碼"></a>源代碼</h1><div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">AndroidManifest.xml</a></li><li class="tab"><a class="#source_code-2">build.gradle</a></li><li class="tab"><a class="#source_code-3">OpenAIUtil.java</a></li><li class="tab"><a class="#source_code-4">MainActivity.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>AndroidManifest.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><figcaption><span>build.gradle (app/)</span></figcaption><table><tr><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;com.android.application&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    implementation <span class="string">&#x27;com.squareup.okhttp3:okhttp:4.10.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>OpenAIUtil.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OpenAIUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">MediaType</span> <span class="variable">mediaType</span> <span class="operator">=</span> MediaType.parse(<span class="string">&quot;application/json; charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> OkHttpClient client;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> readTimeout, writeTimeout, connectTimeout;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> maxTokens, temperature;</span><br><span class="line">    <span class="keyword">private</span> String apiKey, apiUrl, model, prompt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TEXT_DAVINCI_003</span> <span class="operator">=</span> <span class="string">&quot;text-davinci-003&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">GPT_3_5_TURBO</span> <span class="operator">=</span> <span class="string">&quot;gpt-3.5-turbo&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">COMPLETION_URL</span> <span class="operator">=</span> <span class="string">&quot;https://api.openai.com/v1/completions&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHAT_COMPLETION_URL</span> <span class="operator">=</span> <span class="string">&quot;https://api.openai.com/v1/chat/completions&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OpenAIUtil</span><span class="params">()</span> &#123;</span><br><span class="line">        client = <span class="keyword">new</span> <span class="title class_">OkHttpClient</span>.Builder()</span><br><span class="line">                .connectTimeout(connectTimeout, TimeUnit.SECONDS)</span><br><span class="line">                .readTimeout(readTimeout, TimeUnit.SECONDS)</span><br><span class="line">                .writeTimeout(writeTimeout, TimeUnit.SECONDS)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getReadTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> readTimeout; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getWriteTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> writeTimeout; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getConnectTimeout</span><span class="params">()</span> &#123; <span class="keyword">return</span> connectTimeout; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getMaxTokens</span><span class="params">()</span> &#123; <span class="keyword">return</span> maxTokens; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getTemperature</span><span class="params">()</span> &#123; <span class="keyword">return</span> temperature; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAPIKey</span><span class="params">()</span> &#123; <span class="keyword">return</span> apiKey; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAPIUrl</span><span class="params">()</span> &#123; <span class="keyword">return</span> apiUrl; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getModel</span><span class="params">()</span> &#123; <span class="keyword">return</span> model; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPrompt</span><span class="params">()</span> &#123; <span class="keyword">return</span> prompt; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setReadTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.readTimeout = readTimeout; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWriteTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.writeTimeout = writeTimeout; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setConnectTimeout</span><span class="params">()</span> &#123; <span class="built_in">this</span>.connectTimeout = connectTimeout; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMaxTokens</span><span class="params">(<span class="type">double</span> maxTokens)</span> &#123; <span class="built_in">this</span>.maxTokens = maxTokens; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTemperature</span><span class="params">(<span class="type">double</span> temperature)</span> &#123; <span class="built_in">this</span>.temperature = temperature; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAPIUrl</span><span class="params">(String apiUrl)</span> &#123; <span class="built_in">this</span>.apiUrl = apiUrl; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAPIKey</span><span class="params">(String apiKey)</span> &#123; <span class="built_in">this</span>.apiKey = apiKey; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setModel</span><span class="params">(String model)</span> &#123; <span class="built_in">this</span>.model = model; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrompt</span><span class="params">(String prompt)</span> &#123; <span class="built_in">this</span>.prompt = prompt; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">getSettings</span><span class="params">()</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line"></span><br><span class="line">        json.put(<span class="string">&quot;model&quot;</span>, model);</span><br><span class="line">        json.put(<span class="string">&quot;temperature&quot;</span>, temperature);</span><br><span class="line">        json.put(<span class="string">&quot;max_tokens&quot;</span>, maxTokens);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (model.equals(TEXT_DAVINCI_003)) &#123;</span><br><span class="line">            json.put(<span class="string">&quot;prompt&quot;</span>, prompt);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model.equals(GPT_3_5_TURBO)) &#123;</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonMessageObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            jsonMessageObj.put(<span class="string">&quot;role&quot;</span>, <span class="string">&quot;user&quot;</span>);</span><br><span class="line">            jsonMessageObj.put(<span class="string">&quot;content&quot;</span>, prompt);</span><br><span class="line">            jsonArray.put(jsonMessageObj);</span><br><span class="line"></span><br><span class="line">            json.put(<span class="string">&quot;messages&quot;</span>, jsonArray);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">generateResponse</span><span class="params">(Callback callback)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> getSettings();</span><br><span class="line">        <span class="type">Request</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Request</span>.Builder()</span><br><span class="line">                .url(apiUrl)</span><br><span class="line">                .header(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;Bearer &quot;</span> + apiKey)</span><br><span class="line">                .header(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">                .post(RequestBody.create(json.toString(), mediaType))</span><br><span class="line">                .build();</span><br><span class="line">        client.newCall(request).enqueue(callback);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getResponse</span><span class="params">(String responseBody)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(responseBody);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (model.equals(TEXT_DAVINCI_003)) &#123;</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;choices&quot;</span>);</span><br><span class="line">            resultText = jsonArray.getJSONObject(<span class="number">0</span>).getString(<span class="string">&quot;text&quot;</span>);</span><br><span class="line">            resultText.trim();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (model.equals(GPT_3_5_TURBO)) &#123;</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> jsonObject.getJSONArray(<span class="string">&quot;choices&quot;</span>);</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonMessageObj</span> <span class="operator">=</span> jsonArray.getJSONObject(<span class="number">0</span>).getJSONObject(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">            resultText = jsonMessageObj.getString(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">            resultText.trim();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> resultText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getErrorResponse</span><span class="params">(String responseBody)</span> <span class="keyword">throws</span> JSONException &#123;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(responseBody);</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">errorObj</span> <span class="operator">=</span> jsonObject.getJSONObject(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> errorObj.getString(<span class="string">&quot;message&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> resultText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><figcaption><span>MainActivity.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> MainActivity.class.getSimpleName();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OpenAIUtil client;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line"></span><br><span class="line">        setupOpenAIUtil();</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">btnSend</span> <span class="operator">=</span> binding.btnSend;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">etPrompt</span> <span class="operator">=</span> binding.etPrompt;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">prompt</span> <span class="operator">=</span> etPrompt.getText().toString();</span><br><span class="line">        btnSend.setOnClickListener(v -&gt; sendRequest(prompt));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupOpenAIUtil</span><span class="params">()</span> &#123;</span><br><span class="line">        client = <span class="keyword">new</span> <span class="title class_">OpenAIUtil</span>();</span><br><span class="line"></span><br><span class="line">        client.setAPIKey(apiKey);</span><br><span class="line">        client.setAPIUrl(apiUrl);</span><br><span class="line">        client.setModel(model);</span><br><span class="line">        client.setTemperature(temperature);</span><br><span class="line">        client.setMaxTokens(maxTokens);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendRequest</span><span class="params">(String prompt)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client.setPrompt(prompt);</span><br><span class="line">            client.generateResponse(<span class="keyword">new</span> <span class="title class_">Callback</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onFailure</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> IOException e)</span> &#123;</span><br><span class="line">                    <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">                    Log.e(TAG, e.toString())</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onResponse</span><span class="params">(<span class="meta">@NonNull</span> Call call, <span class="meta">@NonNull</span> Response response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">responseBody</span> <span class="operator">=</span> response.body().string();</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 獲取回應結果</span></span><br><span class="line"></span><br><span class="line">                        <span class="type">String</span> <span class="variable">resultText</span> <span class="operator">=</span> client.getResponse(responseBody);</span><br><span class="line">                        <span class="type">TextView</span> <span class="variable">tvResult</span> <span class="operator">=</span> binding.tvResult;</span><br><span class="line">                        tvResult.setText(resultText);</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">                        Log.e(TAG, client.getErrorResponse(responseBody))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 顯示報錯訊息</span></span><br><span class="line"></span><br><span class="line">            Log.e(TAG, e.toString())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>]]></content>
      <categories>
        <category>Android 開發</category>
        <category>Utils 實用程式</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Xml</tag>
        <tag>Javascript</tag>
        <tag>Json</tag>
      </tags>
  </entry>
  <entry>
    <title>如何把 Android Studio 項目上載至 GitHub</title>
    <url>//post/android_dev_push_project_to_github.html</url>
    <content><![CDATA[<p>大家好，歡迎來到我的網誌。今天會教大家如何把 Android Studio 項目上載至 GitHub 平台以達開放源碼的版本控制。</p>
<hr>
<h1 id="在-GitHub-建立新-Repository"><a href="#在-GitHub-建立新-Repository" class="headerlink" title="在 GitHub 建立新 Repository"></a>在 GitHub 建立新 Repository</h1><p>既然要把 Android Studio 項目上載至 GitHub，那當然你要先預備一個 Repository 用以存放上載後的源始碼。</p>
<hr>
<h2 id="建立項目"><a href="#建立項目" class="headerlink" title="建立項目"></a>建立項目</h2><p><img src="/post/android_dev_push_project_to_github/sect1-img1.png" alt="sect1-img1"></p>
<p><code>Repository name</code> 就是你的項目名稱，在這裏我會以 <code>Test</code> 作示例，當你弄好創建設定後，便可以點擊 <code>Create repository</code> 按鈕建立。</p>
<hr>
<h2 id="複製-Git-鏈結"><a href="#複製-Git-鏈結" class="headerlink" title="複製 Git 鏈結"></a>複製 Git 鏈結</h2><p><img src="/post/android_dev_push_project_to_github/sect1-img2.png" alt="sect1-img2"></p>
<p>一旦創建好了後，它會導向至你剛建好的項目內，在 <code>Quick setup</code> 那處顯示了項目的 git 鏈結，先把它複製，作稍後使用。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/BlueWhaleYT/Test.git</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="在-Android-Studio-建立新項目"><a href="#在-Android-Studio-建立新項目" class="headerlink" title="在 Android Studio 建立新項目"></a>在 Android Studio 建立新項目</h1><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>我用的是 macOS 版本的 Android Studio，<strong>部分功能或許有略微差異</strong>，請謹慎處理。</p>
</div>

<p><img src="/post/android_dev_push_project_to_github/sect2-img1.png" alt="sect2-img1"></p>
<p>打開 Android Studio，進入 <code>New Project</code> 視窗，新建一個項目，選好你想要的模版，再按 <code>Next</code>。</p>
<p><img src="/post/android_dev_push_project_to_github/sect2-img2.png" alt="sect2-img2"></p>
<p>為你的項目命名，並跟據你的需要調整其他設定，完成好就按 <code>Finish</code>。</p>
<hr>
<h1 id="為項目啟用-GitHub-版本控制"><a href="#為項目啟用-GitHub-版本控制" class="headerlink" title="為項目啟用 GitHub 版本控制"></a>為項目啟用 GitHub 版本控制</h1><p><img src="/post/android_dev_push_project_to_github/sect3-img1.png" alt="sect3-img1"></p>
<p>點擊上方工具列的 <code>VCS</code> 選項，於其下拉式選單中點擊 <code>Enable Version Control Integration</code>。</p>
<p><img src="/post/android_dev_push_project_to_github/sect3-img2.png" alt="sect3-img2"></p>
<p>然後它會跳出這個視窗，它預設已經設定為 <code>Git</code>，所以我們直接按 <code>OK</code>。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>檔案名稱是紅色的，代表你項目成功啟用了 GitHub 版本控制。</p>
</div>

<p><img src="/post/android_dev_push_project_to_github/sect3-img3.png" alt="sect3-img3"></p>
<p>留意左方，項目檔案顯示的方式，現在以 <code>Android</code> 配置來顯示，我們需要切換為 <code>Project</code>。</p>
<p><img src="/post/android_dev_push_project_to_github/sect3-img4.png" alt="sect3-img4"></p>
<p>右鍵點擊你的項目資料夾（在 <code>Project</code> 按鈕下面那個），找出 <code>Git</code> 選項並點擊 <code>Add</code> 按鈕。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>檔案名稱是綠色的，代表你項目內檔案成功新增至 GitHub 版本控制。</p>
</div>

<hr>
<h2 id="提交項目所有檔案至版本控制"><a href="#提交項目所有檔案至版本控制" class="headerlink" title="提交項目所有檔案至版本控制"></a>提交項目所有檔案至版本控制</h2><p><img src="/post/android_dev_push_project_to_github/sect3-img5.png" alt="sect3-img5"></p>
<p>再右鍵你的項目資料夾，找出 <code>Git</code> 並按 <code>Commit Directory</code>。</p>
<p><img src="/post/android_dev_push_project_to_github/sect3-img6.png" alt="sect3-img6"></p>
<p>完成後，你會看到所以檔案的變更，下方是用來供你輸入 Commit 訊息，在這裏，我輸入了：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is your first release of your project.</span><br><span class="line">Type what you want.</span><br></pre></td></tr></table></figure></div>

<p>不過我們還沒設定 <code>Remote</code>，所以先別按 <code>Commit and Push</code>。</p>
<hr>
<h2 id="設定-Remote"><a href="#設定-Remote" class="headerlink" title="設定 Remote"></a>設定 Remote</h2><p><img src="/post/android_dev_push_project_to_github/sect3-img7.png" alt="sect3-img7"></p>
<p>右鍵點擊項目資料夾，於 <code>Git</code> 選擇 內點擊 <code>Remotes</code> 或 <code>Manage Remotes</code>。</p>
<h2 id="貼上-Git-鏈結"><a href="#貼上-Git-鏈結" class="headerlink" title="貼上 Git 鏈結"></a>貼上 Git 鏈結</h2><p><img src="/post/android_dev_push_project_to_github/sect3-img8.png" alt="sect3-img8"></p>
<p>現在就把你剛複製的 Git 鏈接貼上至 <code>URL</code>，上面的 <code>origin</code>，你可以按需要更改，如果不更改，檔案便會用 <code>main</code> 分支作存取位置，在這裏我不更改，我用 <code>origin</code>。</p>
<h2 id="把檔案推送至-GitHub"><a href="#把檔案推送至-GitHub" class="headerlink" title="把檔案推送至 GitHub"></a>把檔案推送至 GitHub</h2><p><img src="/post/android_dev_push_project_to_github/sect3-img9.png" alt="sect3-img9"></p>
<p>右鍵項目資料夾，於 <code>Git</code> 選項內點擊 <code>Push</code>。</p>
<p><img src="/post/android_dev_push_project_to_github/sect3-img10.png" alt="sect3-img10"></p>
<p>點擊 <code>Push</code>。</p>
<h1 id="最後展示"><a href="#最後展示" class="headerlink" title="最後展示"></a>最後展示</h1><p><img src="/post/android_dev_push_project_to_github/sect3-img11.png" alt="sect3-img11"></p>
<p>回到你的 GitHub 網址，你會發現檔案成功上載了。</p>
<hr>
<p>是不是很簡單？希望能幫到你們，如果有其他問題，歡迎到下方留言。下篇文章再會。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
  </entry>
  <entry>
    <title>List all files of Android/data using SAF</title>
    <url>//post/android_dev_saf_list_android_data_files.html</url>
    <content><![CDATA[<p><strong>Starting from Android 11</strong>, <code>Android/data</code> &amp; <code>Android/obb</code> files <strong>are not able to be accessed</strong> through general external storage uses. However, the Android Official doesn’t block out the way to access those files, that is the way we could wield is <strong>Storage Access Framework (SAF)</strong>. Therefore, we will learn how to list all files of Android&#x2F;data using SAF in this article.</p>
<hr>
<blockquote>
<p>With SAF, we don’t need any permissions from <code>AndroidManifest.xml</code> to access the files of external storages.</p>
</blockquote>
<hr>
<h1 id="SAFUtil-java"><a href="#SAFUtil-java" class="headerlink" title="SAFUtil.java"></a>SAFUtil.java</h1><hr>
<h2 id="Request-code"><a href="#Request-code" class="headerlink" title="Request code"></a>Request code</h2><p>Declare a request code of accessing a directory.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">NEW_DIR_REQ_CODE</span> <span class="operator">=</span> <span class="number">43</span>;</span><br></pre></td></tr></table></figure></div>

<h2 id="Request-permissions"><a href="#Request-permissions" class="headerlink" title="Request permissions"></a>Request permissions</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">askPermission</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// to access Android/data/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">dirName</span> <span class="operator">=</span> <span class="string">&quot;data&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// to access Android/obb/</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">dirName</span> <span class="operator">=</span> <span class="string">&quot;obb&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(</span><br><span class="line">            <span class="string">&quot;content://com.android.externalstorage.documents/tree/primary%3AAndroid/document/primary%3AAndroid%2F&quot;</span> + dirName);</span><br><span class="line"></span><br><span class="line">    <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">    i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);</span><br><span class="line">    i.setAction(Intent.ACTION_OPEN_DOCUMENT_TREE);</span><br><span class="line">    i.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri);</span><br><span class="line">    activity.startActivityForResult(i, NEW_DIR_REQ_CODE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Check-if-filepath-is-directory"><a href="#Check-if-filepath-is-directory" class="headerlink" title="Check if filepath is directory"></a>Check if filepath is directory</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDirectory</span><span class="params">(String mimeType)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> DocumentsContract.Document.MIME_TYPE_DIR.equals(mimeType);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Close-and-release-the-sources"><a href="#Close-and-release-the-sources" class="headerlink" title="Close and release the sources"></a>Close and release the sources</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">closeQuietly</span><span class="params">(Closeable closeable)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (closeable != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            closeable.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RuntimeException re) &#123;</span><br><span class="line">            <span class="keyword">throw</span> re;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h1><hr>
<h2 id="Open-the-document-tree"><a href="#Open-the-document-tree" class="headerlink" title="Open the document tree"></a>Open the document tree</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    <span class="keyword">if</span> (_esultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">        <span class="keyword">if</span> (data != <span class="literal">null</span>) &#123;</span><br><span class="line">            muri = _data.getData();</span><br><span class="line">            <span class="keyword">if</span> (Uri.decode(muri.toString()).endsWith(<span class="string">&quot;:&quot;</span>)) &#123;</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;can&#x27;t use root folder please choose another&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">int</span> <span class="variable">takeFlags</span> <span class="operator">=</span> data.getFlags() &amp; (Intent.FLAG_GRANT_READ_URI_PERMISSION</span><br><span class="line">                        | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// make selected directory be permanent, no need to select directory again</span></span><br><span class="line">                getContentResolver().takePersistableUriPermission(muri, takeFlags);</span><br><span class="line"></span><br><span class="line">                sp.edit().putString(<span class="string">&quot;FOLDER_URI&quot;</span>, muri.toString()).commit();</span><br><span class="line">                mfile = DocumentFile.fromTreeUri(<span class="built_in">this</span>, muri);</span><br><span class="line">                mfile1 = mfile.createFile(<span class="string">&quot;*/*&quot;</span>, <span class="string">&quot;test.file&quot;</span>);</span><br><span class="line">                uri2 = mfile1.getUri();</span><br><span class="line">                sp.edit()</span><br><span class="line">                        .putString(<span class="string">&quot;DIRECT_FOLDER_URI&quot;</span>,</span><br><span class="line">                                uri2.toString().substring((<span class="type">int</span>) (<span class="number">0</span>), (<span class="type">int</span>) (uri2.toString().length() - <span class="number">9</span>)))</span><br><span class="line">                        .commit();</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    DocumentsContract.deleteDocument(getApplicationContext().getContentResolver(), uri2);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                parenturi = Uri.parse(sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(getApplicationContext(), listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">                    binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">                    ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;permission not granted&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        finishAffinity();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="List-all-files"><a href="#List-all-files" class="headerlink" title="List all files"></a>List all files</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadFiles</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        muri = Uri.parse(sp.getString(<span class="string">&quot;DIRECT_FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">        mfile = DocumentFile.fromTreeUri(<span class="built_in">this</span>, muri);</span><br><span class="line">        <span class="keyword">if</span> (!mfile.canRead() || !mfile.canWrite()) &#123;</span><br><span class="line">            SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            parenturi = Uri.parse(sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">            <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">                binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">                ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Back-to-Android-x2F-data-x2F-directory"><a href="#Back-to-Android-x2F-data-x2F-directory" class="headerlink" title="Back to Android&#x2F;data&#x2F; directory"></a>Back to Android&#x2F;data&#x2F; directory</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">backToAndroidData</span><span class="params">()</span> &#123;</span><br><span class="line">    currentLoc = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    listmap.clear();</span><br><span class="line">    <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">        binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">        ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Back-to-last-opened-directory"><a href="#Back-to-last-opened-directory" class="headerlink" title="Back to last opened directory"></a>Back to last opened directory</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">gotoLastOpenedDirectory</span><span class="params">()</span> &#123;</span><br><span class="line">    listmap.clear();</span><br><span class="line">    <span class="keyword">if</span> (lastLoc.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, lastLoc)) &#123;</span><br><span class="line">            refresh();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">            refresh();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Refresh-the-directory"><a href="#Refresh-the-directory" class="headerlink" title="Refresh the directory"></a>Refresh the directory</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">refresh</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">        ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Source-codes"><a href="#Source-codes" class="headerlink" title="Source codes"></a>Source codes</h1><div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Layouts</a></li><li class="tab"><a class="#source_code-2">SAFUtil.java</a></li><li class="tab"><a class="#source_code-3">MainActivity.java</a></li><li class="tab"><a class="#source_code-4">ListAdapter.java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>activity_main.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/lvFiles&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><figcaption><span>layout_list_item.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/layoutItem&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;2dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/imgIcon&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:focusable</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;35dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;35dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:src</span>=<span class="string">&quot;@drawable/ic_baseline_folder_24&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:scaleType</span>=<span class="string">&quot;fitCenter&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/tvFilename&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:focusable</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;TextView&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">&quot;14sp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SAFUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">NEW_DIR_REQ_CODE</span> <span class="operator">=</span> <span class="number">43</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">askPermission</span><span class="params">(Activity activity)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// to access Android/data/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">dirName</span> <span class="operator">=</span> <span class="string">&quot;data&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// to access Android/obb/</span></span><br><span class="line">        <span class="comment">//String dirName = &quot;obb&quot;;</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Uri</span> <span class="variable">uri</span> <span class="operator">=</span> Uri.parse(</span><br><span class="line">                <span class="string">&quot;content://com.android.externalstorage.documents/tree/primary%3AAndroid/document/primary%3AAndroid%2F&quot;</span> + dirName);</span><br><span class="line"></span><br><span class="line">        <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        i.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);</span><br><span class="line">        i.setAction(Intent.ACTION_OPEN_DOCUMENT_TREE);</span><br><span class="line">        i.putExtra(DocumentsContract.EXTRA_INITIAL_URI, uri);</span><br><span class="line">        activity.startActivityForResult(i, NEW_DIR_REQ_CODE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">updateDirectoryEntries</span><span class="params">(Context context, ArrayList&lt;HashMap&lt;String, Object&gt;&gt; listmap, Uri uri, String str)</span> &#123;</span><br><span class="line"></span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="type">ContentResolver</span> <span class="variable">contentResolver</span> <span class="operator">=</span> context.getContentResolver();</span><br><span class="line"></span><br><span class="line">        Uri childrenUri;</span><br><span class="line">        <span class="keyword">if</span> (str == <span class="literal">null</span>) childrenUri = DocumentsContract.buildChildDocumentsUriUsingTree(uri, DocumentsContract.getTreeDocumentId(uri));</span><br><span class="line">        <span class="keyword">else</span> childrenUri = DocumentsContract.buildChildDocumentsUriUsingTree(uri, str);</span><br><span class="line"></span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">childCursor</span> <span class="operator">=</span> contentResolver.query(childrenUri,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;</span><br><span class="line">                        DocumentsContract.Document.COLUMN_DOCUMENT_ID, DocumentsContract.Document.COLUMN_DISPLAY_NAME, DocumentsContract.Document.COLUMN_MIME_TYPE</span><br><span class="line">                &#125;, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (childCursor.moveToNext()) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">docId</span> <span class="operator">=</span> childCursor.getString(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> childCursor.getString(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">mime</span> <span class="operator">=</span> childCursor.getString(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">                map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">                map.put(<span class="string">&quot;docId&quot;</span>, docId);</span><br><span class="line">                map.put(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">                map.put(<span class="string">&quot;mime&quot;</span>, mime);</span><br><span class="line"></span><br><span class="line">                listmap.add(map);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            closeQuietly(childCursor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDirectory</span><span class="params">(String mimeType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DocumentsContract.Document.MIME_TYPE_DIR.equals(mimeType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">closeQuietly</span><span class="params">(Closeable closeable)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (closeable != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                closeable.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (RuntimeException re) &#123;</span><br><span class="line">                <span class="keyword">throw</span> re;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ActivityMainBinding binding;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Uri muri, uri2, parenturi;</span><br><span class="line">    <span class="keyword">private</span> DocumentFile mfile, mfile1;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>, currentLoc = <span class="string">&quot;&quot;</span>, lastLoc = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;HashMap&lt;String, Object&gt;&gt; listmap = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> SharedPreferences sp;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        binding = ActivityMainBinding.inflate(getLayoutInflater());</span><br><span class="line">        setContentView(binding.getRoot());</span><br><span class="line">        initialize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span> (resultCode == Activity.RESULT_OK) &#123;</span><br><span class="line">            <span class="keyword">if</span> (_data != <span class="literal">null</span>) &#123;</span><br><span class="line">                muri = data.getData();</span><br><span class="line">                <span class="keyword">if</span> (Uri.decode(muri.toString()).endsWith(<span class="string">&quot;:&quot;</span>)) &#123;</span><br><span class="line">                    Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;can&#x27;t use root folder please choose another&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                    SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">int</span> <span class="variable">takeFlags</span> <span class="operator">=</span> data.getFlags() &amp; (Intent.FLAG_GRANT_READ_URI_PERMISSION</span><br><span class="line">                            | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);</span><br><span class="line"></span><br><span class="line">                    getContentResolver().takePersistableUriPermission(muri, takeFlags);</span><br><span class="line">                    sp.edit().putString(<span class="string">&quot;FOLDER_URI&quot;</span>, muri.toString()).commit();</span><br><span class="line">                    mfile = DocumentFile.fromTreeUri(<span class="built_in">this</span>, muri);</span><br><span class="line">                    mfile1 = mfile.createFile(<span class="string">&quot;*/*&quot;</span>, <span class="string">&quot;test.file&quot;</span>);</span><br><span class="line">                    uri2 = mfile1.getUri();</span><br><span class="line">                    sp.edit()</span><br><span class="line">                            .putString(<span class="string">&quot;DIRECT_FOLDER_URI&quot;</span>,</span><br><span class="line">                                    uri2.toString().substring((<span class="type">int</span>) (<span class="number">0</span>), (<span class="type">int</span>) (uri2.toString().length() - <span class="number">9</span>)))</span><br><span class="line">                            .commit();</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        DocumentsContract.deleteDocument(getApplicationContext().getContentResolver(), uri2);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    parenturi = Uri.parse(sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                    <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(getApplicationContext(), listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">                        binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">                        ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;permission not granted&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            finishAffinity();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        loadFiles();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadFiles</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            muri = Uri.parse(sp.getString(<span class="string">&quot;DIRECT_FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">            mfile = DocumentFile.fromTreeUri(<span class="built_in">this</span>, muri);</span><br><span class="line">            <span class="keyword">if</span> (!mfile.canRead() || !mfile.canWrite()) &#123;</span><br><span class="line">                SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                parenturi = Uri.parse(sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">                    binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">                    ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            SAFUtil.askPermission(<span class="built_in">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">backToAndroidData</span><span class="params">()</span> &#123;</span><br><span class="line">        currentLoc = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        listmap.clear();</span><br><span class="line">        <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">            binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">            ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">gotoLastOpenedDirectory</span><span class="params">()</span> &#123;</span><br><span class="line">        listmap.clear();</span><br><span class="line">        <span class="keyword">if</span> (lastLoc.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, lastLoc)) &#123;</span><br><span class="line">                refresh();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(<span class="built_in">this</span>, listmap, parenturi, <span class="literal">null</span>)) &#123;</span><br><span class="line">                refresh();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">refresh</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            binding.lvFiles.setAdapter(<span class="keyword">new</span> <span class="title class_">ListAdapter</span>(listmap));</span><br><span class="line">            ((BaseAdapter) binding.lvFiles.getAdapter()).notifyDataSetChanged();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    ArrayList&lt;HashMap&lt;String, Object&gt;&gt; data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ListAdapter</span><span class="params">(ArrayList&lt;HashMap&lt;String, Object&gt;&gt; arr)</span> &#123;</span><br><span class="line">        data = arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> HashMap&lt;String, Object&gt; <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data.get(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="keyword">final</span> <span class="type">int</span> position, View v, ViewGroup container)</span> &#123;</span><br><span class="line">        <span class="type">LayoutInflater</span> <span class="variable">inflater</span> <span class="operator">=</span> (LayoutInflater) getBaseContext()</span><br><span class="line">                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">        <span class="type">View</span> <span class="variable">view</span> <span class="operator">=</span> v;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (view == <span class="literal">null</span>) &#123;</span><br><span class="line">            view = inflater.inflate(R.layout.layout_list_item, <span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">LinearLayout</span> <span class="variable">layoutItem</span> <span class="operator">=</span> _view.findViewById(R.id.layoutItem);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">ImageView</span> <span class="variable">imgIcon</span> <span class="operator">=</span> _view.findViewById(R.id.imgIcon);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">TextView</span> <span class="variable">tvFilename</span> <span class="operator">=</span> _view.findViewById(R.id.tvFilename);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            tvFilename.setText(data.get((<span class="type">int</span>) position).get(<span class="string">&quot;name&quot;</span>).toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (SAFUtil.isDirectory(data.get((<span class="type">int</span>) position).get(<span class="string">&quot;mime&quot;</span>).toString())) &#123;</span><br><span class="line">            imgIcon.setImageResource(R.drawable.ic_baseline_folder_24);</span><br><span class="line">            layoutItem.setOnClickListener(view1 -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (currentLoc.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    lastLoc = currentLoc;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    lastLoc = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                currentLoc = data.get((<span class="type">int</span>) position).get(<span class="string">&quot;docId&quot;</span>).toString();</span><br><span class="line"></span><br><span class="line">                listmap.clear();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (SAFUtil.updateDirectoryEntries(getApplicationContext(), listmap, parenturi, currentLoc)) &#123;</span><br><span class="line">                    refresh();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            imgIcon.setImageResource(R.drawable.ic_baseline_insert_drive_file_24);</span><br><span class="line"></span><br><span class="line">            layoutItem.setOnClickListener(view12 -&gt; &#123;</span><br><span class="line">                muri = Uri.parse(</span><br><span class="line">                        sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>).concat(<span class="string">&quot;/document/&quot;</span>.concat(data.get((<span class="type">int</span>) position)</span><br><span class="line">                                .get(<span class="string">&quot;docId&quot;</span>).toString().replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;%3A&quot;</span>).replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;%2F&quot;</span>))));</span><br><span class="line">                <span class="keyword">if</span> (currentLoc.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    uri2 = Uri.parse(sp.getString(<span class="string">&quot;FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            .concat(<span class="string">&quot;/document/&quot;</span>.concat(currentLoc.replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;%3A&quot;</span>).replace(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;%2F&quot;</span>))));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    uri2 = Uri.parse(sp.getString(<span class="string">&quot;DIRECT_FOLDER_URI&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refresh</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            notifyDataSetChanged();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<p>That’s all, this article aims to tutor on listing all directories and files of Android&#x2F;data&#x2F; directory using SAF. Later this year, there will be more SAF tutorials since SAF is of utmost significance in this era, stay tuned.</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Sora Editor with TextMate 0.18.1</title>
    <url>//post/android_dev_sora_editor_library_with_textmate_0_18_1.html</url>
    <content><![CDATA[<p>Hello, welcome to this blog. Today, we’re going to use Sora Editor with TextMate in version <code>0.18.1</code> using Java.</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>The source codes that show in this article <strong>may be deprecated or not working</strong> as the development of <a target="_blank" href="https://github.com/Rosemoe/sora-editor">Sora Editor</a> is mushrooming rapidly. Thanksfully, the codes still work till <code>0.21.0</code>.</p>
<p>However, if there’s any breaking changes of the programs and methods, there will be an updated version in the foreseeable future.</p>
</div>


<hr>
<h1 id="Why-this-post"><a href="#Why-this-post" class="headerlink" title="Why this post?"></a>Why this post?</h1><p>Due to <strong>the open source code of Sora Editor’s demo application is all about in Kotlin</strong>, which is not friendly for the developers who may not figure out how to write and understand Kotlin codes, me also XD. In view of this, I’m here to show you how to use Sora Editor with TextMate in version <code>0.18.1</code> using Java.</p>
<hr>
<h1 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h1><hr>
<h2 id="Theme-files"><a href="#Theme-files" class="headerlink" title="Theme files"></a>Theme files</h2><p>If you don’t want to find and download yourself, you can download the theme files here. In this article, I will provide a theme of light mode and dark mode for one i.e. <code>quietlight</code> and <code>darcula</code> respectively.</p>
<a class="button " href="https://www.mediafire.com/file/u0wzx8mdek7lbe2/quietlight.json/file" title="quietlight.json"><i class="fa-solid fa-download"></i> quietlight.json</a>

<a class="button " href="https://www.mediafire.com/file/i5sp96tkvz5vjhy/darcula.json/file" title="darcula.json"><i class="fa-solid fa-download"></i> darcula.json</a>

<hr>
<h2 id="Language-files"><a href="#Language-files" class="headerlink" title="Language files"></a>Language files</h2><p>To make Textmate work, you need to prepare the files yourself. That said, you need to find relative resources from <a target="_blank" href="https://github.com/eclipse/tm4e">tm4e</a>. Here, I will provide Java language files as an example.</p>
<p>In the <code>java.zip</code>, there are several files you need, actually, they are the syntax files for <code>Java</code>, namely <code>java.tmLanguage.json</code> and <code>language-configuration.json</code> files.</p>
<a class="button " href="https://www.mediafire.com/file/m2ofjvn964hpr3r/java.zip/file" title="java.zip"><i class="fa-solid fa-download"></i> java.zip</a>

<a class="button " href="https://www.mediafire.com/file/odiso5pmtej8etl/languages.json/file" title="langauges.json"><i class="fa-solid fa-download"></i> langauges.json</a>

<hr>
<h3 id="Embedded-languages"><a href="#Embedded-languages" class="headerlink" title="Embedded languages"></a>Embedded languages</h3><p>Embedded language is to extend the syntax from one to more. That said, you can have CSS <code>&lt;style&gt;</code> and JavaScript <code>&lt;script&gt;</code> or other syntaxes with html language.</p>
<a class="button " href="https://www.mediafire.com/file/eoq1bke9kzz9ja0/html.zip/file" title="html.zip"><i class="fa-solid fa-download"></i> html.zip</a>

<a class="button " href="https://www.mediafire.com/file/uh8qrf3s725w3qn/css.zip/file" title="css.zip"><i class="fa-solid fa-download"></i> css.zip</a>

<a class="button " href="https://www.mediafire.com/file/479fqy5x80yp2jz/javascript.zip/file" title="javascript.zip"><i class="fa-solid fa-download"></i> javascript.zip</a>

<p>To configure an embedded language, you need to do it in <code>languages.json</code>. Here is an example of HTML with CSS and JS embedded syntaxes.</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>Before adding embedded languages <code>source.css</code> and <code>source.js</code>, you need to have these related files.</p>
</div>

<p>Keep in mind to the highlighted sections, <code>embeddedLanguages</code>.</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;languages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;scopeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text.html.basic&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;grammar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/html/syntaxes/html.tmLanguage.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;languageConfiguration&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/html/language-configuration.json&quot;</span><span class="punctuation">,</span></span><br><span class="line marked">      <span class="attr">&quot;embeddedLanguages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line marked">        <span class="attr">&quot;source.css&quot;</span><span class="punctuation">:</span> <span class="string">&quot;css&quot;</span><span class="punctuation">,</span></span><br><span class="line marked">        <span class="attr">&quot;source.js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;javascript&quot;</span></span><br><span class="line marked">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;css&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;scopeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source.css&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;grammar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/css/syntaxes/css.tmLanguage.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;languageConfiguration&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/css/language-configuration.json&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;javascript&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;scopeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;grammar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/javascript/syntaxes/javascript.tmLanguage.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;languageConfiguration&quot;</span><span class="punctuation">:</span> <span class="string">&quot;textmate/javascript/language-configuration.json&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Programs"><a href="#Programs" class="headerlink" title="Programs"></a>Programs</h1><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Before you start, make sure you <strong>have prepared textmate themes and languages files</strong>. You may find them in <a href="https://github.com/eclipse/tm4e" target="_blank">TextMate</a> or from <a class="link" href="https://github.com/Rosemoe/sora-editor/tree/main/app/src/main" target="_blank">the source code of demo application <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
</div>

<hr>
<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><hr>
<h3 id="Load-Default-Themes"><a href="#Load-Default-Themes" class="headerlink" title="Load Default Themes"></a>Load Default Themes</h3><p>Initialize all the themes that you want to be applied later.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	FileProviderRegistry.getInstance().addFileProvider(<span class="keyword">new</span> <span class="title class_">AssetsFileResolver</span>(getAssets()));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// set the themes that you want them to be initialized</span></span><br><span class="line">    String[] themes = &#123;<span class="string">&quot;quietlight&quot;</span>, <span class="string">&quot;darcula&quot;</span>&#125;;</span><br><span class="line">    <span class="type">ThemeRegistry</span> <span class="variable">themeRegistry</span> <span class="operator">=</span> ThemeRegistry.getInstance();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; themes.length;) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> themes[i];</span><br><span class="line">        <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;textmate/&quot;</span> + name + <span class="string">&quot;.json&quot;</span>; <span class="comment">// e.g. it will get &quot;textmate/quietlight.json&quot; file from assets</span></span><br><span class="line">        themeRegistry.loadTheme(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">ThemeModel</span>(</span><br><span class="line">                IThemeSource.fromInputStream(</span><br><span class="line">                    FileProviderRegistry.getInstance().tryGetInputStream(path), path, <span class="literal">null</span></span><br><span class="line">                ), name</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">	e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Load-Default-Languages"><a href="#Load-Default-Languages" class="headerlink" title="Load Default Languages"></a>Load Default Languages</h3><hr>
<h4 id="Using-grammar-base"><a href="#Using-grammar-base" class="headerlink" title="Using grammar base"></a>Using grammar base</h4><p>We will use <code>languages.json</code> config file to load all the languages with their syntaxes and configuration.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">GrammarRegistry.getInstance().loadGrammars(<span class="string">&quot;textmate/languages.json&quot;</span>);</span><br></pre></td></tr></table></figure></div>

<p>There are several propeties of <code>languages.json</code> you need to keep in mind to.</p>
<ul>
<li><code>scopeName</code> - the scope of the language.</li>
</ul>
<p>how to know what is the scope name of the language? You can find it through the language syntax file. For example, you will find the scope name from <code>java.tmLanguage.json</code> file.</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Java&quot;</span><span class="punctuation">,</span></span><br><span class="line marked"><span class="attr">&quot;scopeName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source.java&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;patterns&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><code>grammar</code> - the syntax and grammar of the language.</li>
<li><code>languageConfiguration</code> - the language configuration of the language e.g. auto complete brackets, auto indent etc.</li>
</ul>
<hr>
<h4 id="Using-DSL"><a href="#Using-DSL" class="headerlink" title="Using DSL"></a>Using DSL</h4><p>If you don’t want to load languages from <code>languages.json</code>, you can load them with <strong>DSL (Domain Specific Language)</strong> either. In this case, we load Java language as an example.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">GrammarDefinition</span> <span class="variable">grammarDefinition</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GrammarDefinition</span>() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;java&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getLanguageConfiguration</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;textmate/java/language-configuration.json&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getScopeName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;source.java&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IGrammarSource <span class="title function_">getGrammar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">IGrammarSource</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> String <span class="title function_">getFilePath</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;textmate/java/syntaxes/java.tmLanguage.json&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Reader <span class="title function_">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GrammarRegistry.getInstance().loadGrammar(grammarDefinition);</span><br><span class="line">GrammarRegistry.getInstance().loadLanguageAndLanguageConfiguration(grammarDefinition);</span><br></pre></td></tr></table></figure></div>

<hr>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Yet, I highly recommend you to load langauges with the grammar base <code>languages.json</code> file instead of loading them with DSL, you can have better adjustment.</p>
</div>


<hr>
<h3 id="Ensure-TextMate-Themes"><a href="#Ensure-TextMate-Themes" class="headerlink" title="Ensure TextMate Themes"></a>Ensure TextMate Themes</h3><p>This is for ensuring the colorscheme of <code>CodeEditor</code> being applied is the implementation of TextMate i.e. <code>TextMateColorScheme</code>, rather than the general one from <code>EditorColorScheme</code>.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="type">EditorColorScheme</span> <span class="variable">colorScheme</span> <span class="operator">=</span> editor.getColorScheme();</span><br><span class="line">    <span class="keyword">if</span> (!(colorScheme <span class="keyword">instanceof</span> TextMateColorScheme)) &#123;</span><br><span class="line">        colorScheme = TextMateColorScheme.create(ThemeRegistry.getInstance());</span><br><span class="line">        editor.setColorScheme(colorScheme);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Apply-Themes"><a href="#Apply-Themes" class="headerlink" title="Apply Themes"></a>Apply Themes</h3><p>Here, I will detect light theme and dark theme, the key is to use <code>ThemeRegistry.getInstance().setTheme()</code> to apply themes.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">mode</span> <span class="operator">=</span> getResources().getConfiguration().uiMode &amp; Configuration.UI_MODE_NIGHT_MASK;</span><br><span class="line"><span class="keyword">switch</span> (mode) &#123;</span><br><span class="line">    <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_YES: <span class="comment">// dark mode</span></span><br><span class="line marked">        ThemeRegistry.getInstance().setTheme(<span class="string">&quot;darcula&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_NO: <span class="comment">// light mode</span></span><br><span class="line marked">        ThemeRegistry.getInstance().setTheme(<span class="string">&quot;quietlight&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="Apply-Languages"><a href="#Apply-Languages" class="headerlink" title="Apply Languages"></a>Apply Languages</h3><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">TextMateLanguage language;</span><br><span class="line"><span class="type">Language</span> <span class="variable">editorLanguage</span> <span class="operator">=</span> editor.getEditorLanguage();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (editorLanguage <span class="keyword">instanceof</span> TextMateLanguage) &#123;</span><br><span class="line">	language = (TextMateLanguage) editorLanguage;</span><br><span class="line">    language.updateLanguage(<span class="string">&quot;source.java&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    language = TextMateLanguage.create(<span class="string">&quot;source.java&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">editor.setEditorLanguage(language);</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Other-programs"><a href="#Other-programs" class="headerlink" title="Other programs"></a>Other programs</h2><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Sora editor provides auto completion with TextMate by default,</span></span><br><span class="line"><span class="comment">// if you want to disable the auto completion, add this code.</span></span><br><span class="line">editor.getComponent(EditorAutoCompletion.class).setEnabled(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delete whole empty line is sometimes annoying, you can disable it via this code.</span></span><br><span class="line">editor.getProps().deleteEmptyLineFast = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Full-source-code"><a href="#Full-source-code" class="headerlink" title="Full source code"></a>Full source code</h1><p>Here are the source codes.</p>
<div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Libraries</a></li><li class="tab"><a class="#source_code-2">Packages</a></li><li class="tab"><a class="#source_code-3">Layout</a></li><li class="tab"><a class="#source_code-4">Activity</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation(platform(<span class="string">&quot;io.github.Rosemoe.sora-editor:bom:0.18.1&quot;</span>))</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:editor&quot;</span>)</span><br><span class="line">implementation(<span class="string">&quot;io.github.Rosemoe.sora-editor:language-textmate&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>Or, if you IDE doesn’t support <code>bom</code> importing.</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&quot;io.github.Rosemoe.sora-editor:editor:0.18.1&quot;</span></span><br><span class="line">implementation <span class="string">&quot;io.github.Rosemoe.sora-editor:language-textmate:0.18.1&quot;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><p>If there’s no quick fix of packages importing on your IDE, here are the packages that you might need.</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.eclipse.tm4e.core.registry.IThemeSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.widget.CodeEditor;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.TextMateColorScheme;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.TextMateLanguage;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.registry.FileProviderRegistry;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.registry.GrammarRegistry;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.registry.ThemeRegistry;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.registry.model.ThemeModel;</span><br><span class="line"><span class="keyword">import</span> io.github.rosemoe.sora.langs.textmate.registry.provider.AssetsFileResolver;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><strong>You’re not required to import kind of <code>org.eclipse.tm4e.core</code> dependencies on your own</strong>, Sora Editor includes them by default.</p>
</blockquote></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">io.github.rosemoe.sora.widget.CodeEditor</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SYNTAX_LANG</span> <span class="operator">=</span> <span class="string">&quot;source.java&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">THEME_DIR</span> <span class="operator">=</span> <span class="string">&quot;textmate/themes/&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LANGUAGE_DIR</span> <span class="operator">=</span> <span class="string">&quot;textmate/langauges/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] themes = &#123;<span class="string">&quot;quietlight.json&quot;</span>, <span class="string">&quot;darcula.json&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        loadDefaultThemes();</span><br><span class="line">        loadDefaultLanguages();</span><br><span class="line"></span><br><span class="line">        ensureTextmateTheme();</span><br><span class="line"></span><br><span class="line">        applyThemes(); <span class="comment">// you can disable this method if you just need a single theme without dynamic day/night themes</span></span><br><span class="line">        applyLanguages();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadDefaultThemes</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileProviderRegistry.getInstance().addFileProvider(<span class="keyword">new</span> <span class="title class_">AssetsFileResolver</span>(getAssets()));</span><br><span class="line"></span><br><span class="line">            <span class="type">ThemeRegistry</span> <span class="variable">themeRegistry</span> <span class="operator">=</span> ThemeRegistry.getInstance();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; themes.length;) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> themes[i];</span><br><span class="line">                <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> THEME_DIR + name;</span><br><span class="line">                themeRegistry.loadTheme(<span class="keyword">new</span> <span class="title class_">ThemeModel</span>(IThemeSource.fromInputStream(FileProviderRegistry.getInstance().tryGetInputStream(path), path, <span class="literal">null</span>), name));</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadDefaultLanguages</span><span class="params">()</span> &#123;</span><br><span class="line">        GrammarRegistry.getInstance().loadGrammars(LANGUAGE_DIR + <span class="string">&quot;languages.json&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">ensureTextmateTheme</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">EditorColorScheme</span> <span class="variable">colorScheme</span> <span class="operator">=</span> editor.getColorScheme();</span><br><span class="line">            <span class="keyword">if</span> (!(colorScheme <span class="keyword">instanceof</span> TextMateColorScheme)) &#123;</span><br><span class="line">                colorScheme = TextMateColorScheme.create(ThemeRegistry.getInstance());</span><br><span class="line">                editor.setColorScheme(colorScheme);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Not really necessary if you just need a single theme without dynamic day/night themes */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyThemes</span><span class="params">()</span> &#123;</span><br><span class="line">        String theme;</span><br><span class="line">        theme = isInNightMode() ? <span class="string">&quot;material_palenight.json&quot;</span> : <span class="string">&quot;material_lighter.json&quot;</span>;</span><br><span class="line"></span><br><span class="line">        ThemeRegistry.getInstance().setTheme(theme);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">applyLanguages</span><span class="params">()</span> &#123;</span><br><span class="line">        ensureTextmateTheme();</span><br><span class="line"></span><br><span class="line">        TextMateLanguage language;</span><br><span class="line">        <span class="type">Language</span> <span class="variable">editorLanguage</span> <span class="operator">=</span> editor.getEditorLanguage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (editorLanguage <span class="keyword">instanceof</span> TextMateLanguage) &#123;</span><br><span class="line">            language = (TextMateLanguage) editorLanguage;</span><br><span class="line">            language.updateLanguage(SYNTAX_LANG);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            language = TextMateLanguage.create(SYNTAX_LANG, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        editor.setEditorLanguage(language);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isInNightMode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mode</span> <span class="operator">=</span> getResources().getConfiguration().uiMode &amp; Configuration.UI_MODE_NIGHT_MASK;</span><br><span class="line">        <span class="keyword">switch</span> (mode) &#123;</span><br><span class="line">            <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_YES:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_NO:</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<p>That’s all. I hope this blog post helps you.</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>實現 VSCode 的 JSON 結構式設定</title>
    <url>//post/android_dev_vscode_settings_system.html</url>
    <content><![CDATA[<h1 id="為應用程式開啟權限"><a href="#為應用程式開啟權限" class="headerlink" title="為應用程式開啟權限"></a>為應用程式開啟權限</h1><p>首先我們會先為應用程式開啟權限，以至可以進行寫入與讀取。</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="預備模板文件"><a href="#預備模板文件" class="headerlink" title="預備模板文件"></a>預備模板文件</h1><p>我們會在 Android Studio 專案新建一個 <code>assets</code> (<code>/app/src/main/assets/</code>) 資料夾，再新建兩個文件： </p>
<ul>
<li><code>settings.json</code>，是用來<strong>存放預設設定的值</strong>。</li>
<li><code>settings_empty.json</code>，是一個<strong>空白結構供用戶把客製化設定寫入</strong>。</li>
</ul>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>settings_empty.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// add any messages you want here to tell users how to customize settings</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><figcaption><span>settings.json</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;editor_fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JetBrainsMono-Medium&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor_textSize&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor_textColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FF0000&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="獲取-assets-內的檔案內容"><a href="#獲取-assets-內的檔案內容" class="headerlink" title="獲取 assets 內的檔案內容"></a>獲取 assets 內的檔案內容</h1><p>我們會用 <code>InputStream</code> 把 <code>assets</code> 的檔案資料寫入至外部存取。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFileContentFromAssets</span><span class="params">(Context ctx, String fileName)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ctx.getAssets().open(fileName);</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> is.available();</span><br><span class="line">        <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[size];</span><br><span class="line">        is.read(buffer);</span><br><span class="line">        is.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(buffer);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="生成預設文件至外部存取空間"><a href="#生成預設文件至外部存取空間" class="headerlink" title="生成預設文件至外部存取空間"></a>生成預設文件至外部存取空間</h1><p>接下來，我們會把 <code>settings.json</code> 和 <code>settings_default.json</code> 寫入至外部存取空間。</p>
<ul>
<li><code>settings.json</code> 是供<strong>用戶進行客製化設定</strong>，所以會使用 <code>settings_empty.json</code> 模板文件；</li>
<li><code>settings_default.json</code> 是<strong>存放預設設定</strong>，會用 <code>settings.json</code> 樣板文件。</li>
</ul>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">generateDefaultFiles</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// generate settings default json file</span></span><br><span class="line">    path = ConfigInitializer.mainLocation;</span><br><span class="line">    file = <span class="string">&quot;settings_default.json&quot;</span>;</span><br><span class="line">    FileUtil.writeFile(path + file, AssetsFileLoader.getFileContent(<span class="built_in">this</span>, <span class="string">&quot;settings.json&quot;</span>));</span><br><span class="line"></span><br><span class="line">    file = <span class="string">&quot;settings.json&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (FileUtil.isExistFile(path + file)) &#123;</span><br><span class="line">        FileUtil.writeFile(path + file, FileUtil.readFile(path + file));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> AssetsFileLoader.getFileContent(<span class="built_in">this</span>, <span class="string">&quot;settings_empty.json&quot;</span>);</span><br><span class="line">        FileUtil.writeFile(path + file, data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="構建設定"><a href="#構建設定" class="headerlink" title="構建設定"></a>構建設定</h1><p>匯入 Android Kotlin 庫，我們會用 Kotlin 語法構建數據類。</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>這個數據類是用於新增可支援設定，例如 <code>editor_textSize</code>、<code>editor_fontFamily</code>、<code>editor_textColor</code> 和 <code>editor_pinchZoom</code>，你可以因應你的需要，新增客製化設定。</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">Config</span> (</span><br><span class="line"></span><br><span class="line">    <span class="comment">// add any available settings you want here</span></span><br><span class="line">    <span class="keyword">val</span> editor_textSize: <span class="built_in">Float</span>,</span><br><span class="line">    <span class="keyword">val</span> editor_fontFamily: String,</span><br><span class="line">    <span class="keyword">val</span> editor_textColor: <span class="built_in">Int</span>,</span><br><span class="line">    <span class="keyword">val</span> editor_pinchZoom: <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="初始化設定"><a href="#初始化設定" class="headerlink" title="初始化設定"></a>初始化設定</h1><p>我們會用 Gson 庫把 <code>settings.json</code> 內的 JSON 轉化為 <code>Config</code> 類別的合適值。</p>
<div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.google.code.gson:gson:2.10.1&#x27;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config <span class="title function_">getConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        Config config;</span><br><span class="line">        <span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line">        <span class="type">String</span> <span class="variable">targetFileContent</span> <span class="operator">=</span> targetFile.exists() ? FileUtil.readFile(targetFile.getPath()) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">return</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(targetFileContent, Config.class);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config <span class="title function_">getDefaultConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        Config config;</span><br><span class="line">        <span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line">        <span class="comment">// this file will keep updating.</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">targetFileContent</span> <span class="operator">=</span> AssetsFileLoader.getFileContent(context, <span class="string">&quot;settings.json&quot;</span>);</span><br><span class="line">        <span class="type">return</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(targetFileContent, Config.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(ActivityMainBinding binding)</span> &#123;</span><br><span class="line"></span><br><span class="line">        config = getConfig();</span><br><span class="line">        defConfig = getDefaultConfig();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">dataText</span> <span class="operator">=</span> FileUtil.readFile(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDataExists</span><span class="params">(String str, String word)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str.contains(<span class="string">&quot;\&quot;&quot;</span> + word + <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="判斷已加入設定"><a href="#判斷已加入設定" class="headerlink" title="判斷已加入設定"></a>判斷已加入設定</h1><p>把設定應用至目標，例如，我要把 <code>editor_textSize</code> 的設定值應用至 <code>EditText</code> 的文本大小。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">floatData = isDataExists(dataText, <span class="string">&quot;editor_textSize&quot;</span>) ? config.getEditor_textSize() : defConfig.getEditor_textSize();</span><br><span class="line">binding.etEditor.setTextSize(floatData);</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="載入-JSON-設定"><a href="#載入-JSON-設定" class="headerlink" title="載入 JSON 設定"></a>載入 JSON 設定</h1><p>在目標活動頁 <code>Activity</code> 中載入 JSON 設定，把所有可支援設定初始化後，應用至相應組件。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadJSONSettings</span><span class="params">()</span> &#123;</span><br><span class="line">    ConfigInitializer.set(binding);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="源始碼"><a href="#源始碼" class="headerlink" title="源始碼"></a>源始碼</h1><div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">Libraries</a></li><li class="tab"><a class="#source_code-2">Manifest</a></li><li class="tab"><a class="#source_code-3">MainActivity.java</a></li><li class="tab"><a class="#source_code-4">ConfigInitializer.java</a></li><li class="tab"><a class="#source_code-5">Config,kt</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4&#x27;</span></span><br><span class="line"></span><br><span class="line">implementation <span class="string">&#x27;com.google.code.gson:gson:2.10.1&#x27;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span> <span class="attr">android:requestLegacyExternalStorage</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isPermissionGranted) &#123;</span><br><span class="line">            generateDefaultFiles();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">generateDefaultFiles</span><span class="params">()</span> &#123;</span><br><span class="line">        path = ConfigInitializer.mainLocation;</span><br><span class="line">        file = <span class="string">&quot;settings_default.json&quot;</span>;</span><br><span class="line">        FileUtil.writeFile(path + file, getFileContentFromAssets(<span class="built_in">this</span>, <span class="string">&quot;settings.json&quot;</span>));</span><br><span class="line"></span><br><span class="line">        file = <span class="string">&quot;settings.json&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (FileUtil.isExistFile(path + file)) &#123;</span><br><span class="line">            FileUtil.writeFile(path + file, FileUtil.readFile(path + file));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">data</span> <span class="operator">=</span> getFileContentFromAssets(<span class="built_in">this</span>, <span class="string">&quot;settings_empty.json&quot;</span>);</span><br><span class="line">            FileUtil.writeFile(path + file, data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">getFileContentFromAssets</span><span class="params">(Context ctx, String fileName)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> ctx.getAssets().open(fileName);</span><br><span class="line">            <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> is.available();</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[size];</span><br><span class="line">            is.read(buffer);</span><br><span class="line">            is.close();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(buffer);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-4"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Context context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config config; <span class="comment">// users set manually</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config defConfig; <span class="comment">// if setting hasnt been set by users, then set default config.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">APP_ROOT_FILE_LOCATION</span> <span class="operator">=</span> <span class="string">&quot;dynamicsettings&quot;</span>; <span class="comment">// your project / app name</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// storage/emulated/0/dynamicsettings/settings.json</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">APP_SETTINGS_JSON_FILE_PATH</span> <span class="operator">=</span> FileUtil.getExternalStorageDir() + <span class="string">&quot;/&quot;</span> + APP_ROOT_FILE_LOCATION + <span class="string">&quot;/settings.json&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">mainLocation</span> <span class="operator">=</span> FileUtil.getExternalStorageDir() + <span class="string">&quot;/&quot;</span> + App.APP_ROOT_FILE_LOCATION + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">assetsLocation</span> <span class="operator">=</span> mainLocation + <span class="string">&quot;assets/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// temp variables</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String strData;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> intData;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">float</span> floatData;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> boolData;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config <span class="title function_">getConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        Config config;</span><br><span class="line">        <span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line">        <span class="type">String</span> <span class="variable">targetFileContent</span> <span class="operator">=</span> targetFile.exists() ? FileUtil.readFile(targetFile.getPath()) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">return</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(targetFileContent, Config.class);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Config <span class="title function_">getDefaultConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        Config config;</span><br><span class="line">        <span class="type">File</span> <span class="variable">targetFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line">        <span class="comment">// this file will keep updating.</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">targetFileContent</span> <span class="operator">=</span> AssetsFileLoader.getFileContent(context, <span class="string">&quot;settings.json&quot;</span>);</span><br><span class="line">        <span class="type">return</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(targetFileContent, Config.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(ActivityMainBinding binding)</span> &#123;</span><br><span class="line"></span><br><span class="line">        config = getConfig();</span><br><span class="line">        defConfig = getDefaultConfig();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">dataText</span> <span class="operator">=</span> FileUtil.readFile(APP_SETTINGS_JSON_FILE_PATH);</span><br><span class="line"></span><br><span class="line">        floatData = isDataExists(dataText, <span class="string">&quot;editor_textSize&quot;</span>) ? config.getEditor_textSize() : defConfig.getEditor_textSize();</span><br><span class="line">        binding.etEditor.setTextSize(floatData);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isDataExists</span><span class="params">(String str, String word)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> str.contains(<span class="string">&quot;\&quot;&quot;</span> + word + <span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-5"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">Config</span> (</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> editor_fontFamily: String,</span><br><span class="line">    <span class="keyword">val</span> editor_textSize: <span class="built_in">Float</span>,</span><br><span class="line">    <span class="keyword">val</span> editor_textColor: <span class="built_in">Int</span>,</span><br><span class="line">    <span class="keyword">val</span> editor_pinchZoom: <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div></div></div></div>

<p>教學到這裏了，源始碼是不完整的，你需要自行補上缺陷，下篇文章見。</p>
]]></content>
      <categories>
        <category>Android 開發</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Json</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 Hexo 建立 GitHub 寄存網誌</title>
    <url>//post/dev_hexo_blog_tutorial.html</url>
    <content><![CDATA[<p>大家好，歡迎來到我的網誌。欸。。？這裏為什麼好像。。整個樣子都不一樣啊。。</p>
<p>對啦，因為我「搬家」了。</p>
<hr>
<h1 id="棄暗投明轉用-Hexo"><a href="#棄暗投明轉用-Hexo" class="headerlink" title="棄暗投明轉用 Hexo"></a>棄暗投明轉用 Hexo</h1><p>為什麼我要由 Google Blogspot 轉用 Hexo？因為 Blogspot 在加載網誌實在太慢了！！！！有時還要跑不起來。。。於是就改用 Hexo 建立網誌了，安裝方法不複雜，現在開始。</p>
<hr>
<h1 id="版本與系統環境"><a href="#版本與系統環境" class="headerlink" title="版本與系統環境"></a>版本與系統環境</h1><p>本文章將會根據以下規格建立 Hexo 網誌。</p>
<table>
<thead>
<tr>
<th align="center">軟體&#x2F;作業系統</th>
<th align="center">版本號碼</th>
</tr>
</thead>
<tbody><tr>
<td align="center">作業系統</td>
<td align="center">macOS Ventura 13</td>
</tr>
<tr>
<td align="center"><a class="link" href="https://git-scm.com/">Git <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td align="center">v2.39.0</td>
</tr>
<tr>
<td align="center"><a class="link" href="https://nodejs.org/en">Nodejs <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
<td align="center">v18.12.1</td>
</tr>
<tr>
<td align="center">hexo</td>
<td align="center">v6.3.0</td>
</tr>
<tr>
<td align="center">hexo-cli</td>
<td align="center">v4.3.0</td>
</tr>
<tr>
<td align="center">文本編輯軟件</td>
<td align="center"><a class="link" href="https://code.visualstudio.com/">Visual Studio Code <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></td>
</tr>
</tbody></table>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>Git 和 Nodejs 和 Hexo 會稍後教大家安裝。</p>
</div>

<hr>
<h1 id="什麼是-Hexo？"><a href="#什麼是-Hexo？" class="headerlink" title="什麼是 Hexo？"></a>什麼是 Hexo？</h1><p>Hexo 是一個快速、簡單且強大的網誌框架。Hexo 使用 Markdown（或其他標記語言）解析您的文章，並在幾秒鐘內，透過漂亮的主題產生靜態檔案。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>我用的是 macOS，Windows 用戶可參考 <a href="https://hexo.io/zh-tw/docs/" target="_blank">官方文案</a>（但其實與 macOS 的差不多，可作以下內容參考）。</p>
<br>

<p>以下我的安裝教學是使用 Homebrew，請預必先安裝 Homebrew 以繼續接下來的教學，請到 <a href="https://brew.sh/" target="_blank">官方網站</a> 瞭解安裝 Homebrew。</p>
</div>

<hr>
<h1 id="安裝-Git"><a href="#安裝-Git" class="headerlink" title="安裝 Git"></a>安裝 Git</h1><p>在終端機輸入：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew install git</span><br><span class="line">brew install git-gui</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="安裝-Nodejs"><a href="#安裝-Nodejs" class="headerlink" title="安裝 Nodejs"></a>安裝 Nodejs</h1><p>可到官方下載 Nodejs 軟件包，<a class="link" href="http://nodejs.org/" target="_blank">按此下載 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<hr>
<h1 id="安裝-Hexo"><a href="#安裝-Hexo" class="headerlink" title="安裝 Hexo"></a>安裝 Hexo</h1><p>如果以上的都安裝好了，便可以在終端機執行：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="解決-EACCES-權限問題"><a href="#解決-EACCES-權限問題" class="headerlink" title="解決 EACCES 權限問題"></a>解決 EACCES 權限問題</h2><p>不過，如果在嘗試安裝 Hexo 的過程中出現 EACCES 權限錯誤，請遵循由 npmjs 發布的指導修復該問題。官方強烈建議不要使用 <code>root</code>、<code>sudo</code> 等方法覆蓋權限。</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>通常 macOS 都會出現 EACCES 權限錯誤，你可以在執行解決方法前先備份電腦，以免不慎出錯。<br>就算你真的想逆官方的意願，都有機會是使用 <code>sudo</code> 方法都不可行。</p>
</div>

<p>在執行 <code>npx install -g hexo-cli</code> 時會報錯：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Error: EACCES: permission denied, access <span class="string">&#x27;/usr/local/lib/node_modules&#x27;</span></span><br><span class="line">npm ERR!  &#123; Error: EACCES: permission denied, access <span class="string">&#x27;/usr/local/lib/node_modules&#x27;</span></span><br><span class="line">npm ERR!   stack: <span class="string">&#x27;Error: EACCES: permission denied, access \&#x27;</span>/usr/local/lib/node_modules\<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">npm ERR!   errno: -13,</span><br><span class="line">npm ERR!   code: <span class="string">&#x27;EACCES&#x27;</span>,</span><br><span class="line">npm ERR!   syscall: <span class="string">&#x27;access&#x27;</span>,</span><br><span class="line">npm ERR!   path: <span class="string">&#x27;/usr/local/lib/node_modules&#x27;</span> &#125;</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Please try running this <span class="built_in">command</span> again as root/Administrator.</span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /Users/nieyuling/.npm/_logs/2019-02-14T07_10_39_923Z-debug.log</span><br></pre></td></tr></table></figure></div>

<p>簡而言之，因為沒有權限，這裏有簡單的解決方法：在終端機輸入。</p>
<p>首先，先在根目錄裏建立新資料夾 <code>npm-global</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.npm-global</span><br></pre></td></tr></table></figure></div>

<p>然後把新資料夾 <code>npm-global</code> 設定為 <code>npm</code> 預設路徑。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">NPM_CONFIG_PREFIX=~/.npm-global</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>詳情可見 <a class="link" href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank">npmjs 指導 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 。</p>
</div>

<hr>
<h1 id="安裝-VSCode-擴充套件"><a href="#安裝-VSCode-擴充套件" class="headerlink" title="安裝 VSCode 擴充套件"></a>安裝 VSCode 擴充套件</h1><p>雖然官方比較建議 macOS 用戶使用 XCode，但我堅決不把它下載下來，因為。。它有 7.8GB 之多啊。。。<del>（其實我下載過，不過後來把它刪除了哈哈）</del>。</p>
<p>而我是較常用 VSCode 的，所以就推薦大家用 VSCode，何況 VSCode 有 Hexo 擴充套件，何樂而不為呢？</p>
<p>到 VSCode 擴充套件庫下載 <code>vscode-hexo</code>，或 <a class="link" href="vscode:extension/codeyu.vscode-hexo">按此下載 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<hr>
<h1 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h1><p>對於 macOS 用戶，進行使用 <code>hexo</code> 指令前，需要輸入 <code>npx</code>。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>參考資料：<a href="https://medium.com/itsems-frontend/whats-npx-e83400efe7f8" target="_blank">Medium</a></p>
<p>Npm (node package manger) 是套件管理工具，讓你在開發過程中，可以把想要的 <code>node</code> 套件，透過 <code>npm</code> 安裝在 <code>local</code> 專案位置或是 <code>global</code> 全局性整台電腦的環境下面。</p>
<p>我只是想要測試一下這個套件是不是我要的，可是我一定要把他安裝下來<br>這就是 <code>npx</code> 用處所在了。</p>
<p><code>npx</code> 是在 <code>npm</code> v5.2.0 之後內建的指令，也是一種 CLI 工具，讓我們可以更方便的安裝或是管理依賴 (dependencies)。</p>
</div>

<hr>
<h2 id="進入-Hexo-目錄"><a href="#進入-Hexo-目錄" class="headerlink" title="進入 Hexo 目錄"></a>進入 Hexo 目錄</h2><p>如果你建立的 Hexo 資料夾名為 <code>hexo</code>，那就輸入這個指令。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="進入-npx-界面"><a href="#進入-npx-界面" class="headerlink" title="進入 npx 界面"></a>進入 npx 界面</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npx</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="初始化網誌"><a href="#初始化網誌" class="headerlink" title="初始化網誌"></a>初始化網誌</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init [資料夾名稱]</span><br></pre></td></tr></table></figure></div>
<p>例如：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="新增文章"><a href="#新增文章" class="headerlink" title="新增文章"></a>新增文章</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [文章名稱]</span><br></pre></td></tr></table></figure></div>

<p>例如：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;HelloWorld&quot;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>文章名稱是將會應用並命名到檔案名稱，所以請以<strong>英文為主</strong>，慎防和遲免程式因亂碼出錯，還有<strong>不需要加上副檔名</strong>，因為會自動以 <code>.md</code> 格式生成，例如 <code>HelloWorld.md</code>。</p>
</div>

<hr>
<h4 id="文章的-Front-matter"><a href="#文章的-Front-matter" class="headerlink" title="文章的 Front-matter"></a>文章的 Front-matter</h4><p><a target="_blank" href="https://hexo.io/zh-tw/docs/front-matter.html">Front-matter</a> 是檔案最上方以 <code>---</code> 分隔的區域，用於<strong>指定個別檔案的變數</strong>，簡而言之，就是為文章進行配置上的設定。舉例來說：</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章標題</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-12-24 00:13:26</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">文章內容由此處開始</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>title</code>：文章的標題<br><code>date</code>：文章的建立日期，如果你是透過使用 <code>hexo new</code> 指令新增文章的話，<strong>建立日期是自動生成</strong>的。<br><code>updated</code>：文章的修改 &#x2F; 更新日期<br><code>id</code>：文章的特別編號<br><code>comment</code>：為文章啟用留言區 - <code>on</code> 為啟用；<code>off</code> 為關閉。<br><code>tags</code>：文章的標籤（每篇文章可設定多個標籤）<br><code>categories</code>：文章的類別 <strong>(每篇文章只可以設定一個類別)</strong> ，但隨着 Hexo 的更新，現在可以多種類別（但我不會用，會盡量多用標籤。）</p>
<p>做法如下：</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> [<span class="string">&quot;category1&quot;</span>, <span class="string">&quot;category2&quot;</span>]</span><br></pre></td></tr></table></figure></div>

<p><strong>我會怎樣運用它們？</strong></p>
<p>我會把<strong>類別當作範疇</strong>，例如 Android 開發、網頁開發，這些都是獨立的範疇；而我會用程式語言來作標籤，因為程式語言與這些範疇是環環相扣的。</p>
<p>或許你不是像我一樣撰寫編程類型的網誌文章，但希望你可以參考一下。</p>
</div>

<p>例如：</p>
<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">id:</span> <span class="number">123</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2022-12-24 00:13:26</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Red</span> <span class="string">Fruits</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Apple</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Strawberry</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Red</span> <span class="string">berry</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">文章內容由此處開始</span></span><br></pre></td></tr></table></figure></div>

<p>這裏有一個應用例子：取自 <a class="link" href="http://disq.us/p/1u9nad0" target="_blank">這個評論 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>並列分類：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> [<span class="string">Linux</span>]</span><br><span class="line">    <span class="bullet">-</span> [<span class="string">Tools</span>]</span><br></pre></td></tr></table></figure></div>

<p>並列 + 子分類：</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> [<span class="string">Linux</span>, <span class="string">Hexo</span>]</span><br><span class="line">    <span class="bullet">-</span> [<span class="string">Tools</span>, <span class="string">PHP</span>]</span><br></pre></td></tr></table></figure></div></div>

<hr>
<h3 id="發佈文章"><a href="#發佈文章" class="headerlink" title="發佈文章"></a>發佈文章</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>deploy</code> 是部署。</p>
</div>

<hr>
<h3 id="本機預覽"><a href="#本機預覽" class="headerlink" title="本機預覽"></a>本機預覽</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></div>

<p>這樣你便可以經 <code>localhost:4000</code> 本機伺服器看看預覽結果。</p>
<hr>
<h1 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h1><hr>
<h2 id="建立-Repository"><a href="#建立-Repository" class="headerlink" title="建立 Repository"></a>建立 Repository</h2><p>進入 <a class="link" href="https://github.com" target="_blank">GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 網頁，點擊 <code>New</code> 按鈕新建專案，把 <code>Repository name</code> 命名為 <code>username.github.io</code>。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>username</code> 是你的用戶名稱。</p>
</div>

<p>然後按 <code>Create repository</code>。那就成功建立網域 <code>username.github.io</code>。</p>
<hr>
<h2 id="把檔案推送到-GitHub"><a href="#把檔案推送到-GitHub" class="headerlink" title="把檔案推送到 GitHub"></a>把檔案推送到 GitHub</h2><hr>
<h3 id="安裝-Git-相關套件"><a href="#安裝-Git-相關套件" class="headerlink" title="安裝 Git 相關套件"></a>安裝 Git 相關套件</h3><p>回到 <code>hexo</code> 資料夾，在終端機輸入：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div>

<h3 id="修改-config-yml-檔案的-deploy-設定"><a href="#修改-config-yml-檔案的-deploy-設定" class="headerlink" title="修改 _config.yml 檔案的 deploy 設定"></a>修改 _config.yml 檔案的 deploy 設定</h3><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>這個 <code>_config.yml</code> 是 <code>hexo</code> 根目錄內，並非 <code>hexo/themes/</code> 內那個。</p>
</div>

<div class="highlight-container" data-rel="Yml"><figure class="iseeu highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">https://github.com/username/username.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>type</code>：選擇部屬模式，這裡填 <code>git</code><br><code>repo</code>：GitHub repository 的連結，記得將 <code>username</code> 修改成自己的帳號名稱<br><code>branch</code>：選擇分支，預設為 <code>master</code></p>
</div>

<hr>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="預覽-或-部署三部曲"><a href="#預覽-或-部署三部曲" class="headerlink" title="預覽 或 部署三部曲"></a>預覽 或 部署三部曲</h1><p>在每次進行修改後，通常都會做以下三部曲，避免更新不完全。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></div>

<p>如果你是要在本機伺服器預覽：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>cl</code> 是 <code>clean</code>，清除快取檔案 <code>db.json</code> 和 <code>public</code> 已產生靜態檔案。<br><code>g</code> 是 <code>generate</code>，產生靜態檔案。<br><code>d</code> 是 <code>deploy</code>，部署網站。<br><code>s</code> 是 <code>server</code>，以本機伺服器 <code>localhost:4000</code> 預覽網站。</p>
</div>

<p>那就可以到 <code>https://username.github.io</code> 造訪網誌了。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>你一旦更新網誌內容後，你需要稍等片刻，因為 Github <strong>需要至少 10 分鐘的時間才能夠成功部署</strong>。</p>
</div>

<hr>
<h1 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h1><p>用了 Hexo 後，發現它真的不錯用，沒有後悔推薦你們使用。</p>
<hr>
<h2 id="加載速度快"><a href="#加載速度快" class="headerlink" title="加載速度快"></a>加載速度快</h2><p>這個我是精神為之一振的關鍵，皆因我都深陷了在 Blogspot 的緩慢維度一陣子了，對它尤其難受，<strong>有時想回味一下自己寫的文章內容，卻遲遲都不給我加載出來，那刻的雅興即時消逝，甚至會令到我漸漸不想再寫文章了</strong>。有了 Hexo，現在我可以「為所欲為」了，大肆寫文不是夢！</p>
<p>加載速度快不僅只是有利於我自己，更會有利於看文章的各位，文章加載的快能夠提升讀者的生活質素，而且都不會因為加載時間慢而不再在這個網誌發掘內容。就我而言，如果一些網站加載慢，不僅會讓我浮躁，而且令我有按「上一頁」的衝動，如此看來，如果你的網站加載時間慢，是絕對會令讀者數量流失，<strong>即使你寫的內容多麽的精細，都不會有人欣賞和明白你的心思。</strong></p>
<hr>
<h2 id="支援-Markdown-標示語言"><a href="#支援-Markdown-標示語言" class="headerlink" title="支援 Markdown 標示語言"></a>支援 Markdown 標示語言</h2><p>對我來說簡直就是一個字，棒！因為 Markdown 的方便程度是遠高於 HTML 的，在我用 Blogspot 的時候，是用 HTML 撰文的，當我要插入程式碼塊，就要用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code>，那大家知道了，<code>&lt;pre&gt;</code> 是<strong>不會編製為跳脫字元</strong>的，例如要在程式碼塊加入 HTML 碼，它會以 HTML 顯示了出來，但其實我想展示 HTML 碼給讀者，那這樣就要另外解析，雖然網上都有一鍵解析的工具，但是都是很不方便。</p>
<p>不說插入程式碼，其實要定義一般標示都是不方便的，因為<strong>大部分的標示都是開閉式</strong>的，所以在我寫文的時候，常精都要注意 HTML 的語法，整體感覺不良好。相較之下 Markdown 就方便多了，尤其是我要編製程式碼塊，用 <code>```</code> 語法就可以把<strong>一整段程式碼展示出來，不需要理會跳脫字元的問題</strong>。另外，因為 Hexo 是終端架設工具，所以檔案是在自己電腦裏，就可以用 VSCode 打開並<strong>修改 Markdown 語法的文章，配合快捷鍵的運用，更是事半功倍</strong>。</p>
<hr>
<h2 id="支援內建外掛"><a href="#支援內建外掛" class="headerlink" title="支援內建外掛"></a>支援內建外掛</h2><p>網誌的文章是你隨心而寫的，因此你寫的內容可能很寛廣的，涉及的東西很多元化，有時可能都要借助一些插件來完成，Hexo 是支援外建外掛的，那可以令到你的網誌不但多元性，而且增加趣味性，例如可以額外擴增日曆、提示塊等。</p>
<hr>
<h2 id="支援內建主題"><a href="#支援內建主題" class="headerlink" title="支援內建主題"></a>支援內建主題</h2><p>文章的內容是最重要，而網誌的主題是次要，雖然是次要，但主題能吸引讀者的眼球，主題並不只是說你的網誌主題樣式，還會說排版，有一個好看的版面，就不會令讀者迷失。另外，主題都能反映你的個人風格，當你選擇了一個適合你的主題，便會深深「入坑」。</p>
<p>Hexo 提供了許多主題樣式，有復古的，現代的等等不同風格的主題，重點是，<strong>都是免費的</strong>！</p>
<hr>
<p>好了教學到這了，希望大家學會用 Hexo 建立網誌，有問題歡迎在下面留言，下篇文章再見。</p>
]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>終端機指令</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 與 Kotlin 語言對照筆記</title>
    <url>//post/dev_java_kotlin_comparison_notes.html</url>
    <content><![CDATA[<div class="note note-primary icon-padding"><i class="note-icon fa-solid fa-circle-arrow-right"></i><p>這篇筆記會持續更新。</p>
<br>

<p>筆記主要撰寫 Java 程式碼和 Kotlin 程式碼對照及轉換，事先聲明，可能會涉及 Kotlin 語法的資訊，而且我對 Kotlin 編程知識很淺薄，因此就寫這個筆記，要用就隨時看。</p>
</div>

<h1 id="基本概要"><a href="#基本概要" class="headerlink" title="基本概要"></a>基本概要</h1><h2 id="整體差異"><a href="#整體差異" class="headerlink" title="整體差異"></a>整體差異</h2><table width="100%" align="center">
    <thead>
        <tr>
            <th>差異項目</th>
            <th>Java</th>
            <th>Kotlin</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td align="center">語法</td>
            <td align="center">有冗長的語法和大量的分號，需要額外的代碼來處理 <code>null</code> 值</td>
            <td align="center">傾向於簡潔的語法和函數式編程風格，提供了更好的 <code>null</code> 安全支持</td>
        </tr>
        <tr>
            <td align="center">特性</td>
            <td align="center">是一種面向對象的語言，支持多繼承和接口</td>
            <td align="center">支持面向對象和函數式編程，提供了許多有用的特性，例如擴展函數、屬性、類型推斷和協程</td>
        </tr>
        <tr>
            <td align="center">互操作性</td>
            <td align="center">能夠輕鬆與其他 Java 代碼集成，但與 Kotlin 代碼集成時需要一些額外的設置</td>
            <td align="center">能夠輕鬆與 Java 代碼集成，但需要注意一些 Java 語法和庫不支持 Kotlin 的特定特性</td>
        </tr>
        <tr>
            <td align="center">工具和生態系統</td>
            <td align="center">擁有龐大的工具和生態系統，例如 Maven 和 Gradle</td>
            <td align="center">在 Android 平台上有前所未有的成功，並擁有許多優秀的庫和框架，例如 Ktor 和 Anko</td>
        </tr>
    </tbody>
</table>

<hr>
<h2 id="存取修飾子"><a href="#存取修飾子" class="headerlink" title="存取修飾子"></a>存取修飾子</h2><table width="100%" align="center">
    <thead>
        <tr>
            <th>修飾子</th>
            <th>Java</th>
            <th>Kotlin</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td align="center"><code>public</code></td>
            <td align="center">所有類可存取</td>
            <td align="center">所有類可存取（預設）</td>
        </tr>
        <tr>
            <td align="center"><code>private</code></td>
            <td align="center">當前類可存取</td>
            <td align="center">無</td>
        </tr>
        <tr>
            <td align="center"><code>protected</code></td>
            <td align="center">當前類、子類、同一套件路徑下的類可存取</td>
            <td align="center">當前類、子類可存取</td>
        </tr>
        <tr>
            <td align="center"><code>default</code></td>
            <td align="center">同一套件路徑下的類可存取（預設）</td>
            <td align="center">無</td>
        </tr>
        <tr>
            <td align="center"><code>internal</code></td>
            <td align="center">無</td>
            <td align="center">同一模組中的類可存取</td>
        </tr>
    </tbody>
</table>

<hr>
<h1 id="入口點"><a href="#入口點" class="headerlink" title="入口點"></a>入口點</h1><div class="tabs" id="tab-code_entry_point"><ul class="nav-tabs"><li class="tab active"><a class="#code_entry_point-1">Kotlin</a></li><li class="tab"><a class="#code_entry_point-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_entry_point-1"><p>在 Kotlin 中，你可以直接定義一個頂級函數並將其作為程式的入口點。</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 程式將由此處開始執行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>更多資訊 </summary>
              <div class="content">
              <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>在 Kotlin 1.3 版本前，<code>main()</code> 方法需要跟 Java 一樣要定義參數。</p><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 程式將由此處開始執行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>但是，如果你想在一個類中定義入口點函數，你可以這樣寫：</p><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="meta">@JvmStatic</span></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">            <span class="comment">// 在這裡編寫程式邏輯</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在這種情況下，你需要將 <code>main()</code> 函數聲明為一個類的伴生對象的一部分，並使用 <code>@JvmStatic</code> 註解將其標記為 Java 靜態方法。這樣做是為了兼容 Java 的語法，讓 Kotlin 代碼可以像 Java 一樣被編譯和調用。</p>
              </div>
            </details></div><div class="tab-pane" id="code_entry_point-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 程式將由此處開始執行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<h1 id="程式結構"><a href="#程式結構" class="headerlink" title="程式結構"></a>程式結構</h1><h2 id="選擇"><a href="#選擇" class="headerlink" title="選擇"></a>選擇</h2><h3 id="決策邏輯-if-else"><a href="#決策邏輯-if-else" class="headerlink" title="決策邏輯 if else"></a>決策邏輯 <code>if</code> <code>else</code></h3><div class="tabs" id="tab-code_logic_if"><ul class="nav-tabs"><li class="tab active"><a class="#code_logic_if-1">Kotlin</a></li><li class="tab"><a class="#code_logic_if-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_logic_if-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line">z = <span class="keyword">if</span> (x &gt; y) x <span class="keyword">else</span> y</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_logic_if-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (x &gt; y) z = x;</span><br><span class="line"><span class="keyword">else</span> z = y;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h3 id="情況邏輯-switch-case"><a href="#情況邏輯-switch-case" class="headerlink" title="情況邏輯 switch case"></a>情況邏輯 <code>switch</code> <code>case</code></h3><div class="tabs" id="tab-code_logic_case"><ul class="nav-tabs"><li class="tab active"><a class="#code_logic_case-1">Kotlin</a></li><li class="tab"><a class="#code_logic_case-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_logic_case-1"><p>在 Kotlin，<code>when</code> 是用來進行判斷個別情況，就與 <code>switch</code> 相似。</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> grade = <span class="keyword">when</span> (score) &#123;</span><br><span class="line">    <span class="number">9</span>, <span class="number">10</span> -&gt; <span class="string">&quot;Excellent&quot;</span></span><br><span class="line">    <span class="keyword">in</span> <span class="number">6.</span><span class="number">.8</span> -&gt; <span class="string">&quot;Good&quot;</span></span><br><span class="line">    <span class="number">4</span>, <span class="number">5</span> -&gt; <span class="string">&quot;OK&quot;</span></span><br><span class="line">    <span class="keyword">else</span> -&gt; <span class="string">&quot;Fail&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_logic_case-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (score) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">        grade = <span class="string">&quot;Excellent&quot;</span>;</span><br><span class="line">	    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        grade = <span class="string">&quot;Good&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        grade = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        grade = <span class="string">&quot;Fail&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><h3 id="for-循環"><a href="#for-循環" class="headerlink" title="for 循環"></a><code>for</code> 循環</h3><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>Java 中的 <code>for</code> 循環使用分號 <code>;</code> 分隔三個部分：初始值、條件和遞增值。；而 Kotlin 則使用 range 或集合來定義迭代範圍。</p>
</div>

<div class="tabs" id="tab-code_iteration_for_loop"><ul class="nav-tabs"><li class="tab active"><a class="#code_iteration_for_loop-1">Kotlin</a></li><li class="tab"><a class="#code_iteration_for_loop-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_iteration_for_loop-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.10</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span> until <span class="number">10</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">10</span> downTo <span class="number">0</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.10</span> step <span class="number">2</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">10</span> downTo <span class="number">0</span> step <span class="number">2</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (item <span class="keyword">in</span> collection) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((key, value) <span class="keyword">in</span> map) &#123;&#125;</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>更多資訊 </summary>
              <div class="content">
              <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>在 Kotlin 中，可以使用解構聲明（Destructuring Declarations）來將 <code>Map</code> 中的鍵值對分別賦值給已定義的變量。因此，</p><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((key, value) <span class="keyword">in</span> map)</span><br></pre></td></tr></table></figure></div><p>中的 <code>key</code> 和 <code>value</code> 可以被視為已經定義好的變量。</p><p>這種語法簡化了對 <code>Map</code> 中鍵值對的訪問和操作。同時，Kotlin 還支持解構聲明用於其他數據類型，例如 <code>Pair</code>、<code>Triple</code> 等等。</p></div>
              </div>
            </details></div><div class="tab-pane" id="code_iteration_for_loop-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span> ; i++) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; <span class="number">10</span> ; i++) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>; i &gt;= <span class="number">0</span> ; i--) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">10</span> ; i+=<span class="number">2</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>; i &gt;= <span class="number">0</span> ; i-=<span class="number">2</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (String item : collection) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry: map.entrySet()) &#123;&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<h1 id="Kotlin-語法"><a href="#Kotlin-語法" class="headerlink" title="Kotlin 語法"></a>Kotlin 語法</h1><p>Kotlin 才有的語法，但 Java 可以透過其他編程方式把其實現。</p>
<h2 id="關鍵字"><a href="#關鍵字" class="headerlink" title="關鍵字"></a>關鍵字</h2><h3 id="companion"><a href="#companion" class="headerlink" title="companion"></a><code>companion</code></h3><p>使用 <code>companion object</code> 關鍵字定義一個單例對象，該對象的屬性和方法可以直接使用類名訪問，就像 Java 中的靜態方法和屬性一樣。</p>
<div class="tabs" id="tab-code_keyword_companion"><ul class="nav-tabs"><li class="tab active"><a class="#code_keyword_companion-1">Kotlin</a></li><li class="tab"><a class="#code_keyword_companion-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_keyword_companion-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">staticMethod</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="comment">// 靜態方法內容</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_keyword_companion-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">staticMethod</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 靜態方法內容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h3 id="data"><a href="#data" class="headerlink" title="data"></a><code>data</code></h3><p>要是實現<strong>冗長的數據類</strong>的話，我高度建議使用 Kotlin 語法的數據類結構 <code>data class</code> ，因為它<strong>簡化並內置了</strong> Java 變異子與存取子方法： </p>
<p><code>getXXX()</code>, <code>setXXX()</code>, <code>toString()</code>, <code>hashCode()</code> 及 <code>equals()</code></p>
<div class="tabs" id="tab-code_keyword_data"><ul class="nav-tabs"><li class="tab active"><a class="#code_keyword_data-1">數據類 (Kotlin)</a></li><li class="tab"><a class="#code_keyword_data-2">變異子與存取子 (Java)</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_keyword_data-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">Person</span> (</span><br><span class="line">    <span class="keyword">var</span> name: String, </span><br><span class="line">    <span class="keyword">var</span> age: <span class="built_in">Int</span>, </span><br><span class="line">    <span class="keyword">var</span> isMarried: <span class="built_in">Boolean</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>使用示例 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> person = Person(<span class="string">&quot;Steve&quot;</span>)</span><br><span class="line">println(person.name)</span><br></pre></td></tr></table></figure></div>
              </div>
            </details></div><div class="tab-pane" id="code_keyword_data-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isMarried;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存取子 (Getter)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123; <span class="keyword">return</span> age; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isMarried</span><span class="params">()</span> &#123; <span class="keyword">return</span> isMarried; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 變異子 (Setter)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123; <span class="built_in">this</span>.name = name; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123; <span class="built_in">this</span>.age = age; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMarried</span><span class="params">(<span class="type">boolean</span> isMarried)</span> &#123; <span class="built_in">this</span>.isMarried = isMarried; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>使用示例 </summary>
              <div class="content">
              <div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Steve&quot;</span>);</span><br><span class="line">System.out.println(person.getName());</span><br></pre></td></tr></table></figure></div>
              </div>
            </details></div></div></div>

<hr>
<h3 id="lateinit"><a href="#lateinit" class="headerlink" title="lateinit"></a><code>lateinit</code></h3><p><code>lateinit</code> 關鍵字來表示這是一個<strong>延遲初始化</strong>的屬性。這意味著我們可以在後面的代碼中設置這個屬性的值，而不需要在對象創建時立即指定初始值。</p>
<div class="tabs" id="tab-code_keyword_lateinit"><ul class="nav-tabs"><li class="tab active"><a class="#code_keyword_lateinit-1">Kotlin</a></li><li class="tab"><a class="#code_keyword_lateinit-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_keyword_lateinit-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> name: String</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_keyword_lateinit-2"><p>Java 中的 <code>Optional</code> 類來實現延遲初始化，具體來說，你可以將屬性的類型設置為 <code>Optional</code> 類型，然後在需要的時候再進行初始化。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Optional&lt;String&gt; name = Optional.empty();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = Optional.of(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name.orElse(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h2 id="運算符"><a href="#運算符" class="headerlink" title="運算符"></a>運算符</h2><h3 id="安全呼叫運算符"><a href="#安全呼叫運算符" class="headerlink" title="安全呼叫運算符 ?."></a>安全呼叫運算符 <code>?.</code></h3><p>使用 <code>?.</code> 安全呼叫運算子存取可為空值變數的方法或屬性。<code>?.</code> 安全呼叫運算子可讓您安全存取可為空值變數，因為 Kotlin 編譯器會阻止變數成員存取 <code>null</code> 參照，並對存取的成員傳回 <code>null</code>。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>當變數不為空時，我們就可以得到預期的數值；反之，如果是空的時候，不管呼叫什麼，都只會回傳 <code>null</code> 。</p>
</div>

<div class="tabs" id="tab-code_operator_safe_call_operator"><ul class="nav-tabs"><li class="tab active"><a class="#code_operator_safe_call_operator-1">Kotlin</a></li><li class="tab"><a class="#code_operator_safe_call_operator-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_operator_safe_call_operator-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> name: String? = <span class="string">&quot;John&quot;</span></span><br><span class="line"><span class="keyword">val</span> length = name?.length ?: <span class="number">0</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>?</code> 是可為空值類型變量的聲明符，用以聲明該變量的類型為可空值。</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> name: String? = <span class="string">&quot;John&quot;</span></span><br></pre></td></tr></table></figure></div></div></div><div class="tab-pane" id="code_operator_safe_call_operator-2"><p>Java 沒有安全呼叫運算符，但可以用 <code>object != null</code> 來實現類似的情況。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;John&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> name != <span class="literal">null</span> ? name.length() : <span class="number">0</span>;</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h3 id="空合併運算符"><a href="#空合併運算符" class="headerlink" title="空合併運算符 ?:"></a>空合併運算符 <code>?:</code></h3><p>空合併運算符 (Elvis 運算符) <code>?:</code> 作用是在表達式為空 <code>null</code> 時提供一個默認值。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>如果左側 (<code>?</code>) 的值為空，就取右側 (<code>:</code>) 的值。</p>
</div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>空合併運算符只能用於可空型別。</p>
<br>

<p>如果強制將一個非空型別的變量轉換為可空型別，也不能使用空合併運算符。</p>
</div>

<div class="tabs" id="tab-code_operator_null_coalescing_operator"><ul class="nav-tabs"><li class="tab active"><a class="#code_operator_null_coalescing_operator-1">Kotlin</a></li><li class="tab"><a class="#code_operator_null_coalescing_operator-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_operator_null_coalescing_operator-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> nullableString: String? = <span class="literal">null</span></span><br><span class="line"><span class="keyword">val</span> result = nullableString ?: <span class="string">&quot;default value&quot;</span></span><br><span class="line">println(result) <span class="comment">// 輸出 &quot;default value&quot;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_operator_null_coalescing_operator-2"><p>Java 可以使用<strong>三目運算符</strong>來達到相同的效果。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">nullableString</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> nullableString != <span class="literal">null</span> ? nullableString : <span class="string">&quot;default value&quot;</span>;</span><br><span class="line">System.out.println(result); <span class="comment">// 輸出 &quot;default value&quot;</span></span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h3 id="非空斷言運算符"><a href="#非空斷言運算符" class="headerlink" title="非空斷言運算符 !!"></a>非空斷言運算符 <code>!!</code></h3><p>非空斷言 <code>!!</code> 可以用來告訴編譯器一個變數一定不為空，從而允許在該變數為空時抛出異常。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>使用非空斷言時需要非常小心，因為如果該變數實際上是空的，那麼會出現空指針異常（NullPointerException）。因此，建議只在確定該變數不為空時使用非空斷言。</p>
</div>

<div class="tabs" id="tab-code_operator_not_null_assertion_operator"><ul class="nav-tabs"><li class="tab active"><a class="#code_operator_not_null_assertion_operator-1">Kotlin</a></li><li class="tab"><a class="#code_operator_not_null_assertion_operator-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_operator_not_null_assertion_operator-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> nullableString: String? = <span class="string">&quot;Hello&quot;</span></span><br><span class="line"><span class="keyword">val</span> nonNullString: String = nullableString!!</span><br><span class="line">println(nonNullString)</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>更多資訊 </summary>
              <div class="content">
              <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>!!.</code> 是一種組合用法，用於對可空變數進行非空斷言的同時，同時也對該變數進行安全調用運算。<br>具體來說，<code>!!.</code> 的作用是在對一個可空變數進行非空斷言的同時，如果該變數為空，則不會抛出空指針異常，而是直接返回 <code>null</code>。因此，使用 <code>!!.</code> 可以讓程序在遇到空值時不會崩潰，而是能夠繼續執行下去。</p><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> nullableString: String? = <span class="literal">null</span></span><br><span class="line"><span class="keyword">val</span> nonNullString: String = nullableString!!.toUpperCase()</span><br><span class="line">println(nonNullString)</span><br></pre></td></tr></table></figure></div></div>
              </div>
            </details></div><div class="tab-pane" id="code_operator_not_null_assertion_operator-2"><p>Java 可以使用 Java 8 引入的 <code>Optional</code> 類型來達到相似的效果。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">nullableString</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">nonNullString</span> <span class="operator">=</span> Optional.ofNullable(nullableString)</span><br><span class="line">                               .orElseThrow(NoSuchElementException::<span class="keyword">new</span>);</span><br><span class="line">System.out.println(nonNullString);</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h2 id="高階函數-x2F-函數式編程"><a href="#高階函數-x2F-函數式編程" class="headerlink" title="高階函數 &#x2F; 函數式編程"></a>高階函數 &#x2F; 函數式編程</h2><p>高階函數是指接受一個或多個函數作為參數，或者返回一個函數作為結果的函數。</p>
<h3 id="單子-x2F-單表達式函數簡化語法"><a href="#單子-x2F-單表達式函數簡化語法" class="headerlink" title="單子 &#x2F; 單表達式函數簡化語法"></a>單子 &#x2F; 單表達式函數簡化語法</h3><h4 id="情況一：定義函數"><a href="#情況一：定義函數" class="headerlink" title="情況一：定義函數"></a>情況一：定義函數</h4><div class="tabs" id="tab-code_advanced_func_single_expr_cond1"><ul class="nav-tabs"><li class="tab active"><a class="#code_advanced_func_single_expr_cond1-1">Kotlin</a></li><li class="tab"><a class="#code_advanced_func_single_expr_cond1-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_advanced_func_single_expr_cond1-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">isACoolFeature</span><span class="params">()</span></span> = <span class="literal">true</span>;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getNum</span><span class="params">()</span></span> = <span class="number">10</span>;</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>不必使用花括號和 <code>return</code> 關鍵字。</p>
</div></div><div class="tab-pane" id="code_advanced_func_single_expr_cond1-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isACoolFeature</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getNum</span><span class="params">()</span> &#123; <span class="keyword">return</span> <span class="number">10</span>; &#125;</span><br></pre></td></tr></table></figure></div></div></div></div>

<h4 id="情況二：單子混合函數接口"><a href="#情況二：單子混合函數接口" class="headerlink" title="情況二：單子混合函數接口"></a>情況二：單子混合函數接口</h4><div class="tabs" id="tab-code_advanced_func_single_expr_cond2"><ul class="nav-tabs"><li class="tab active"><a class="#code_advanced_func_single_expr_cond2-1">Kotlin</a></li><li class="tab"><a class="#code_advanced_func_single_expr_cond2-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_advanced_func_single_expr_cond2-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">doSomething</span><span class="params">()</span></span> = println(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"></span><br><span class="line">doSomething()</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_advanced_func_single_expr_cond2-2"><p>在 Java 中也可以通過使用<strong>函數接口</strong>（Functional Interface）的 <code>Runnable</code> 來實現。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">(Runnable runnable)</span> &#123;</span><br><span class="line">    runnable.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">doSomething(() -&gt; System.out.println(<span class="string">&quot;Hello World&quot;</span>));</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h3 id="作用域函數"><a href="#作用域函數" class="headerlink" title="作用域函數"></a>作用域函數</h3><p>這些函數都是用於簡化代碼，可以根據具體的使用場景選擇不同的函數。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>作用域函數是語法糖，主要是簡化代碼，不影響程式的整個語法。</p>
</div>

<table>
<thead>
<tr>
<th align="center">函數</th>
<th align="center">作用</th>
<th align="center">對象參考</th>
<th align="center">傳回值</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>let</code></td>
<td align="center">將對象作為參數傳遞進去，然後返回函數塊的返回值。</td>
<td align="center"><code>it</code></td>
<td align="center">Lambda 表達式</td>
</tr>
<tr>
<td align="center"><code>apply</code></td>
<td align="center">將對象作為接收者傳遞進去，然後返回對象本身。</td>
<td align="center"><code>this</code></td>
<td align="center">Lambda 表達式</td>
</tr>
<tr>
<td align="center"><code>with</code></td>
<td align="center">將對象作為參數傳遞進去，然後返回函數塊的返回值。</td>
<td align="center"><code>this</code></td>
<td align="center">Lambda 表達式</td>
</tr>
<tr>
<td align="center"><code>run</code></td>
<td align="center">將對象作為接收者傳遞進去，然後返回函數塊的返回值。</td>
<td align="center"><code>this</code></td>
<td align="center">Context 物件</td>
</tr>
<tr>
<td align="center"><code>also</code></td>
<td align="center">將對象作為參數傳遞進去，然後返回對象本身。</td>
<td align="center"><code>it</code></td>
<td align="center">Context 物件</td>
</tr>
</tbody></table>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>it</code> 是一個默認的單參數名稱，用於簡化 Lambda 表達式中的參數命名。當一個 Lambda 表達式只有一個參數時，可以使用 <code>it</code> 來代替參數名稱，從而使代碼更加簡潔。</p>
</div>

<hr>
<h4 id="also-函數"><a href="#also-函數" class="headerlink" title="also 函數"></a><code>also</code> 函數</h4><p><code>also</code> 函數可以將對象作為參數傳遞給一個函數塊，然後返回對象本身。在函數塊內，可以使用 <code>it</code> 來引用傳遞進來的對象。常用於對對象進行一些輔助操作，例如打印日誌或者執行一些副作用操作。</p>
<div class="tabs" id="tab-code_inline_func_also"><ul class="nav-tabs"><li class="tab active"><a class="#code_inline_func_also-1">Kotlin</a></li><li class="tab"><a class="#code_inline_func_also-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_inline_func_also-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> person = Person(name = <span class="string">&quot;Steve&quot;</span>, age = <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line">person.also &#123;</span><br><span class="line">    it.age = <span class="number">18</span></span><br><span class="line">    punch(it)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_inline_func_also-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Steve&quot;</span>, <span class="number">17</span>);</span><br><span class="line"></span><br><span class="line">person.setAge(<span class="number">18</span>);</span><br><span class="line">punch(person);</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h4 id="apply-函數"><a href="#apply-函數" class="headerlink" title="apply 函數"></a><code>apply</code> 函數</h4><p><code>apply</code> 函數可以將對象作為接收者傳遞給一個函數塊，然後返回對象本身。在函數塊內，可以使用 <code>this</code> 或者省略的 <code>it</code> 來引用接收者對象。常用於對對象進行屬性設置。</p>
<div class="tabs" id="tab-code_inline_func_apply"><ul class="nav-tabs"><li class="tab active"><a class="#code_inline_func_apply-1">Kotlin</a></li><li class="tab"><a class="#code_inline_func_apply-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_inline_func_apply-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> person = Person(name = <span class="string">&quot;Steve&quot;</span>, age = <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line">person.apply &#123;</span><br><span class="line">    age = <span class="number">18</span> <span class="comment">// 等於 this.age = 18</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_inline_func_apply-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Steve&quot;</span>, <span class="number">17</span>);</span><br><span class="line"></span><br><span class="line">person.setAge(<span class="number">18</span>);</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h4 id="let-函數"><a href="#let-函數" class="headerlink" title="let 函數"></a><code>let</code> 函數</h4><p><code>let</code> 函數可以將對象作為參數傳遞給一個函數塊，然後返回函數塊的返回值。在函數塊內，可以使用 <code>it</code> 來引用傳遞進來的對象。常用於對對象進行非空判斷，或者對對象進行一些比較複雜的處理。</p>
<div class="tabs" id="tab-code_inline_func_let"><ul class="nav-tabs"><li class="tab active"><a class="#code_inline_func_let-1">Kotlin</a></li><li class="tab"><a class="#code_inline_func_let-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_inline_func_let-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line">Person(<span class="string">&quot;Steve&quot;</span>, <span class="number">17</span>).let &#123;</span><br><span class="line">    it.rename(<span class="string">&quot;Steven&quot;</span>)</span><br><span class="line">    it.incrementAge()</span><br><span class="line">    println(it)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_inline_func_let-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Steve&quot;</span>, <span class="number">17</span>);</span><br><span class="line">person.rename(<span class="string">&quot;Steven&quot;</span>);</span><br><span class="line">person.incrementAge();</span><br><span class="line">System.out.println(person);</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h4 id="run-函數"><a href="#run-函數" class="headerlink" title="run 函數"></a><code>run</code> 函數</h4><p><code>run</code> 函數可以將對象作為接收者傳遞給一個函數塊，然後返回函數塊的返回值。在函數塊內，可以使用 <code>this</code> 或者省略的 <code>it</code> 來引用接收者對象。常用於對對象進行一些比較複雜的處理。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>run</code> 可以直接為獨立變量進行複雜的計算程序。</p>
</div>

<div class="tabs" id="tab-code_inline_func_run"><ul class="nav-tabs"><li class="tab active"><a class="#code_inline_func_run-1">Kotlin</a></li><li class="tab"><a class="#code_inline_func_run-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_inline_func_run-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> result = run &#123;</span><br><span class="line">    <span class="keyword">val</span> a = <span class="number">10</span></span><br><span class="line">    <span class="keyword">val</span> b = <span class="number">20</span></span><br><span class="line">    <span class="keyword">val</span> c = <span class="number">30</span></span><br><span class="line">    <span class="keyword">val</span> d = <span class="number">40</span></span><br><span class="line">    <span class="keyword">val</span> e = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 複雜的計算程序</span></span><br><span class="line">    (a + b) * c - (d / e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_inline_func_run-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 複雜的計算程序</span></span><br><span class="line"><span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> (a + b) * c - (d / e);</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h4 id="with-函數"><a href="#with-函數" class="headerlink" title="with 函數"></a><code>with</code> 函數</h4><p><code>with</code> 函數可以將對象作為參數傳遞給一個函數塊，然後返回函數塊的返回值。在函數塊內，可以直接使用對象的屬性或方法。常用於對對象進行一些比較複雜的處理。</p>
<div class="tabs" id="tab-code_inline_func_with"><ul class="nav-tabs"><li class="tab active"><a class="#code_inline_func_with-1">Kotlin</a></li><li class="tab"><a class="#code_inline_func_with-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_inline_func_with-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> person = Person(name = <span class="string">&quot;Steve&quot;</span>, age = <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> personInfo = with(person) &#123;</span><br><span class="line">    age = <span class="number">18</span></span><br><span class="line">    PersonInfo(name, age, isAdult)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_inline_func_with-2"><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Steve&quot;</span>, <span class="number">17</span>);</span><br><span class="line"></span><br><span class="line">person.setAge(<span class="number">18</span>);</span><br><span class="line"><span class="type">PersonInfo</span> <span class="variable">personInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PersonInfo</span>(person.getName(), person.getAge(), person.isAdult());</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h2 id="特殊符號"><a href="#特殊符號" class="headerlink" title="特殊符號"></a>特殊符號</h2><h3 id="底線符號"><a href="#底線符號" class="headerlink" title="底線符號 _"></a>底線符號 <code>_</code></h3><p>底線符號 <code>_</code> 有以下作用：</p>
<div class="tabs" id="tab-code_special_symbol_underline"><ul class="nav-tabs"><li class="tab active"><a class="#code_special_symbol_underline-1">通配符</a></li><li class="tab"><a class="#code_special_symbol_underline-2">解構聲明中的未使用變數</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_special_symbol_underline-1"><p><font size="6"><strong>作為通配符</strong></font></p>
<p>底線符號 <code>_</code> 可以用作函數或 lambda 表達式中未使用參數的佔位符。例如，一個函數的參數列表中可能存在一個參數，但是在函數體中不需要使用該參數的值。在這種情況下，可以使用 _ 作為佔位符來表示未使用的參數。例如：</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line">list.forEach &#123; _, value -&gt; println(value) &#125;</span><br></pre></td></tr></table></figure></div>

<p>這裡的 <code>_</code> 佔位符表示不使用第一個參數。</p></div><div class="tab-pane" id="code_special_symbol_underline-2"><p><font size="6"><strong>用於解構聲明中的未使用變數</strong></font></p>
<p>在 Kotlin 中，我們可以使用解構聲明來將一個對象的多個屬性解構到多個變數中。如果我們只需要其中的某些屬性，而其他屬性不需要使用，可以使用 <code>_</code> 作為佔位符來表示未使用的變數。例如：</p>
<div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> (x, _, z) = arrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br></pre></td></tr></table></figure></div>

<p>這裡的 <code>_</code> 佔位符表示不使用第二個元素。</p>
<p>在 Java 中，你可以使用<strong>陣列解構</strong>的方式來實現類似的功能，示例如下：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>[] array = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> array[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> <span class="variable">z</span> <span class="operator">=</span> array[<span class="number">2</span>];</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h2 id="鏈式呼叫"><a href="#鏈式呼叫" class="headerlink" title="鏈式呼叫"></a>鏈式呼叫</h2><p>鏈式呼叫（Chain Call）是一種方便且可讀性高的語法，可以讓我們將多個方法調用鏈接在一起，使代碼更加簡潔和易讀。鏈式呼叫使用 <code>.</code> 運算符 . 來將多個方法調用鏈接在一起。</p>
<div class="tabs" id="tab-code_chain_call"><ul class="nav-tabs"><li class="tab active"><a class="#code_chain_call-1">Kotlin</a></li><li class="tab"><a class="#code_chain_call-2">Java</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_chain_call-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> list = listOf(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;orange&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> result = list.filter &#123; it &gt; <span class="number">0</span> &#125;</span><br><span class="line">                 .sortedByDescending &#123; it &#125;</span><br><span class="line">                 .map &#123; it * <span class="number">2</span> &#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="code_chain_call-2"><p>在 Java 中，也可以使用類似鏈式呼叫的方法，使用方法是將多個方法調用鏈接在一起，使代碼更加簡潔和易讀。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>可以使用 <code>stream()</code> 方法和方法鏈。</p>
</div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = Arrays.asList(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;orange&quot;</span>);</span><br><span class="line">List&lt;String&gt; result = list.stream()</span><br><span class="line">                          .filter(s -&gt; s.length() &gt; <span class="number">0</span>)</span><br><span class="line">                          .sorted((s1, s2) -&gt; s2.compareTo(s1))</span><br><span class="line">                          .map(s -&gt; s + s)</span><br><span class="line">                          .collect(Collectors.toList());</span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h1 id="程式語言穿梭"><a href="#程式語言穿梭" class="headerlink" title="程式語言穿梭"></a>程式語言穿梭</h1><h2 id="在-Android-Java-項目新增-Kotlin-文件"><a href="#在-Android-Java-項目新增-Kotlin-文件" class="headerlink" title="在 Android Java 項目新增 Kotlin 文件"></a>在 Android Java 項目新增 Kotlin 文件</h2><div class="highlight-container" data-rel="Gradle"><figure class="iseeu highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: <span class="string">&#x27;kotlin-android&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">// 包含 Kotlin 協程的核心功能</span></span><br><span class="line">    implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 包含了在 Android 平台上使用 Kotlin 協程所需的額外功能</span></span><br><span class="line">    implementation <span class="string">&#x27;org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>檢視例子 </summary>
              <div class="content">
              <div class="tabs" id="tab-code_java_w_kotlin"><ul class="nav-tabs"><li class="tab active"><a class="#code_java_w_kotlin-1">數據類</a></li></ul><div class="tab-content"><div class="tab-pane active" id="code_java_w_kotlin-1"><div class="highlight-container" data-rel="Kotlin"><figure class="iseeu highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">UserData</span>(<span class="keyword">val</span> name: String, <span class="keyword">val</span> age: <span class="built_in">Int</span>)</span><br></pre></td></tr></table></figure></div><div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.myapplication.UserData;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建一個新的 UserData 對象</span></span><br><span class="line"><span class="type">UserData</span> <span class="variable">userData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserData</span>(<span class="string">&quot;John&quot;</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 訪問 UserData 對象的 name 和 age 屬性</span></span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> userData.getName();</span><br><span class="line"><span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> userData.getAge();</span><br></pre></td></tr></table></figure></div></div></div></div>
              </div>
            </details>]]></content>
      <tags>
        <tag>Java</tag>
        <tag>Kotlin</tag>
      </tags>
  </entry>
  <entry>
    <title>打造並美化終端機和 Vim 編輯器</title>
    <url>//post/dev_terminal_beautify_tutorial.html</url>
    <content><![CDATA[<hr>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>本文章需要使用 <a target="_blank" href="https://brew.sh/index_zh-tw">Homebrew</a>，請先把其安裝。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></div></div>

<p>基本上，我們都不會再用 MacOS 預設的 Terminal 軟件，取而的是 iTerm2，與較原始的 Terminal 比較，這個<strong>提供更多進階功能和設定</strong>。</p>
<p>可到這裏安裝 <a target="_blank" href="https://iterm2.com/downloads.html">iTerm2</a> 軟件包，或輸入指令安裝：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install iterm2</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="為終端機設定真實色"><a href="#為終端機設定真實色" class="headerlink" title="為終端機設定真實色"></a>為終端機設定真實色</h1><p>安裝 iTerm2 原因其中之一，是能夠支援真實色（全彩 - 256色），真實色可以<strong>使終端機顯示更漂亮的色彩配置</strong>。</p>
<p>點擊 <kbd class="menu">iTerm2</kbd> 選單 &gt; <kbd class="menu">Settings</kbd> &gt; <kbd class="menu">Profiles</kbd> &gt; <kbd class="menu">Terminal</kbd></p>
<p>把 <kbd class="menu">Report terminal type</kbd> 並設定為 <code>xterm-256color</code>。</p>
<p><img src="/post/dev_terminal_beautify_tutorial/img1.png" alt="img1"></p>
<hr>
<h1 id="為終端機設定色彩主題"><a href="#為終端機設定色彩主題" class="headerlink" title="為終端機設定色彩主題"></a>為終端機設定色彩主題</h1><p><strong>你的終端機不是黑白就是像駭客</strong>，想要得到這個終端機的外觀？那就繼續看下去！</p>
<p><img src="/post/dev_terminal_beautify_tutorial/img2.png" alt="img2"></p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>這個輸出是 <code>neofetch</code> 指令生成的。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew install neofetch</span><br></pre></td></tr></table></figure></div>
</div>


<hr>
<h2 id="基本主題配置"><a href="#基本主題配置" class="headerlink" title="基本主題配置"></a>基本主題配置</h2><p><img src="/post/dev_terminal_beautify_tutorial/img3.png" alt="img3"></p>
<p>Terminal 或 ITerm2 提供了一些內建主題，在 <kbd class="menu">Profiles</kbd> &gt; <kbd class="menu">Colors</kbd> &gt; <kbd class="menu">Color Preset</kbd> 那裏可以選擇主題，如果還想發掘其他更美的主題，可到 <a target="_blank" href="https://github.com/mbadolato/iTerm2-Color-Schemes">iTerm2-Color-Schemes</a> 下載其他主題。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><ol>
<li>前往 <a target="_blank" href="https://github.com/mbadolato/iTerm2-Color-Schemes">iTerm2-Color-Schemes</a> 後，點擊 <kbd class="menu">Code</kbd> &gt; <kbd class="menu">Download ZIP</kbd> 把所有檔案以壓縮檔下載至你的電腦。</li>
<li>點擊 <kbd class="menu">iTerm2</kbd> 選單 &gt; <kbd class="menu">Settings</kbd> &gt; <kbd class="menu">Profiles</kbd> &gt; <kbd class="menu">Colors</kbd> &gt; <kbd class="menu">Color Preset</kbd> &gt; <kbd class="menu">Import</kbd>。</li>
<li>找 <code>schemes</code> 資料夾，裏面有一系列的主題 (<code>.itermcolors</code> 檔案用於匯入並應用 iTerm2 主題檔案)</li>
<li>點擊確定後關閉 iTerm2 - <kbd>Cmd</kbd> + <kbd>Q</kbd> 並重啟。</li>
</ol>
</div>

<hr>
<h2 id="進階主題配置"><a href="#進階主題配置" class="headerlink" title="進階主題配置"></a>進階主題配置</h2><hr>
<h3 id="安裝-zsh"><a href="#安裝-zsh" class="headerlink" title="安裝 zsh"></a>安裝 zsh</h3><div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>自 <strong>Mac OS 10 (MacOS Catalina)</strong> 版本起，終端機<strong>預設</strong>不再以 <code>bash</code>，取而代之是<strong>以 <code>zsh</code> 作為殼層</strong>。</p>
</div>

<p>不過你也可以檢查一下有沒有安裝 <code>zsh</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> zsh</span><br></pre></td></tr></table></figure></div>

<p>如果沒有，可以手動安裝：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew install zsh</span><br><span class="line">sudo sh -c <span class="string">&quot;echo <span class="subst">$(which zsh)</span> &gt;&gt; /etc/shells&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>把 <code>zsh</code> 設為預設殼層。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>用 Homebrew 安裝的 <code>zsh</code> 位置在 <code>/usr/local/bin/zsh</code>；<br>系統安裝的 <code>zsh</code> 位置在 <code>/bin/zsh</code>。</p>
<p>在首次安裝 <code>zsh</code> 的時候會進入 <code>zsh</code> 設定界面，建議<strong>依照 Recommended 的提示</strong>進行設定。</p>
</div>

<hr>
<h3 id="安裝-oh-my-zsh"><a href="#安裝-oh-my-zsh" class="headerlink" title="安裝 oh-my-zsh"></a>安裝 oh-my-zsh</h3><blockquote>
<p>不是 oh my god，但一旦你把它安裝到終端機，或許你會有這個反應！</p>
</blockquote>
<p>須知 <code>zsh</code> 使用繁複，先不說調整設定，光是初始化也要使用很多腦載量，安裝到一半可能就棄械投降，所以 <code>zsh</code> 在<strong>初期甚少得到賞識</strong>。不過，今時今日，現在我們可以用 <code>oh-my-zsh</code> ，它是一個讓 <code>zsh</code> <strong>更容易使用的套件</strong>！</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>大部分的 <code>zsh</code> 套件都支援 <code>oh-my-zsh</code>。</p>
</div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="設定-zsh-主題"><a href="#設定-zsh-主題" class="headerlink" title="設定 zsh 主題"></a>設定 zsh 主題</h3><p><code>oh-my-zsh</code> 提供了許多主題，例如在 <a target="_blank" href="https://github.com/ohmyzsh/ohmyzsh">oh-my-zsh 官方文案</a> 看到的 <code>robbyrussell</code>、<code>agnoster</code> 主題。我們可以透過文本編輯修改 <code>~/.zshrc</code> 檔案內容，從而應用想要的主題。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>.zshrc</code> 是修改 <code>zsh</code> 設定的核心檔案。</p>
</div>


<p>開啟 <code>~/.zshrc</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>當文件打開後，會進入命令模式，這個時候<strong>當你敲擊鍵盤的一些作用鍵會被辨別為命令</strong>，而不是輸入字元，要按鍵盤 I 鍵進入插入模式。</p>
</div>

<hr>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>進入插入模式 - <kbd>I</kbd><br>進入底線命令模式 - <kbd>:</kbd><br>退出輸入模式，並切換命令模式 - <kbd>ESC</kbd><br>複製所選字元 - <kbd>Y</kbd><br>貼上已複製字元 - <kbd>P</kbd><br>剪下所選字元 - <kbd>D</kbd><br>復原 (Undo) - <kbd>U</kbd><br>重做 (Redo) - <kbd>Ctrl</kbd> + <kbd>R</kbd><br>召喚自動完成選單 - <kbd>Ctrl</kbd> + <kbd>N</kbd></p>
</div>

<hr>
<p>在 <code>~/.zshrc</code> 檔案內，找 <code>ZSH_THEME</code> 設定。</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;robbyrussell&quot;</span></span><br></pre></td></tr></table></figure></div>

<p><code>robbyrussell</code> 是 zsh 預設應用的主題，如果你想要使用其他，可到 <a target="_blank" href="https://github.com/ohmyzsh/ohmyzsh/tree/master/themes">這裏</a> 看所有主題，<code>.zsh-theme</code> 副檔名的檔案是用於 <code>ZSH_THEME</code> 設定。</p>
<p>例如是 <code>sunshine.zsh-theme</code>：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;sunshine&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>重啟殼層更新設定。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exec</span> <span class="variable">$SHELL</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="安裝-Powerlevel10k"><a href="#安裝-Powerlevel10k" class="headerlink" title="安裝 Powerlevel10k"></a>安裝 Powerlevel10k</h3><p>來到這裏，如果 <code>oh-my-zsh</code> 已經足夠讓你感到 oh my god 的話，你可以住手了。但是，我們將會進一步利用強大 <code>zsh</code> 主題美化終端機，它就是 <code>Powerlevel10k</code>。</p>
<blockquote>
<p><code>Powerlevel10k</code> 是 <code>Powerlevel9k</code> 的新一代版本。</p>
</blockquote>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>更新特點：</p>
<ul>
<li>人性化的<strong>引導式</strong>設定界面</li>
<li><strong>不用自行安裝</strong> Powerline 字體</li>
<li>更多命令行客製化設定</li>
</ul>
<p>如果你安裝過 <code>Powerlevel9k</code>，不用擔心，兩者版本的設定相容，但 <code>Powerlevel10k</code> 更優，建議更新。</p>
</div>

<p>我們會透過 <code>oh-my-zsh</code> 安裝 <code>Powerlevel10k</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-<span class="variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure></div>

<p>同樣用 <code>vi</code> ，設定主題為 <code>powerlevel10k</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>如果你不是用 <code>oh-my-zsh</code> 安裝 <code>Powerlevel10k</code>，而把以上設定設置到 <code>.zshrc</code>，會報錯。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[oh-my-zsh] theme <span class="string">&#x27;powerlevel10k/powerlevel10k&#x27;</span> not found</span><br></pre></td></tr></table></figure></div>

<p>這個時候，重新安裝 <code>oh-my-zsh</code> 和 <code>Powerlevel10k</code>。</p>
</div>

<hr>
<p>重啟終端機或輸入指令進入 <code>Powerlevel10k</code> 設定界面：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">p10k configure</span><br></pre></td></tr></table></figure></div>

<p>照着畫面一步步選擇你喜歡的設定便可以。</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><ol>
<li>如果它詢問你 <code>Does this look like a diamond (rotated square)?</code> 或類似問題的時候，<strong>與你所見並不一致</strong>，這個很可能<strong>你沒有安裝 Powerline 字體</strong>。</li>
<li>如果它沒有詢問 <code>Install Meslo Nerd Font?</code> 的話，<strong>重裝 <code>Powerlevel10k</code></strong> 試試。</li>
<li>如果你要很多花俏的圖示，<code>Character Set</code> 要選 <code>Unicode</code>。</li>
<li><code>Transient Prompt</code> 是 <code>Powerlevel10k</code> 新功能，會讓命令行固定只有一個，每次<strong>輸入完指令和輸出歷史會自動往上印</strong>。</li>
</ol>
</div>

<hr>
<h1 id="使用-zsh-插件管理器配置進階功能"><a href="#使用-zsh-插件管理器配置進階功能" class="headerlink" title="使用 zsh 插件管理器配置進階功能"></a>使用 zsh 插件管理器配置進階功能</h1><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>基於我們所應用的主題來自於 <code>zsh</code> 的安裝。接下來的套件都會沿用 <code>zsh</code> 安裝。</p>
</div>

<hr>
<h2 id="啟用輸入指令時的語法突顯"><a href="#啟用輸入指令時的語法突顯" class="headerlink" title="啟用輸入指令時的語法突顯"></a>啟用輸入指令時的語法突顯</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">plugins=(</span><br><span class="line">    # ...</span><br><span class="line">    zsh-<span class="keyword">syntax</span>-highlighting</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="啟用輸入指令時自動完成提示"><a href="#啟用輸入指令時自動完成提示" class="headerlink" title="啟用輸入指令時自動完成提示"></a>啟用輸入指令時自動完成提示</h2><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">plugins=( </span><br><span class="line">    # ...</span><br><span class="line">    zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="Vim-編輯器外觀設定"><a href="#Vim-編輯器外觀設定" class="headerlink" title="Vim 編輯器外觀設定"></a>Vim 編輯器外觀設定</h1><p>把終端機弄美後，是不是都很想有股衝動美化 Vim 編輯器呢？這部分就是教大家怎樣將 Vim 編輯器像我的一樣美。</p>
<p><img src="/post/dev_terminal_beautify_tutorial/img4.png" alt="img4"></p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>如果你沒有安裝 <code>vim</code>，可以用 Homebrew 安裝：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew install vim</span><br></pre></td></tr></table></figure></div>

<p><code>vim</code> 與 <code>vi</code> 有什麼區別？Vim 是 <strong>Vi iMproved</strong>，簡而言之就是<strong>改善並把 Vi 編輯器功能進階化</strong>。</p>
</div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>建議安裝 <a target="_blank" href="https://macvim-dev.github.io/macvim/">MacVim</a>，好處：</p>
<ol>
<li>MacVim 是一個獨立軟件，可以把<strong>檔案直接拖拽並直接打開</strong>。</li>
<li>可以<strong>用 Mac OS 建有的快捷鍵</strong>，如 <kbd>Cmd</kbd> + <kbd>X</kbd>。</li>
</ol>
</div>

<hr>
<h2 id="安裝-vim-plug"><a href="#安裝-vim-plug" class="headerlink" title="安裝 vim-plug"></a>安裝 vim-plug</h2><p><code>vim-plug</code> 是一個 <code>vim</code> 的插件管理器，用以把 <code>vim</code> 的插件載入至 Vim 編輯器直接使用。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p><code>vim-plug</code> 是較新的插件管理技術，較早前的是 <code>Pathogen</code> 和 <code>Vundle</code>。</p>
<p>可以看到 <code>vim-plug</code> 與 <code>Vundle</code> 兩者的差異並不大：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><figcaption><span>Vundle</span></figcaption><table><tr><td class="code"><pre><span class="line">Plugin <span class="string">&#x27;...&#x27;</span></span><br><span class="line"></span><br><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><figcaption><span>vim-plug</span></figcaption><table><tr><td class="code"><pre><span class="line">Plug <span class="string">&#x27;...&#x27;</span></span><br><span class="line"></span><br><span class="line">:PlugInstall</span><br></pre></td></tr></table></figure></div>

<p>但唯一 <code>vim-plug</code> 較 <code>Vundle</code> 的更勝一籌是<strong>支援按需載入</strong>。</p>
</div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fLo ~/.vim/autoload/plug.vim --create-dirs \</span><br><span class="line">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.vimrc</span><br></pre></td></tr></table></figure></div>

<p>在 <code>.vimrc</code> 內加入編碼：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;檔案路徑&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="Vim-插件"><a href="#Vim-插件" class="headerlink" title="Vim 插件"></a>Vim 插件</h2><p>加入插件：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;...&#x27;</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure></div>

<p><img src="/post/dev_terminal_beautify_tutorial/img10.png" alt="img10"></p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p><code>Plug &#39;...&#39;</code> 只是樣板，<strong>別把它運行，會報錯</strong>，接下來會使用插件。</p>
<p>把插件加入後要做的步驟：</p>
<ol>
<li><code>:qw</code> - <kbd>ESC</kbd> + <kbd>:</kbd> + <kbd>Q</kbd> + <kbd>W</kbd> 儲存。</li>
<li><code>:PlugInstall</code> - <kbd>ESC</kbd> + <kbd>:</kbd> + <code>PlugInstall</code>。</li>
<li>重啟 <code>vim</code>。</li>
</ol>
</div>

<p>當你輸入了 <code>:PlugInstall</code> 後，會在左側另外開啟了安裝插件的畫面：</p>
<p><img src="/post/dev_terminal_beautify_tutorial/img11.png" alt="img11"></p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>:q</code> - <kbd>ESC</kbd> + <kbd>:</kbd> + <kbd>Q</kbd> 退出安裝插件的畫面。</p>
</div>

<hr>
<h3 id="airline-amp-airline-themes"><a href="#airline-amp-airline-themes" class="headerlink" title="airline &amp; airline-themes"></a>airline &amp; airline-themes</h3><p><img src="/post/dev_terminal_beautify_tutorial/img5.png" alt="img5"><br><img src="/post/dev_terminal_beautify_tutorial/img6.png" alt="img6"><br><img src="/post/dev_terminal_beautify_tutorial/img7.png" alt="img7"><br><img src="/post/dev_terminal_beautify_tutorial/img8.png" alt="img8"><br><img src="/post/dev_terminal_beautify_tutorial/img9.png" alt="img9"></p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="安裝-Vim-主題"><a href="#安裝-Vim-主題" class="headerlink" title="安裝 Vim 主題"></a>安裝 Vim 主題</h3><hr>
<h4 id="安裝-material-vim"><a href="#安裝-material-vim" class="headerlink" title="安裝 material.vim"></a>安裝 material.vim</h4><p>在這教學，我們會用 <a target="_blank" href="https://github.com/kaicataldo/material.vim">material.vim</a> 主題，如果你要用其他，就要依從該主題的安裝方法。</p>
<figure>
    <img src="https://raw.githubusercontent.com/kaicataldo/material.vim/main/screenshots/material-all-variants.png" alt="githubImg">
    <figcaption>
        圖片來源：<a target="_blank" href="https://github.com/kaicataldo/material.vim">material.vim</a> - GitHub 專案
    </figcaption>
</figure>

<p>安裝 <code>material.vim</code>：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">Plug <span class="string">&#x27;kaicataldo/material.vim&#x27;</span>, &#123; <span class="string">&#x27;branch&#x27;</span>: <span class="string">&#x27;main&#x27;</span> &#125;</span><br></pre></td></tr></table></figure></div>

<p>應用 <code>material</code> 主題。</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">colorscheme</span> material</span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>所有經過插件擴充的設定值，如 <code>colorscheme material</code> 內的 <code>material</code>，是來自 <code>kaicataldo/material.vim</code> 的，所以<strong>設定值要在 <code>Plug</code> 區塊後才能使用</strong>。</p>
<p>即是：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/plugged&#x27;</span>)</span><br><span class="line">Plug <span class="string">&#x27;kaicataldo/material.vim&#x27;</span>, &#123; <span class="string">&#x27;branch&#x27;</span>: <span class="string">&#x27;main&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">call</span> plug#end()</span><br><span class="line"></span><br><span class="line"><span class="keyword">colorscheme</span> material</span><br></pre></td></tr></table></figure></div></div>

<h4 id="為-Vim-設定真實色"><a href="#為-Vim-設定真實色" class="headerlink" title="為 Vim 設定真實色"></a>為 Vim 設定真實色</h4><p>在 <code>.vimrc</code> 內加入編碼：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">has</span>(<span class="string">&#x27;nvim&#x27;</span>))</span><br><span class="line">  <span class="keyword">let</span> $NVIM_TUI_ENABLE_TRUE_COLOR = <span class="number">1</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;termguicolors&quot;</span>)</span><br><span class="line">    <span class="comment">&quot; fix bug for vim</span></span><br><span class="line">    <span class="keyword">set</span> t_8f=^[[<span class="number">38</span>;<span class="number">2</span>;%<span class="keyword">lu</span>;%<span class="keyword">lu</span>;%lum</span><br><span class="line">    <span class="keyword">set</span> t_8b=^[[<span class="number">48</span>;<span class="number">2</span>;%<span class="keyword">lu</span>;%<span class="keyword">lu</span>;%lum</span><br><span class="line">    <span class="comment">&quot; enable true color</span></span><br><span class="line">    <span class="keyword">set</span> termguicolors</span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure></div>

<h4 id="設定-Material-主題"><a href="#設定-Material-主題" class="headerlink" title="設定 Material 主題"></a>設定 Material 主題</h4><p>material.vim 一共<strong>設有 10 款 Material 主題</strong>，其中 <strong>5 款為 Community Material 主題</strong>。</p>
<ul>
<li>Default &#x2F; Community Default</li>
<li>Lighter &#x2F; Community Lighter</li>
<li>Darker &#x2F; Community Darker</li>
<li>Palenight &#x2F; Community Palenight</li>
<li>Ocean &#x2F; Community Ocean</li>
</ul>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>按照 <a target="_blank" href="https://material-theme.com/docs/reference/color-palette/">Material 主題調色</a>，Default 即是 Oceanic，而 Ocean 即是 Deep Ocean。</p>
</div>

<p>這裏是主題的所有可設定值：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">g:material_theme_style</span> = <span class="string">&#x27;default&#x27;</span> | <span class="string">&#x27;palenight&#x27;</span> | <span class="string">&#x27;ocean&#x27;</span> | <span class="string">&#x27;lighter&#x27;</span> | <span class="string">&#x27;darker&#x27;</span> | <span class="string">&#x27;default-community&#x27;</span> | <span class="string">&#x27;palenight-community&#x27;</span> | <span class="string">&#x27;ocean-community&#x27;</span> | <span class="string">&#x27;lighter-community&#x27;</span> | <span class="string">&#x27;darker-community&#x27;</span></span><br></pre></td></tr></table></figure></div>

<p>例如我想要 Community Material Palenight 主題（即是我一開始展示的那一個）。</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:material_theme_style</span> = <span class="string">&#x27;palenight-community&#x27;</span></span><br><span class="line"><span class="keyword">colorscheme</span> material</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>如果是淺色主題，如 Material Lighter：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> background=light</span><br></pre></td></tr></table></figure></div></div>


<p>如果你想要斜體如<strong>註釋</strong>斜體的語法突顯：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable">g:material_terminal_italics</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>這個設定<strong>不會把所有字元都轉為斜體</strong>，它把字元轉為斜體是<strong>按語法主題文件而定</strong>的。</p>
<p>如果你設定了斜體後<strong>斜體字元有背景顏色</strong>的話，你可以試試在 <code>colorscheme</code> 那行往下加入編碼：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="comment">&quot; fix italics in Vim</span></span><br><span class="line"><span class="keyword">if</span> !has(<span class="string">&#x27;nvim&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> &amp;t_ZH=<span class="string">&quot;\e[3m&quot;</span></span><br><span class="line">  <span class="keyword">let</span> &amp;t_ZR=<span class="string">&quot;\e[23m&quot;</span></span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure></div>

<p>如果你設定了主題後<strong>沒有語法突顯色彩</strong>，可能你沒為 Vim 啟用語法突顯：</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure></div></div>

<hr>
<h1 id="Vim-其他設定"><a href="#Vim-其他設定" class="headerlink" title="Vim 其他設定"></a>Vim 其他設定</h1><hr>
<h2 id="自動進入插入模式"><a href="#自動進入插入模式" class="headerlink" title="自動進入插入模式"></a>自動進入插入模式</h2><p>開啟 Vim 編輯器後自動進入插入模式（Insert mode）。</p>
<div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line">start</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="鼠標點擊控制"><a href="#鼠標點擊控制" class="headerlink" title="鼠標點擊控制"></a>鼠標點擊控制</h2><div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> mouse=<span class="keyword">a</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="啟用行號"><a href="#啟用行號" class="headerlink" title="啟用行號"></a>啟用行號</h2><div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="啟用語法突顯"><a href="#啟用語法突顯" class="headerlink" title="啟用語法突顯"></a>啟用語法突顯</h2><div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="顯示目前行背景顏色"><a href="#顯示目前行背景顏色" class="headerlink" title="顯示目前行背景顏色"></a>顯示目前行背景顏色</h2><div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> cursorline</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="顯示頂部列和檔案頁籤"><a href="#顯示頂部列和檔案頁籤" class="headerlink" title="顯示頂部列和檔案頁籤"></a>顯示頂部列和檔案頁籤</h2><div class="highlight-container" data-rel="Vim"><figure class="iseeu highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> showtabline=<span class="number">2</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="相關鏈結"><a href="#相關鏈結" class="headerlink" title="相關鏈結"></a>相關鏈結</h1><p>這些就是本文章所提及的相關鏈結。</p>
<ul class="useful-links layout-grid col-3">
    <a target="_blank" href="https://brew.sh/index"><li>Homebrew</li></a>
    <a target="_blank" href="https://iterm2.com/downloads.html"><li>iTerm2</li></a>
    <a target="_blank" href="https://github.com/mbadolato/iTerm2-Color-Schemes"><li>iTerm2-Color-Schemes</li></a>
    <a target="_blank" href="https://github.com/ohmyzsh/ohmyzsh"><li>oh-my-zsh</li></a>
    <a target="_blank" href="https://github.com/ohmyzsh/ohmyzsh/tree/master/themes"><li>oh-my-zsh Themes</li></a>
    <a target="_blank" href="https://github.com/zsh-users/zsh-syntax-highlighting"><li>zsh-syntax-highlighting</li></a>
    <a target="_blank" href="https://github.com/romkatv/powerlevel10k"><li>Powerlevel10k</li></a>
    <a target="_blank" href="https://github.com/vim-airline/vim-airline"><li>vim-airline</li></a>
    <a target="_blank" href="https://macvim-dev.github.io/macvim/"><li>MacVim</li></a>
    <a target="_blank" href="https://github.com/kaicataldo/material.vim"><li>material-vim</li></a>
    <a target="_blank" href="https://material-theme.com/docs/reference/color-palette/"><li>Material Color Schemes</li></a>
</ul>

<hr>
<p>好了，大概就是這樣了。記錄一下建立這個 <code>md</code> 檔案的時間，由 2023-01-04 <strong>12:51</strong> 開始寫，結果到 <strong>16:10</strong> 才寫好這篇文章哈哈。。</p>
]]></content>
      <tags>
        <tag>終端機指令</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 TextMate 語法的基礎入門</title>
    <url>//post/dev_textmate_basic_guide.html</url>
    <content><![CDATA[<blockquote>
<p>TextMate，是透過文字分享給其他朋友們，而成為夥伴。 ── By. 才不是啦。</p>
</blockquote>
<hr>
<h1 id="那。。什麼是-TextMate？"><a href="#那。。什麼是-TextMate？" class="headerlink" title="那。。什麼是 TextMate？"></a>那。。什麼是 TextMate？</h1><p><a class="link" href="https://macromates.com/textmate/manual/" target="_blank">TextMate <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 其實原先是一個以<strong>圖形用戶界面（GUI）的文本編輯器</strong>，其強大之處是能夠<strong>支援聲明式客製化和匯入 TextMate bundle 功能</strong>，就是一些額外為此軟件附加的延伸模組，一般都是一些語法文件。</p>
<p>但是，今天我們不是要深究 TextMate 編輯器的應用方式，而是透過該軟件公司所開發的語法文件系統來建立自己的語法文件。</p>
<p>在使用 TextMate 之前，我們需要學會基礎的正則表達式，英文是 Regular Expression（簡稱 Regex），因為 TextMate 的語法文件正正<strong>倚賴正則表達式來定義該編程語言的語法和規則</strong>。</p>
<hr>
<h1 id="簡單介紹正則表達式"><a href="#簡單介紹正則表達式" class="headerlink" title="簡單介紹正則表達式"></a>簡單介紹正則表達式</h1><p>正則表達式，是在電腦世界的其一概念，用以<strong>單個字符描述，從而符合一系列的規則句法</strong>。我們耳熟能詳的 Visual Studio Code、Atom、Sublime 等這些文字編輯器和整合開發環境（IDE）軟件，都是使用正則表達式或類似技術，實現特定語法突顯。</p>
<hr>
<h1 id="語法。。突顯？！"><a href="#語法。。突顯？！" class="headerlink" title="語法。。突顯？！"></a>語法。。突顯？！</h1><p>所謂的語法突顯，又稱語法高亮，就是根據程序編碼中的語法以顏色突顯出來，<strong>供用戶易於觀看</strong>。</p>
<hr>
<h2 id="沒有語法突顯與有語法突顯的差異"><a href="#沒有語法突顯與有語法突顯的差異" class="headerlink" title="沒有語法突顯與有語法突顯的差異"></a>沒有語法突顯與有語法突顯的差異</h2><p>以下這裏有一個以 Java 編碼作對比例子，就是沒有語法突顯和加上語法突顯的分別。</p>
<p>沒有語法突顯：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// without syntax highlighting</span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(&quot;Hello World&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>設有語法突顯：</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// with syntax highlighting</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>看到兩者明顯的差別後，如此看來，語法突顯的重要性對於人類來說尤其甚廣，它能有效讓我們清楚看到所需要的關鍵字，在沒有搜尋的情況下，毋須大海撈針。</p>
<hr>
<h1 id="TextMate-的運作"><a href="#TextMate-的運作" class="headerlink" title="TextMate 的運作"></a>TextMate 的運作</h1><p>因此，我們在 VSCode 或其他文本編輯器裏輸入 <code>if</code>, <code>else</code> 等這些字串，便會顯示該主題的特定色彩，這個就是運用 TextMate，它是一個以正則表達式的技術實現程序語言的語法突顯。回到說那些字串，在 Java 或其他語言中，它被認定是一個<strong>關鍵字</strong>（keyword），要運用正則表達式為這些關鍵字實現語法突顯，TextMate 建有的編碼大概是這樣的。</p>
<hr>
<h2 id="TextMate-語法示例"><a href="#TextMate-語法示例" class="headerlink" title="TextMate 語法示例"></a>TextMate 語法示例</h2><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;patterns&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;keyword.control&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="string">&quot;\b(if|else)\b&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>

<p>在以上 JSON 編碼，我們可以觀察到數件不同的東西，看到有 <code>patterns</code>, <code>match</code> 和 <code>name</code> 的設定，而 <code>name</code> 的屬性值為 <code>keyword.control</code> 等前所未見的東西。</p>
<hr>
<h2 id="TextMate-基本概念-Part-01"><a href="#TextMate-基本概念-Part-01" class="headerlink" title="TextMate 基本概念 Part 01"></a>TextMate 基本概念 Part 01</h2><hr>
<h3 id="patterns"><a href="#patterns" class="headerlink" title="patterns"></a>patterns</h3><p>原來，<code>patterns</code> 是用來<strong>定義語法規則的集合</strong>，即是每當你在現時的語法文件中定義一個新的語法，如定義數據類型 <code>int</code>, <code>boolean</code> 等語法，都需要在 <code>patterns</code> 內進行。</p>
<h3 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h3><p>在正則表達式進行比對前，它都需要一個<strong>比對目標</strong>，稱為類別 <code>scope</code>，而 <code>name</code> 就是用於<strong>宣告該 <code>token</code> 的類別</strong>，在 TextMate 的語境，當中已經內附了數個不同的分類，而 <code>keyword.control</code> 就是其一，還有的就是 <code>storage.modifier</code>、<code>constant.numberic</code> 等類別。</p>
<h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><p><code>match</code> 屬性就是<strong>用作比對 <code>token</code> 的正則表達式</strong>，簡而言之，就是把要基本編寫的正則表達式都寫入於 <code>match</code> 內。所以每當 TextMate 為字詞按 <code>match</code> 的屬性值進行比對時，會將其<strong>看作獨自的 <code>token</code> 來處理並根據 <code>name</code> 所宣告的類別</strong>而作分類。</p>
<p>上述編碼只為 <code>if</code> 和 <code>else</code> 識別為 <code>keyword.control</code> 類別，並沒有為其他關鍵字，如 <code>switch</code>, <code>for</code> 等關鍵字作額外的識別，如要為此而加以擴充，做法很簡單。</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;patterns&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;keyword.control&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span><span class="string">&quot;\b(if|while|switch|for|)\b&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>

<p>如是者，要是你想把該編程語言所有的關鍵字加上語法突顯，就可以用這個方法，以擴充的形式來強化你的語法文件。</p>
<hr>
<h2 id="層級結構"><a href="#層級結構" class="headerlink" title="層級結構"></a>層級結構</h2><p>我們上述提及的 <code>scope</code>，你會見到 <code>scope</code> <code>keyword.control</code> 的類別名稱有一個 <code>.</code> 用以把 <code>keyword</code> 和 <code>control</code> 分開，在 TextMate 語境，<code>scope</code> 其實是一種<strong>以<code>.</code>來分割的層級結構</strong>，如 <code>keyword</code> 就是父層級，而 <code>control</code> 就是子層級，因此，<code>keyword</code> 與 <code>keyword.control</code> 形成父子層級。</p>
<hr>
<h2 id="match-的限制"><a href="#match-的限制" class="headerlink" title="match 的限制"></a>match 的限制</h2><p>剛才我們所說，要為所以關鍵字加上語法突顯，只需要以擴充形式來強化語法文件，但是，事情往往沒有你所想像中簡單，語法突顯並非如此單純。<code>match</code> 只能夠以正則表達式<strong>比對單行內容</strong>，但往往這是不足夠的，你可以立即想起的就是<strong>跨行註釋</strong> <code>comment</code>，例如使用 <code>/*</code> 及 <code>*/</code> 作定義註釋的編程語言，當然純粹使用 <code>match</code>，固然能夠實現，但並<strong>無法實現並凸顯跨行註釋</strong>的特性。因此，除了需要理解 <code>match</code> 的運作，為了跨行性質而作考量，還要學懂如何使用 <code>begin</code> 和 <code>end</code>。</p>
<hr>
<h2 id="TextMate-基本概念-Part-02"><a href="#TextMate-基本概念-Part-02" class="headerlink" title="TextMate 基本概念 Part 02"></a>TextMate 基本概念 Part 02</h2><hr>
<h3 id="begin-和-end"><a href="#begin-和-end" class="headerlink" title="begin 和 end"></a>begin 和 end</h3><p><code>begin</code> 和 <code>end</code>，顧名思義，分別就是起始與結束的意思，實際的用法與意思亦頗為相近，運用 <code>begin</code> 至 <code>end</code> 的語法規則，便可<strong>根據該所識別到的範圍實現更複雜的跨行場景</strong> <code>stage</code>。</p>
<p>來看看 TextMate 的 Java 語法文件的起始部分，你會看到這裏就是運用了上述的 <code>begin</code> 和 <code>end</code> 的規則，以下這部分的語法文件的目的是用於比對 Java 語法的套件 <code>package</code>。</p>
<p>例如在 Android 開發中經常使用的 Java 套件，如 <code>com.developer.applicationname</code>，就是一個套件例子。</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Java&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;scopeName&quot;</span><span class="punctuation">:</span><span class="string">&quot;source.java&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;patterns&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;begin&quot;</span><span class="punctuation">:</span><span class="string">&quot;\\b(package)\\b\\s*&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;beginCaptures&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;keyword.other.package.java&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;end&quot;</span><span class="punctuation">:</span><span class="string">&quot;\\s*(;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;endCaptures&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;1&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;punctuation.terminator.java&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.developer.applicationname;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="beginCaptures-和-endCaptures"><a href="#beginCaptures-和-endCaptures" class="headerlink" title="beginCaptures 和 endCaptures"></a>beginCaptures 和 endCaptures</h3><p>眼睛雪亮的你，或許注意到 <code>beginCaptures</code> 和 <code>endCaptures</code>，它們是<strong>用作分配不同的類別</strong>，以上面的編碼為例，<code>beginCaptures</code> 內的 <code>name</code> 是 <code>keyword.other.package.java</code>，而 <code>endCaptures</code> 內的 <code>name</code> 是 <code>punctuation.terminator.java</code>。</p>
<p>繼而，我們現在有兩個類別，<code>keyword.other.package.java</code> 和 <code>punctuation.terminator.java</code>，剛才提及，<code>keyword</code> 是父層級，<code>punctuatio</code>n 也是父層級，他們的子層級分別是 <code>other</code> 和 <code>terminator</code>, <code>keywor</code>d 的子子層級就是 <code>package</code>。</p>
<h2 id="TextMate-主題文件"><a href="#TextMate-主題文件" class="headerlink" title="TextMate 主題文件"></a>TextMate 主題文件</h2><p>不過，單憑實現 TextMate 語法是不能夠做出語法突顯的，剛才所說，<strong>語法突顯就是以顏色把分詞凸顯出來供用戶易於觀看</strong>，但是，所說的顏色是從哪裏而來的？原來就是靠我們的 TextMate 主題文件，一般以 <code>.tmTheme</code>, <code>.json</code>, 或 <code>.tmTheme.json</code> 作主題文件的通用格式。</p>
<p>主題文件支援 XML 和 JSON 格式。</p>
<p>例如我們想以 #ff0000（紅色） 突顯 <code>keyword.other.package.java</code>，#00ff00（綠色） 突顯 <code>punctuation.terminator.java</code>，做法如下：</p>
<div class="tabs" id="tab-source_code_format"><ul class="nav-tabs"><li class="tab active"><a class="#source_code_format-1">JSON</a></li><li class="tab"><a class="#source_code_format-2">XML</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code_format-1"><p>運用 JSON 格式：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Keyword - Package&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword.other.package.java&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ff0000&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Punctuation - Terminator&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;punctuation.terminator.java&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#00ff00&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code_format-2"><p>運用 XML 格式：</p>
<div class="highlight-container" data-rel="Xml"><figure class="iseeu highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>name<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>Keyword - Package<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>scope<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span></span><br><span class="line">        keyword.other.package.java</span><br><span class="line">    <span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>settings<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>foreground<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>#ff0000<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>name<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>Punctuation - Terminator<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>scope<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span></span><br><span class="line">        punctuation.terminator.java</span><br><span class="line">    <span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>settings<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">key</span>&gt;</span>foreground<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">string</span>&gt;</span>#00ff00<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<p>好了，教學就到此為些了，希望大家在本章學懂 TextMate 語法運用，下次再見。</p>
]]></content>
      <tags>
        <tag>Xml</tag>
        <tag>Json</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode 自訂程式碼片段</title>
    <url>//post/dev_vscode_snippet_tutorial.html</url>
    <content><![CDATA[<p>哈囉，歡迎來到我的網誌。</p>
<p>有沒有想過自己在編寫程式碼時，能夠借助自動完成選單來完成一整塊的程式碼？在 VSCode 軟件，它能夠支援自訂程式碼片段，使你能夠<strong>在輸入關鍵字的前綴後，便能插入一整塊程式碼！</strong>大大提升你編程的效率。</p>
<p>在這篇文章，我們將會學到如何新增自己的程式碼片段。</p>
<hr>
<h1 id="為編輯器進行設定"><a href="#為編輯器進行設定" class="headerlink" title="為編輯器進行設定"></a>為編輯器進行設定</h1><p>首先，為了<strong>避免所新增的程式碼片段無法透過自動完成選單中顯示</strong>，我們可以為編輯器直接啟用自訂程式碼選單片段。</p>
<p>按編輯器選單列的齒輪裏的設定，或者直接用快捷鍵 <kbd>⌘ Cmd</kbd> + <kbd>,
<p>把設定界面更換為以 JSON 格式開啟。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img1.png" alt="img1"></p>
<p>在 <code>settings.json</code> 進行以下設定：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;editor.tabCompletion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>如果你自己已經安裝一些同樣是附加程式碼片段的擴充插件，例如是 <code>Extension Pack for Java</code>，裏面包含附加程式碼片段，你可以透過編輯器設定把程式碼片段自動完成選單的權重提高。</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;editor.snippetSuggestions&quot;</span><span class="punctuation">:</span> <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="新增程式碼片段"><a href="#新增程式碼片段" class="headerlink" title="新增程式碼片段"></a>新增程式碼片段</h1><p>透過快捷鍵 <kbd>⇧ Shift</kbd> + <kbd>⌘ Cmd</kbd> + <kbd>P</kbd> 前往命令輸入界面。</p>
<p>然後在輸入欄中輸入 <code>snippet</code>，你會找到<kbd class="menu">程式碼片段：設定使用者程式碼片段</kbd> &#x2F; <kbd class="menu">Snippets: Configure User Snippets</kbd>，再按 <kbd>⏎ Enter</kbd>。</p>
<p>或者，<kbd class="menu">Code</kbd> &gt; <kbd class="menu">喜好設定</kbd> &gt; <kbd class="menu">設定使用者程式碼片段</kbd></p>
<p><img src="/post/dev_vscode_snippet_tutorial/img8.png" alt="img8"></p>
<p><img src="/post/dev_vscode_snippet_tutorial/img6.png" alt="img6"></p>
<hr>
<p>它會要你設定應用程式碼片段的特定語言，即是設定<strong>只能在特定的程式語言文件中使用裏面的程式碼片段</strong>。<br>或者，你要設定全域還是局部新增。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img7.png" alt="img7"></p>
<hr>
<p>即是你有三個選項，因應自己所需，選擇其一：</p>
<ol>
<li>設定應用程式碼片段的特定語言：只能在<strong>特定的程式語言文件</strong>中使用該程式碼片段。</li>
<li>為 “<code>[資料夾名稱]</code>“ 新增程式碼片段檔案：只能在<strong>目前的父資料夾</strong>才可以使用該程式碼片段。</li>
<li>新增全域程式碼片段檔案：<strong>所有檔案都可以使用</strong>該程式碼片段。</li>
</ol>
<p>另外，它會要求你輸入任意程式碼片段名稱。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>例如你想為 Java 語言新增自己一整套的程式碼片段，你可以把它命名為 <code>My Java Snippet</code>，總之就是隨你喜歡。</p>
</div>

<p>例如，現在我的父資料夾是 <code>hexo</code>，而且我要<strong>為自己的 Hexo 網誌的 Markdown 語法建立程式碼片段</strong>，所以我會選擇<strong>選項 2</strong>，並命名 <code>Blog components</code>，它會在這個資料夾新增 <code>.vscode</code> 資料夾，裏面再新增一個名為 <code>Blog components.code-snippets</code> 檔案。</p>
<p>檔案結構大概是這樣：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo/</span><br><span class="line">└── .vscode/</span><br><span class="line">    └── Blog-components.code-snippets</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="編寫程式碼片段"><a href="#編寫程式碼片段" class="headerlink" title="編寫程式碼片段"></a>編寫程式碼片段</h1><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>程式碼片段是用 JSON 語言編寫的。</p>
</div>

<p>在建立前，先來瞭解一下裏面的語法。</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Generate Java Entry Point&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;javaEntryPoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line marked">            <span class="string">&quot;public class $&#123;1:ClassName&#125; &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;   public static void main(String[] args) &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line marked">            <span class="string">&quot;       $&#123;2&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;   &#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Generate the entry point of Java.&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<p>當然，你或許會想到這個是一個生成 Java <strong>入口點</strong>的程式碼片段，但是，當中的設定是什麼意思呢？</p>
<hr>
<h2 id="語法解構"><a href="#語法解構" class="headerlink" title="語法解構"></a>語法解構</h2><p><code>&quot;Generate Java Entry Point&quot;</code> 是一個 JSON <strong>物件</strong>，它將會是程式碼片段其中一個片段，就是<strong>為該片段命名，並會在自動完成選單中該項目右方顯示這名稱</strong>。</p>
<p><code>scope</code> 是指定<strong>這個單一片段可以在哪些語法模式中使用</strong>，例如這裏設定了 java，就只能在 Java 語法文件使用這個單一片段。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>它是可以設定<strong>多個語法模式規限</strong>的，做法如下：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java, html, markdown&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>這樣的話，不僅 Java，還有 HTML 和 Markdown 語法文件都可以使用。</p>
</div>

<p><code>prefix</code> 是透過自動完成選單所召喚的該單一片段項目，例如你設定 <code>javaEntryPoint</code>，當你<strong>輸入這個前綴甚至逐漸完成輸入這個字，過程中會出現相關字類</strong>。</p>
<p>例如 Java 中的<strong>關鍵字</strong> <code>instanceof</code>，你<strong>毋須把這個字完全輸入，只需要輸入頭幾個字</strong>就會出現這個字，<code>prefix</code> 就是這個用法。</p>
<p><code>body</code> 就是單一片段所儲存的一整塊程式碼內容。</p>
<p><code>description</code> 純粹是為單一片段作簡單描述，可有可無。</p>
<h3 id="佔位符與定位點"><a href="#佔位符與定位點" class="headerlink" title="佔位符與定位點"></a>佔位符與定位點</h3><p>除了以上提及的語法，你還會看到 <code>$&#123;1:ClassName&#125;</code> 和 <code>$&#123;2&#125;</code>。</p>
<p>原來，我們可以利用這些佔位符，從而在程式碼片段插入後，把<strong>指標器能夠導向至佔位符的位置進行即時編輯</strong>。</p>
<p><code>$&#123;1:ClassName&#125;</code> 是一個佔位符，用來在插入該片段段可以即時編輯的部分，而這個 <code>ClassName</code> 將會是插入片段後的一個可見提示，這個名稱是任意命名的。</p>
<p>而當中的 <code>1</code> 就是一個用於<strong>為指標器辨識位置</strong>，可寫成 <code>$1</code> 或 <code>$&#123;1&#125;</code>。</p>
<p>如果要辨識指標器下一個位置，就要用 <code>$2</code> 或 <code>$&#123;2&#125;</code>，如此類推。</p>
<p>換句話說：</p>
<ol>
<li>如果你想指標器停留在 <code>body</code> 結構內<strong>最終位置</strong>，就要用 <code>$0</code>。</li>
<li>如果你想指標器停留在 <code>body</code> 結構內<strong>指定位置</strong>，就要用 <code>$1</code>。</li>
<li>如果你想指標器停留在 <code>body</code> 結構內<strong>指定位置</strong>，<strong>並要進行即時編輯</strong>，就要用 <code>$1&#123;佔位符名稱&#125;</code>。</li>
</ol>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>按鍵盤 <kbd>↹ Tab</kbd> 鍵可以導向下一個定位點的指標器位置。<br>按鍵盤 <kbd>⇧ Shift</kbd> + <kbd>↹ Tab</kbd> 鍵可以導向上一個定位點的指標器位置。</p>
</div>

<hr>
<h3 id="可選擇佔位符"><a href="#可選擇佔位符" class="headerlink" title="可選擇佔位符"></a>可選擇佔位符</h3><p>佔位符不只是有一個值，還可以儲存多個數值，例如，我想它儲存 Java <strong>數據類型</strong> <code>int</code>、<code>double</code>、<code>String</code> 這三個類型，做法如下：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;$&#123;1|int,double,String|&#125; value;&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></div>

<p>同樣，我們都要使用 <code>$&#123;&#125;</code> 語法把佔位符記寫，但不同的是，為了要表達多種選擇數值，我們要用 <kbd>|</kbd> 定義範圍，並用 <kbd>,</kbd> 分隔。</p>
<hr>
<h2 id="格式釐清"><a href="#格式釐清" class="headerlink" title="格式釐清"></a>格式釐清</h2><div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>程式碼片段區塊需要在 <code>{...}</code> 內編寫；往下新增程式碼片段，需要用 <kbd>,</kbd> 分隔。</p>
</div>


<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 由這裏開始新增第一個程式碼片段</span></span><br><span class="line">    <span class="comment">// 往下新增程式碼片段，需要用 &quot;,&quot; 分隔。</span></span><br><span class="line">    <span class="comment">// 如下：</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;Test 1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="comment">// 這裏分隔</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">&quot;Test 2&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<p>在這裏，簡單為語法和格式釐清一下：</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;程式碼片段名稱&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;程式語言&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;插入程式碼片段要輸入的關鍵字&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;程式碼片段內容&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;程式碼片段簡述&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>scope</code> 可以經以下步驟找到：</p>
<p><kbd class="menu">程式碼片段：設定使用者程式碼片段</kbd> &#x2F; <kbd class="menu">Snippets: Configure User Snippets</kbd>，再按 <kbd>⏎ Enter</kbd>。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img6.png" alt="img6"></p>
<p>滾動鼠標或按鍵盤的向下按鈕可以看更多程式語言名稱。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img7.png" alt="img7"></p>
</div>

<hr>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>例如，現在我要編寫一個簡單的 <code>for</code> 迴圈，做法如下。</p>
<div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;For loop&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java, c, cpp, csharp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fori&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;for ($&#123;3|int,double,short,float,long|&#125; i = 0; i &lt;= $&#123;1:range&#125;; i++) &#123;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;    $2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>當正在輸入 <code>fori</code> 時，會出現這個項目。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img2.png" alt="img2"></p>
<p>當插入程式碼片段後：</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img3.png" alt="img3"></p>
<hr>
<h1 id="使用-snippet-generator"><a href="#使用-snippet-generator" class="headerlink" title="使用 snippet generator"></a>使用 snippet generator</h1><p>如果你覺得編寫 JSON，要瞭解和使用語法有點吃力，你可以用 <a href="https://snippet-generator.app" target="_blank">snippet generator</a>，這個是一個程式碼片段線上生成器，它支援 VSCode、Sublime Text 和 Atom 這三個軟件。</p>
<p><img src="/post/dev_vscode_snippet_tutorial/img4.png" alt="img4"></p>
<p>玩法一樣，不過透過圖形用戶界面簡化了編寫程序，提供了 <code>Description</code>、<code>Tab trigger</code> 和 <code>Snippet</code> 輸入欄。</p>
<p><code>Tab trigger</code> 就是 <code>prefix</code> 那部分。<br><code>Snippet</code> 就是 <code>body</code> 那部分。</p>
<hr>
<p><img src="/post/dev_vscode_snippet_tutorial/img5.png" alt="img5"></p>
<p>右邊可以看到 JSON 格式的程式碼顯示，如果你選其他編輯器，則顯示其他程式語言的程式碼。</p>
<p>點擊 <code>Copy snippet</code> 便可以把程式碼複製貼上使用。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><div class="highlight-container" data-rel="Json"><figure class="iseeu highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 在此處貼上</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div></div>

<hr>
<p>更多關於使用程式碼片段詳見 <a href="https://code.visualstudio.com/docs/editor/userdefinedsnippets" target="_blank">官方文案</a>。</p>
<p>好了，就是這樣了，相信你們能夠透過使用自訂程式碼片段把編程的效率提升，這篇是今年最後一篇文章了，我們下年再見。</p>
</kbd></p>]]></content>
  </entry>
  <entry>
    <title>編寫 Python 並建立 Discord 機器人</title>
    <url>//post/discord_bot_dev_create_bot.html</url>
    <content><![CDATA[<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>此文案是從我的 Gitbook 搬運過來的，現在它不再被使用。</p>
</div>

<p>Discord 機器人的功能繁多，往往能夠令到伺服器變得多元化。人家能夠做出如此強大的機器人，你有沒有想到，你也可以編寫自己的 Discord 機器人！</p>
<p>在本教學，你將會學會怎樣使用手機，編寫 Python 以完成建立簡單 Discord 機器人程序。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>電腦用戶亦可以此作參考，因為其實做法差不多（只是在另一操作系統而已）。</p>
</div>

<hr>
<h1 id="第-1-部分：建立機器人"><a href="#第-1-部分：建立機器人" class="headerlink" title="第 1 部分：建立機器人"></a>第 1 部分：建立機器人</h1><p>首先，先到 <a class="link" href="https://discord.com/developers/applications">開發傳送門 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 從左欄的選單中前往 <code>Applications</code> 頁面中，點擊右上方的 <code>New Application</code> 按鈕以建立機器人，為機器人命名，再按 <code>Create</code>。</p>
<p>前往所建立機器人的頁面後，點擊於左欄的 <code>Bot</code>，找出 <code>Build-A-Bot</code> 標題之部分內的 <code>TOKEN</code> ，並點擊 <code>Copy</code> 按鈕把它複製，並保存於稍後 第 2 部分 使用。</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>如果你遺失了原來的 <code>TOKEN</code>，可以點擊 <code>Reset Token</code> 以獲取全新的 TOKEN。</p>
</div>

<p>接着，你要預備新建一個資料夾，用以貯存機器人的程序檔案，如命名檔案為 <code>bot.py</code>，並把其放置於 <code>/storage/emulated/0/Test/</code> 內，當然，你亦可選擇其他路徑和現有資料夾並把它貯存。</p>
<hr>
<h1 id="第-2-部分：編寫程序"><a href="#第-2-部分：編寫程序" class="headerlink" title="第 2 部分：編寫程序"></a>第 2 部分：編寫程序</h1><p>要考慮機器人的實際運作，全都倚賴我們怎樣為它編程，在這個教學，我們會利用 <code>Python</code> 作為用於編寫機器人的程式語言。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>編寫程序需要使用文字編輯軟件或整合開發環境軟件（IDE），請先自行預備，方能繼續完成本部分之教學。</p>
</div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>電腦用戶可使用 Atom、Visual Studio Code 等軟件； 手機用戶可使用 Acode、QuickEdit 等應用程序。</p>
</div>

<p>首先，你需要 <code>import</code> 一些的資源庫，用以讓電腦能夠通過所匯入的資源庫，根據程式，執行機器人。 現在要做的是 Discord 機器人，所以我們必先要匯入 <code>discord</code> 庫。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> discord</span><br></pre></td></tr></table></figure></div>

<p>另外，亦需要匯入 <code>asyncio</code> 庫，這是利用 <code>Python</code> 較新版本的語法使用。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncio</span><br></pre></td></tr></table></figure></div>

<p>好了，當我們成功匯入了 <code>discord</code> 庫後，便可藉這個資源庫匯入與 <code>discord</code> 相關的次資源庫了，例如我們經常性使用機器人執行指令，就要匯入 <code>commands</code> 庫。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> discord.ext <span class="keyword">import</span> commands</span><br></pre></td></tr></table></figure></div>

<p>完成基礎的匯入程序後，是時候為機器人編寫一些初始化的變量了，如定義 <code>token</code>、<code>client</code> 這些基本設定。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>變量名稱只是名稱，可以隨意修改的，不一定是沿用這些名稱，如 <code>client</code> 可修改成 <code>bot</code>。</p>
</div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>請謹記先完成 第 1 部分 之教學，再繼續完成本部分教學。</p>
</div>

<hr>
<h2 id="準備事件"><a href="#準備事件" class="headerlink" title="準備事件"></a>準備事件</h2><p>準備事件就是啟動機器人時，它準備所執行的事件，在 Python，我們可以使用 <code>discord</code> 設有的 <code>on_ready()</code> 函數完成，例如，我們想機器人一旦準備時，便會輸出「Hello World」字句。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@client.event</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">on_ready</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>print()</code> 是 Python 的內置函數，用以輸出字符或字串。</p>
</div>

<hr>
<h2 id="指令執行事件"><a href="#指令執行事件" class="headerlink" title="指令執行事件"></a>指令執行事件</h2><p>單單只是準備事件是不足夠的，因為這還沒有發揮機器人最核心的功能，這亦反映出為何機器人往往多麼的強大，就是因為實現指令的所在。剛剛我們匯入了 <code>commands</code> 庫，現在它大派用場了！</p>
<p>可是，在編寫指令的程序前，我們必先要考慮輸入指令時的前綴，如輸入 <code>/exit</code> 是一個執行離開的指令，而當中的「&#x2F;」便是指令的前綴。</p>
<p>那麼，若然我們想實現前綴呢，便要修改以下剛才定義 <code>client</code> 的編碼，例如我們就以「&#x2F;」為例吧，當然，你喜歡裏面的前綴是什麼，都是可以的。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">client = commands.Bot(command_prefix = <span class="string">&quot;/&quot;</span>, intents = intents)</span><br></pre></td></tr></table></figure></div>

<p>那麼，弄好指令的前綴了，我們可以編寫指令了嗎？基本上是可以的，但是，我們必先瞭解一下指令內的預設參數，因為 Python 的 Discord 機器人所實現的指令，是必需至少擁有一個參數，而這個參數就是 <code>ctx</code>。</p>
<p>好了，所以如果我們輸入 <code>/hello</code> 指令後，機器人便傳回「Hello!」訊息，應該怎麼辦呢。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@client.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">ctx</span>):</span><br><span class="line">    <span class="keyword">await</span> ctx.send(<span class="string">&quot;Hello!&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p><code>async</code> 和 <code>await</code> 均是 Python 較新版本的語法，請確定所安裝的 Python 版本為 3.5 或以上。</p>
</div>

<hr>
<h2 id="啟動機器人"><a href="#啟動機器人" class="headerlink" title="啟動機器人"></a>啟動機器人</h2><p>當你發現，你已經編寫好準備事件和指令執行事件，卻發現到機器人沒有順利把程序運行完善，或許你正在愁思程序上編寫的錯誤，但事實上，你還沒有為機器人編寫啟動的程序。要解決這問題，很簡單，只需要編寫 <code>run()</code> 函數便可以了。</p>
<hr>
<h1 id="第-3-部分：執行機器人"><a href="#第-3-部分：執行機器人" class="headerlink" title="第 3 部分：執行機器人"></a>第 3 部分：執行機器人</h1><p>我們會使用 Termux 作為啟動機器人的終端機。 若使用從 Play 商店下載的 Termux 版本，或許會因為版本過舊，而發生匯入上的錯誤，以導致無法順利依照本部分之教學來完成執行機器人。我們建議你從 fdroid 網頁下載 Termux 的較新版本。</p>
<p>首先，因為安裝 <code>discord</code> 的 <code>pip</code> 是受到 SSL 加密協定的阻撓，所以我們必先要安裝 <code>openssl</code>，方可安裝 <code>python</code> 和 <code>discord</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pkg install openssl</span><br><span class="line">pkg install python</span><br><span class="line">pip install discord</span><br></pre></td></tr></table></figure></div>

<p>最後，便可以根據機器人的檔案路徑來啟動它了，例如檔案路徑為 <code>/storage/emulated/0/Test/bot.py</code>，所需要做的是：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> storage/shared/Test/</span><br><span class="line">python bot.py</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>cd</code> 為 change directory，改變現時路徑，即前往哪裏。<br><code>shared</code> 為內部貯存空間，簡化了 <code>/emulated/0</code>。<br><code>python</code> 用以執行 Python 程序。</p>
</div>

<hr>
<p>教學到這了，再見。</p>
]]></content>
      <categories>
        <category>Discord 開發</category>
      </categories>
      <tags>
        <tag>終端機指令</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Discord 互動式按鈕</title>
    <url>//post/discord_bot_dev_interactive_button.html</url>
    <content><![CDATA[<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>此文案是從我的 Gitbook 搬運過來的，現在它不再被使用。</p>
</div>

<p>最近 Discord 推出了一個新功能，就是互動式按鈕，就是一個<strong>根據機器人所發的訊息後，所執行的相關操作</strong>，現在我們可以藉 <code>discord.py</code> 實現互動式按鈕了。</p>
<hr>
<h1 id="安裝-discord-components"><a href="#安裝-discord-components" class="headerlink" title="安裝 discord-components"></a>安裝 discord-components</h1><p>首先，在編寫程式之前，我們需要安裝並更新 <code>discord component</code> 的 <code>pip</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install --upgrade discord-components</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>需要 Python 版本為 3.6 或以上，方可安裝。</p>
</div>

<hr>
<h1 id="為程序匯入資源庫"><a href="#為程序匯入資源庫" class="headerlink" title="為程序匯入資源庫"></a>為程序匯入資源庫</h1><p>現在，我們需要在程式中匯入數個資源庫，包括 <code>DiscordComponents</code>、<code>ComponentsBot</code> 以及 <code>Button</code>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> discord_components <span class="keyword">import</span> DiscordComponents, ComponentsBot, Button</span><br></pre></td></tr></table></figure></div>
<hr>
<h1 id="執行-DiscordComponents-函數"><a href="#執行-DiscordComponents-函數" class="headerlink" title="執行 DiscordComponents() 函數"></a>執行 DiscordComponents() 函數</h1><p>匯入完成後，便要呼喚執行 <code>DiscordComponents()</code> 函數，用以初始化 <code>Discord</code> 元件。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">client = commands.Bot(command_prefix = <span class="string">&quot;/&quot;</span>, intents = intents)</span><br><span class="line">DiscordComponents(client)</span><br></pre></td></tr></table></figure></div>
<hr>
<h1 id="實現互動式按鈕"><a href="#實現互動式按鈕" class="headerlink" title="實現互動式按鈕"></a>實現互動式按鈕</h1><hr>
<h2 id="構建互動式按鈕模型"><a href="#構建互動式按鈕模型" class="headerlink" title="構建互動式按鈕模型"></a>構建互動式按鈕模型</h2><p>要把互動式按鈕顯示出來，需要用到 <code>components</code> 內的 <code>Button</code>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">components = [</span><br><span class="line">    Button(label = <span class="string">&quot;xxx&quot;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></div>

<p>例如我們想輸入 <code>/send</code> 指令後，機器人會發送一段訊息和一個互動式按鈕。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@client.command()</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">send</span>(<span class="params">ctx</span>):</span><br><span class="line">    <span class="keyword">await</span> ctx.send(</span><br><span class="line">        <span class="string">&quot;Hello World&quot;</span>,</span><br><span class="line">        components = [</span><br><span class="line">            Button(label = <span class="string">&quot;Click me&quot;</span>, custom_id = <span class="string">&quot;btn1&quot;</span>)</span><br><span class="line">        ]</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>label</code> 為互動式按鈕所顯示的文字。<br><code>custom_id</code> 為互動式按鈕的編碼。</p>
</div>

<hr>
<h2 id="編寫互動式按鈕點擊事件"><a href="#編寫互動式按鈕點擊事件" class="headerlink" title="編寫互動式按鈕點擊事件"></a>編寫互動式按鈕點擊事件</h2><p>好了，互動式按鈕出來了，可是這沒有任何互動啊，這樣我們要編寫互動的程序，<strong>承接以上編碼，繼續編寫</strong>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">components = [</span><br><span class="line">    Button(label = <span class="string">&quot;Click me&quot;</span>, custom_id = <span class="string">&quot;btn1&quot;</span>)</span><br><span class="line">]</span><br><span class="line">interaction = <span class="keyword">await</span> client.wait_for(<span class="string">&quot;button_click&quot;</span>, check = <span class="keyword">lambda</span> i : i.custom_id == <span class="string">&quot;btn1&quot;</span>)</span><br><span class="line"><span class="keyword">await</span> interaction.send(content = <span class="string">&quot;Clicked!&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>wait_for</code> 是接受 <code>check</code> 參數，是<strong>等待執行點擊按鈕後的事件</strong>，而這裏的 <code>check</code>，是使用了 <code>lambda</code> 方式實現。<br><code>content</code> 是點擊互動式按鈕後所顯示的訊息。</p>
</div>

<hr>
<p>那就大功告成了。</p>
]]></content>
      <categories>
        <category>Discord 開發</category>
      </categories>
      <tags>
        <tag>終端機指令</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Discord 斜線指令</title>
    <url>//post/discord_bot_dev_slash_command.html</url>
    <content><![CDATA[<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>此文案是從我的 Gitbook 搬運過來的，現在它不再被使用。</p>
</div>

<p>斜線指令（Slash commands）是近期 Discord 的大勢所趨，所謂的斜線指令，並<strong>不是指一般輸入如 <code>/start</code> 等指令，而是自動完成選單</strong>。</p>
<hr>
<h1 id="安裝-slash-command"><a href="#安裝-slash-command" class="headerlink" title="安裝 slash-command"></a>安裝 slash-command</h1><p>在編寫斜線指令前，我們必須要安裝 <code>slash-command</code>。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">pip install discord-py-slash-command</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>需要 Python 版本為 3.6 或以上，方可安裝。</p>
</div>

<hr>
<h1 id="為程序匯入資源庫"><a href="#為程序匯入資源庫" class="headerlink" title="為程序匯入資源庫"></a>為程序匯入資源庫</h1><p>要實現斜線指令，我們主要需要匯入 <code>SlashCommand</code> 和 <code>SlashContext</code> 資源庫。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> discord <span class="keyword">import</span> Client, Intents, Embed</span><br><span class="line"><span class="keyword">from</span> discord_slash <span class="keyword">import</span> SlashCommand, SlashContext</span><br></pre></td></tr></table></figure></div>

<p>匯入好了，現在就可以編寫斜線指令了。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">client = commands.Bot(intents = intents)</span><br><span class="line">slash = SlashCommand(client, sync_commands = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure></div>

<p>我們試試斜線指令的強大功能吧。</p>
<hr>
<h1 id="實現斜線指令"><a href="#實現斜線指令" class="headerlink" title="實現斜線指令"></a>實現斜線指令</h1><hr>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>例如，我們實現 <code>/hello</code> 指令，當我們輸入這指令，機器人便會發出嵌入式訊息 <code>Embed</code>。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">@slash.slash(<span class="params">description = <span class="string">&quot;Say Hello&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">ctx: SlashContext</span>):</span><br><span class="line">    e = Embed(title = <span class="string">&quot;Hello&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> ctx.send(embed = e)</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>不是用 <code>@client.command()</code> 而是要用 <code>@slash.slash()</code>。參數 <code>ctx</code> 需要以 <code>SlashContext</code> 方式定義。</p>
</div>

<hr>
<h2 id="自動完成參數"><a href="#自動完成參數" class="headerlink" title="自動完成參數"></a>自動完成參數</h2><p><code>/hello</code> 指令只是純粹的輸出訊息，要不我們試試<strong>自動完成參數</strong>的功能？假設我們要編寫消除訊息的指令。</p>
<p>指令的概念大概是這樣的：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">消除訊息(20);</span><br></pre></td></tr></table></figure></div>

<p>利用<strong>操作碼</strong>和<strong>操作數</strong>的概念，完成消除訊息指令的編寫程序。</p>
<blockquote>
<p>操作碼：消除訊息()<br>操作數：20</p>
</blockquote>
<p>所以會編寫這樣子：</p>
<div class="highlight-container" data-rel="Py"><figure class="iseeu highlight py"><table><tr><td class="code"><pre><span class="line"><span class="meta">@slash.slash(<span class="params">description = <span class="string">&quot;Clear Messages&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">clear</span>(<span class="params">ctx: SlashContext, amount = <span class="number">100</span></span>):</span><br><span class="line">    <span class="keyword">await</span> ctx.channel_purge(limit = amount)</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>amount</code> 所貯存的值最終賦值於 <code>limit</code> 裏，所以可理解為限制數量。<br>如 <code>amount = 10</code>，則限制最多只可消除 10 次訊息。</p>
</div>

<p>現在我們就試試輸入 <code>/clear</code> 找出選單內的指令，完成自動完成程序吧。</p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>在沒有編寫斜線指令的機器人前，若機器人仍然在伺服器，即使編寫了斜線指令，亦<strong>不會立即更新程序編碼</strong>，你需要把機器人從伺服器中移除並踢出，方可更新斜線指令。</p>
<p>當你為斜線指令實現了新的指令，都不會因此而更新，斜線指令會<strong>每一小時自動更新一次</strong>，所以請確保機器人<strong>長期處於啟動的狀態</strong>，方可達到定時更新的效果。</p>
</div>

<hr>
<p>那就大功告成了。</p>
]]></content>
      <categories>
        <category>Discord 開發</category>
      </categories>
      <tags>
        <tag>終端機指令</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>運用 CodeMirror 初建簡單線上代碼編輯器</title>
    <url>//post/web_dev_codemirror_online_editor_tutorial.html</url>
    <content><![CDATA[<p>歡迎來到 BlueWhaleYT 個人網誌。<br>今天，我們會一起動手利用 CodeMirror 建立一個簡單的編碼編輯器。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>在開始之前，你需要具備 HTML, CSS 及 JavaScript 基礎知識。</p>
</div>

<hr>
<h1 id="什麼是-CodeMirror？"><a href="#什麼是-CodeMirror？" class="headerlink" title="什麼是 CodeMirror？"></a>什麼是 CodeMirror？</h1><p>CodeMirror 是一個利用 JavaScript 編寫而提供<strong>支援語法突顯的編輯器的強大函式庫</strong>，你可以用它來建立一個<strong>輕量級而附有許多程式支援及語法突顯</strong>的編輯器，另外，為了進階 CodeMirror 的功能，它<strong>支援匯入附加插件用以擴展編輯器現有功能</strong>，玩法繁多。</p>
<hr>
<h1 id="為什麼要使用-CodeMirror？"><a href="#為什麼要使用-CodeMirror？" class="headerlink" title="為什麼要使用 CodeMirror？"></a>為什麼要使用 CodeMirror？</h1><p>或許你曾經在這網誌瀏覽一篇文章關於 Highlight.js，而對於選擇 Highlight.js 還是 CodeMirror 而產生疑問和苦惱對吧，事實上，Highlight.js 最大問題就是<strong>不允許用戶作任何的編輯</strong>，儘管你能夠以 <code>contenteditable</code> 或其他 JavaScript 方式強硬實現，但效果往往並不理想，尤其這個硬核實現<strong>不兼容行號顯示延伸模組</strong>，而且會讓 Highlight.js 編碼器<strong>整體表現不佳</strong>，因此，我們會採用 CodeMirror 助我們完成這個傑作。</p>
<blockquote>
<p>我認為兩者主要不同之處在於:<br>Highlight.js: 唯讀<br>CodeMirror: 可讀可寫</p>
</blockquote>
<hr>
<h1 id="開始使用"><a href="#開始使用" class="headerlink" title="開始使用"></a>開始使用</h1><p>首先，我們需要匯入 CodeMirror 至專案，我們會採用目前最新版本 <code>v6.65.7</code> 的函式庫。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CSS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.css&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- JavaScript --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="定義及初始化-CodeMirror"><a href="#定義及初始化-CodeMirror" class="headerlink" title="定義及初始化 CodeMirror"></a>定義及初始化 CodeMirror</h1><p>我們需要於 HTML 文件定義一個 <code>textarea</code>，要注意的是這個元素要賦有一個 id <code>code</code>，從而能夠把 CodeMirror 取代原來的 <code>textarea</code>。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>在完成定義 CodeMirror 元件後，我們需要以 JavaScript 形式把其初始化。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> target = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(target), &#123;</span><br><span class="line">    <span class="comment">// settings</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="設定編輯器顯示目前行"><a href="#設定編輯器顯示目前行" class="headerlink" title="設定編輯器顯示目前行"></a>設定編輯器顯示目前行</h1><p>既然要編寫一個編輯器，那當然顯示目前行是不可或缺的，這樣你才容易知道你現在在哪一行編寫。</p>
<p>我們會用到 <strong>active-line</strong> 延伸模組，在 HTML 文件匯入這個 script。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/selection/active-line.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>稍後會用到。</p>
<hr>
<h1 id="設定編輯器基本外觀"><a href="#設定編輯器基本外觀" class="headerlink" title="設定編輯器基本外觀"></a>設定編輯器基本外觀</h1><p>現在我們會先為編輯器進入美化工程。在這教學，我們會用 Material Palenight 這個主題，當然，你可以用其他你喜歡的主題。</p>
<p>如果你要用這個主題，就在 HTML 文件匯入這個樣式文件。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/material-palenight.css&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>我們會用 JetBrains Mono 字體，同樣地，你可以用其他字體。</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.cdnfonts.com/css/jetbrains-mono&#x27;</span>);</span><br></pre></td></tr></table></figure></div>

<p>這些數值將會是常用的，所以我們會設定 CSS 變量。</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--black</span>: <span class="number">#292d3e</span>;</span><br><span class="line">    <span class="attr">--black-alt</span>: <span class="number">#1b1f2b</span>;</span><br><span class="line">    <span class="attr">--light-grey</span>: <span class="number">#a6accd</span>;</span><br><span class="line">    <span class="attr">--accent</span>: <span class="number">#ab47bc</span>;</span><br><span class="line">    <span class="attr">--rounded</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attr">--code-font</span>: <span class="string">&quot;JetBrains Mono&quot;</span>, monospace;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>使用方法：<code>var(...)</code></p>
<p>例如：</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--black);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>

<hr>
<h2 id="設定基本-CSS"><a href="#設定基本-CSS" class="headerlink" title="設定基本 CSS"></a>設定基本 CSS</h2><div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--code-font) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--light-grey) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.CodeMirror-scroll</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.CodeMirror-linenumber</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--code-font) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="初始化編輯器"><a href="#初始化編輯器" class="headerlink" title="初始化編輯器"></a>初始化編輯器</h2><p>設定編輯器主題為 <code>material-palenight</code>（這個是<strong>根據檔案名稱</strong>）、啟用行號顯示和設定編輯器寛度 <code>100%</code> 和 高度 <code>70vh</code>。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    <span class="attr">theme</span>: <span class="string">&#x27;material-palenight&#x27;</span>,</span><br><span class="line">    <span class="attr">lineNumbers</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">styleActiveLine</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">editor.<span class="title function_">setSize</span>(<span class="string">&quot;100%&quot;</span>, <span class="string">&quot;70vh&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="設定編輯器語法模式"><a href="#設定編輯器語法模式" class="headerlink" title="設定編輯器語法模式"></a>設定編輯器語法模式</h1><p>在這教學我們會以 Java 語言為編輯器的語法模式，如果不想要 Java，你可以用其他，但要留意往後 <code>mode</code> 的值。我建議你先跟隨教學用 Java 作為語法模式。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/clike/clike.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>在 CodeMirror 的程式裏，Java 是屬於 C 語言的語法文件，它的模塊是 <code>c-like</code>。</p>
</div>

<p>設定 Java 為編輯器語法模式，要留意的是模式並不是 <code>java</code>，而是 <code>text/x-java</code>。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;text/x-java&quot;</span>,</span><br><span class="line">    <span class="attr">theme</span>: <span class="string">&#x27;material-palenight&#x27;</span>,</span><br><span class="line">    <span class="attr">lineNumbers</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">styleActiveLine</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">editor.<span class="title function_">setSize</span>(<span class="string">&quot;100%&quot;</span>, <span class="string">&quot;70vh&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="覆寫編輯器目前行-CSS"><a href="#覆寫編輯器目前行-CSS" class="headerlink" title="覆寫編輯器目前行 CSS"></a>覆寫編輯器目前行 CSS</h1><p>把這行 CSS 刪掉。</p>
<div class="highlight-container" data-rel="Diff"><figure class="iseeu highlight diff"><table><tr><td class="code"><pre><span class="line">pre &#123;</span><br><span class="line"><span class="deletion">-    background: var(--black) !important;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>加上這行 CSS：</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.CodeMirror-activeline-background</span>, <span class="selector-class">.CodeMirror-activeline-gutter</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black-alt) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="建立「載入模板」按鈕"><a href="#建立「載入模板」按鈕" class="headerlink" title="建立「載入模板」按鈕"></a>建立「載入模板」按鈕</h1><blockquote>
<p>這個按鈕純粹是用來讓我們開發和偵錯時用的，就是插入一堆編碼檢查語法突顯，不過這按鈕最後都留着。</p>
</blockquote>
<p>定義一個 <code>.btnset</code> 類別的 <code>div</code> 和一個 <code>button</code>，因為稍後會弄多一個按鈕，所以預備 <code>.btnset</code> 的 <code>div</code> 區塊。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btnset&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Template<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>設定 <code>.btnset</code> 和 <code>btn</code> 的 CSS。</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.btnset</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--rounded);</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black-alt);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--light-grey);</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--accent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>那現在我們的 <code>button</code> 要點擊事件，所以要加上 <code>onclick</code> 的 <code>genTemplate()</code> 函數。這個函數，我們稍後會編寫。</p>
<div class="highlight-container" data-rel="Diff"><figure class="iseeu highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-&lt;button class=&quot;btn&quot;&gt;Template&lt;/button&gt;</span></span><br><span class="line"><span class="addition">+&lt;button onclick=&quot;genTemplate()&quot; class=&quot;btn&quot;&gt;Template&lt;/button&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>在你的<strong>網頁資料夾中建立一個新檔案</strong>名為 <code>Main.java</code>，這個是一個<strong>用於載入模板內容</strong>。</p>
<p>把以下 Java 編碼複製並貼上至該檔案。</p>
<div class="highlight-container" data-rel="Java"><figure class="iseeu highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>現在就要編寫 <code>genTemplate()</code> 函數，當點擊按鈕時，就會獲取指定檔案，即是 <code>Main.java</code> 之內容。</p>
<p>我們會用到 <code>XMLHttpRequest</code> 來實現這程式，我們可以透過 <code>client.responseText</code> 顯示找到資料後的內容。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">genTemplate</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> client = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    client.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;Main.java&#x27;</span>);</span><br><span class="line">    client.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        editor.<span class="title function_">setValue</span>(client.<span class="property">responseText</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    client.<span class="title function_">send</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="用-localStorage-編寫寫入和讀取數據的函數"><a href="#用-localStorage-編寫寫入和讀取數據的函數" class="headerlink" title="用 localStorage 編寫寫入和讀取數據的函數"></a>用 localStorage 編寫寫入和讀取數據的函數</h1><div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">lsSave</span>(<span class="params">data, target</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">typeof</span>(<span class="title class_">Storage</span>) !== <span class="string">&quot;undefined&quot;</span>)&#123;  </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line marked">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(data, target);</span><br><span class="line">        &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">lsRead</span>(<span class="params">data, target</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">typeof</span>(<span class="title class_">Storage</span>) !== <span class="string">&quot;undefined&quot;</span>)&#123;</span><br><span class="line marked">        target.<span class="title function_">setValue</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(data));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="建立「儲存」按鈕"><a href="#建立「儲存」按鈕" class="headerlink" title="建立「儲存」按鈕"></a>建立「儲存」按鈕</h1><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;save()&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Save<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>調用 <code>lsSave()</code> 函數實現儲存資料的程式。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">save</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">lsSave</span>(<span class="string">&quot;codeData&quot;</span>, editor.<span class="title function_">getValue</span>());</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;Your data is saved.&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="載入網頁後讀取已儲存數據"><a href="#載入網頁後讀取已儲存數據" class="headerlink" title="載入網頁後讀取已儲存數據"></a>載入網頁後讀取已儲存數據</h1><p>調用 <code>lsRead()</code> 函數實現讀取資料的程式。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">read</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">lsRead</span>(<span class="string">&quot;codeData&quot;</span>, editor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>在初始化編輯器後，讀取已儲存數據。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;text/x-java&quot;</span>,</span><br><span class="line">    <span class="attr">theme</span>: <span class="string">&#x27;material-palenight&#x27;</span>,</span><br><span class="line">    <span class="attr">lineNumbers</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">styleActiveLine</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">editor.<span class="title function_">setSize</span>(<span class="string">&quot;100%&quot;</span>, <span class="string">&quot;70vh&quot;</span>);</span><br><span class="line marked"><span class="title function_">read</span>();</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="建立「清空」按鈕"><a href="#建立「清空」按鈕" class="headerlink" title="建立「清空」按鈕"></a>建立「清空」按鈕</h1><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;clearAll()&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Clear<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clearAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">    editor.<span class="title function_">setValue</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>詢問用戶是否要清空編輯器輸入的數據，如確定，則清空。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clearAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (editor.<span class="title function_">getValue</span>() != <span class="literal">null</span>) &#123;</span><br><span class="line marked">        <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&quot;Are you sure you want to clear all?&quot;</span>)) &#123;</span><br><span class="line marked">            editor.<span class="title function_">setValue</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line marked">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>在清除數據後自動儲存。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clearAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (editor.<span class="title function_">getValue</span>() != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&quot;Are you sure you want to clear all?&quot;</span>)) &#123;</span><br><span class="line">            editor.<span class="title function_">setValue</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line marked">            <span class="title function_">lsSave</span>(<span class="string">&quot;codeData&quot;</span>, editor.<span class="title function_">getValue</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="設定多種語法模式"><a href="#設定多種語法模式" class="headerlink" title="設定多種語法模式"></a>設定多種語法模式</h1><p>這裏會簡單說一下怎樣實現多種語法模式的編輯器，例如我會新增 JavaScript 這個模式，除了 Java，用戶還可以選擇 JavaScript 模式編寫編碼。</p>
<p>如果要實現 JavaScript 模式，就要匯入這個 <code>script</code>。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/javascript/javascript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>在 HTML 定義一個語言選擇器，即是下拉式選單。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Language Menu --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;form1&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;language&quot;</span> <span class="attr">id</span>=<span class="string">&quot;language&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;getLang();&quot;</span>&gt;</span></span><br><span class="line marked">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;text/x-java&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line marked">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>&lt;option&gt;</code> 標示裏的 <code>value</code> 設定的值是供電腦程式檢查的，我們會利用這個下拉式選單內項目的值為編輯器設定相應語法模式。</p>
</div>

<p>設定基本的 CSS</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">form</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">select &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="built_in">var</span>(--rounded);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black-alt);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--light-grey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>設定編輯器預設使用的語法模式，這個是函數，稍後會調用。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">setDefaultLang</span>(<span class="params"></span>) &#123;</span><br><span class="line">    editor.<span class="title function_">setOption</span>(<span class="string">&quot;mode&quot;</span>, <span class="string">&quot;text/x-java&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>編寫獲取語法模式的函數，已經在 <code>select</code> 的 <code>onchange</code> 事件調用。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getLang</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> language = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#language&quot;</span>).<span class="property">value</span>;</span><br><span class="line">    editor.<span class="title function_">setOption</span>(<span class="string">&quot;mode&quot;</span>, language);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>編輯器初始化後調用 <code>setDefaultLang()</code> 函數，並移除 <code>mode</code> 設定。</p>
<div class="highlight-container" data-rel="Diff"><figure class="iseeu highlight diff"><table><tr><td class="code"><pre><span class="line">var editor = CodeMirror.fromTextArea(document.getElementById(&quot;code&quot;), &#123;</span><br><span class="line"><span class="deletion">-    mode: language,</span></span><br><span class="line">    theme: &#x27;material-palenight&#x27;,</span><br><span class="line">    lineNumbers: true,</span><br><span class="line">    styleActiveLine: true</span><br><span class="line">&#125;);</span><br><span class="line"><span class="addition">+setDefaultLang();</span></span><br><span class="line">editor.setSize(&quot;100%&quot;, &quot;70vh&quot;);</span><br><span class="line">read();</span><br></pre></td></tr></table></figure></div>
<hr>
<h1 id="實現編輯器進階功能"><a href="#實現編輯器進階功能" class="headerlink" title="實現編輯器進階功能"></a>實現編輯器進階功能</h1><p>這部分會教你用一些延伸模組從而擴充你的編輯器功能。</p>
<hr>
<h2 id="程式碼摺疊-foldcode"><a href="#程式碼摺疊-foldcode" class="headerlink" title="程式碼摺疊 - foldcode"></a>程式碼摺疊 - foldcode</h2><p>你需要在 HTML 文件匯入以下樣式文件和函式庫。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldgutter.min.css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/brace-fold.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldcode.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldgutter.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>為編輯器設定 <code>folderGutter: true</code> 和 <code>gutters: [&quot;CodeMirror-linenumbers&quot;, &quot;CodeMirror-foldgutter&quot;]</code>。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    ...</span><br><span class="line marked">    <span class="attr">foldGutter</span>: <span class="literal">true</span>,</span><br><span class="line marked">    <span class="attr">gutters</span>: [<span class="string">&quot;CodeMirror-linenumbers&quot;</span>, <span class="string">&quot;CodeMirror-foldgutter&quot;</span>]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="程式語法分析-lint"><a href="#程式語法分析-lint" class="headerlink" title="程式語法分析 - lint"></a>程式語法分析 - lint</h2><p>這裏會實現 JavaScript 語法分析。</p>
<p>你需要在 HTML 文件匯入以下樣式文件和函式庫。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.min.css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JavaScript 語法分析 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/javascript-lint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/jshint@2.13.2/dist/jshint.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<p>為編輯器設定 <code>gutters: [&quot;CodeMirror-lint-markers&quot;]</code>。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    ...</span><br><span class="line marked">    <span class="attr">gutters</span>: [<span class="string">&quot;CodeMirror-lint-markers&quot;</span>],</span><br><span class="line marked">    <span class="attr">lint</span>: &#123;<span class="attr">options</span>: &#123;<span class="attr">esversion</span>: <span class="number">2021</span>&#125;&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>要注意的是有些程式語法模式的 <code>lint</code> 值是設定為 <code>true</code>，如 <code>CSS</code>、<code>JSON</code>。</p>
</div>

<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Lint */</span></span><br><span class="line"><span class="selector-class">.CodeMirror-lint-tooltip</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--code-font);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black-alt);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--light-grey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="自動完成選單-showhint"><a href="#自動完成選單-showhint" class="headerlink" title="自動完成選單 - showhint"></a>自動完成選單 - showhint</h2><p>你需要在 HTML 文件匯入以下樣式文件和函式庫。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/show-hint.min.css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/show-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/anyword-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p><code>anyword-hint</code> 提示的都是關鍵字，如果你想要 JavaScript 的語法自動完成提示，你要用 <code>javascript-hint</code>。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/javascript-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div></div>

<p>例如你想按 <code>SHIFT</code> + <code>M</code> 召喚自動完成選單，為編輯器設定 <code>extraKeys: &#123;&quot;Shift-M&quot;: &quot;autocomplete&quot;&#125;</code>。<br>例如你想按 <code>CTRL</code> + <code>ENTER</code> 召喚自動完成選單，為編輯器設定 <code>extraKeys: &#123;&quot;Ctrl-Enter&quot;: &quot;autocomplete&quot;&#125;</code>。</p>
<p>這裏我會採用 <code>CTRL</code> + <code>ENTER</code>。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> editor = <span class="title class_">CodeMirror</span>.<span class="title function_">fromTextArea</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>), &#123;</span><br><span class="line">    ...</span><br><span class="line marked">    <span class="attr">extraKeys</span>: &#123;<span class="string">&quot;Ctrl-Enter&quot;</span>: <span class="string">&quot;autocomplete&quot;</span>&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>如果你想實現<strong>按哪一個字就顯示該字頭的關鍵字</strong>，例如按 <code>a</code>，顯示 <code>abstract</code>、<code>assert</code>，你可以加上這個代碼。</p>
<div class="highlight-container" data-rel="Js"><figure class="iseeu highlight js"><table><tr><td class="code"><pre><span class="line">editor.<span class="title function_">on</span>(<span class="string">&quot;inputRead&quot;</span>, <span class="keyword">function</span>(<span class="params">cm, changeObj</span>)&#123;</span><br><span class="line">    cm.<span class="title function_">showHint</span>(&#123;<span class="attr">completeSingle</span>: <span class="literal">false</span>&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div>

<p>當然，這樣的話，你可以把它刪掉了。</p>
<div class="highlight-container" data-rel="Diff"><figure class="iseeu highlight diff"><table><tr><td class="code"><pre><span class="line">let editor = CodeMirror.fromTextArea(document.getElementById(&quot;code&quot;), &#123;</span><br><span class="line">    ...</span><br><span class="line"><span class="deletion">-    extraKeys: &#123;&quot;Ctrl-Enter&quot;: &quot;autocomplete&quot;&#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>我稍微用 CSS 調整了自動完成選單的外觀，你可以用用看。</p>
<div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Auto complete menu */</span></span><br><span class="line"><span class="selector-class">.CodeMirror-hints</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--black-alt);</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.CodeMirror-hint</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--light-grey);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--code-font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-class">.CodeMirror-hint-active</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--accent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="樣式文件和函式庫匯總"><a href="#樣式文件和函式庫匯總" class="headerlink" title="樣式文件和函式庫匯總"></a>樣式文件和函式庫匯總</h1><p>以下就是這篇文章教學所用到的樣式文件和函式庫：</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>樣式文件和函式庫為 <code>6.65.7</code> 版本。</p>
</div>

<div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">CSS Stylesheets</a></li><li class="tab"><a class="#source_code-2">JS Libraries</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CodeMirror CSS - main css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror CSS - theme: material-palenight --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/theme/material-palenight.css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror CSS - plugin: foldcode --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldgutter.min.css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror CSS - plugin: lint --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.min.css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror CSS - plugin: show-hint --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/show-hint.min.css&quot;</span>/&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CodeMirror JS - main js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - language: c-like --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/clike/clike.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - language: javascript --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/javascript/javascript.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - plugin: active-line --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/selection/active-line.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - plugin: foldcode --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/brace-fold.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldcode.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/fold/foldgutter.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - plugin: lint --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/javascript-lint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/jshint@2.13.2/dist/jshint.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CodeMirror JS - plugin: show-hint --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/show-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/anyword-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/javascript-hint.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div></div>

<hr>
<h1 id="Codepen-展示"><a href="#Codepen-展示" class="headerlink" title="Codepen 展示"></a>Codepen 展示</h1><div class="highlight-container">
<iframe src="https://codepen.io/bluewhaleyt/embed/preview/wvxMoqX?default-tab=result" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>
</div>

<p>如果還有不明白可以在下面留言，還有看看這個 Codepen 專案，這個是完整代碼。要注意的是 HTML 部分<strong>省略了匯入樣式表和函式庫的部分</strong>，因為這是 Codepen 的規格，它們已經在其他地方匯入了，總而言之，這個 Codepen 專案是可以運作的。</p>
<p>就是這樣了，再見。</p>
]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Css</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>動態載入 CSS 或 JavaScript 文件</title>
    <url>//post/web_dev_dynamic_load_css_js.html</url>
    <content><![CDATA[<p>去年，我撰寫了一篇文章，介紹過 Eruda 網頁源始碼線上檢查器，教導大家直接透過瀏覽器書籤直以呼喚這個程式，當然，它也還有其他方式呼喚的，不過這裏不作講解了，因為這個並不是這篇文章的重點。重點是 Eruda 檢查器是透過使用動態載入的方式把 <code>JavaScript</code> 文件載入至網站。</p>
<p>它的程式是取決於這個函數作初始化： <code>eruda.init()</code>;</p>
<p>當然，<code>eruda</code> 是物件，<code>init()</code> 是方法，而這個物件是<strong>未下定義</strong>的，因此進行初始化前，需要載入應要的 <code>JavaScript</code> 外部檔案。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/npm/eruda</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="靜態載入"><a href="#靜態載入" class="headerlink" title="靜態載入"></a>靜態載入</h1><p>什麼是靜態載入？其實就是我們經常在 HTML 文件使用的 <code>&lt;link&gt;</code> 和 <code>&lt;script&gt;</code> 標示用以載入 <code>CSS</code> 和 <code>JS</code> 文件，就是直接把這件文件直接載入，在一般簡單普通的網站直接載入是沒問題的，但如果你想按情況而載入特定 <code>CSS</code> 或 <code>JS</code> 文件的話，靜態載入的方式並非你最好的首選。</p>
<hr>
<h1 id="動態載入"><a href="#動態載入" class="headerlink" title="動態載入"></a>動態載入</h1><p>與靜態載入不同，動態載入能夠處理按情況所需，而載入哪些文件至網站，要實現動態載入的話，不是在 <code>HTML</code> 文件動手，而是透過編寫 <code>JavaScript</code> 實現動態載入。</p>
<hr>
<h2 id="編碼示例"><a href="#編碼示例" class="headerlink" title="編碼示例"></a>編碼示例</h2><p>我在網上找到一些動態載入的 <code>JavaScript</code> 編碼示例，有興趣可以看看以下文章瞭解更多。</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>參考資料：程式人生<br>本文簡單介紹動態載入、移除、替換js&#x2F;css檔案 。有時候我們在寫前端的時候，會有出現需要動態載入一些如css js 這樣能<strong>減輕使用者載入負擔，從而提高響應效率</strong>。</p>
</div>

<hr>
<h2 id="載入文件"><a href="#載入文件" class="headerlink" title="載入文件"></a>載入文件</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">loadFile</span>(<span class="params">filename, filetype</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (filetype == <span class="string">&quot;js&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> fileref = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">        fileref.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text/javascript&quot;</span>);</span><br><span class="line">        fileref.<span class="title function_">setAttribute</span>(<span class="string">&quot;src&quot;</span>, filename);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (filetype == <span class="string">&quot;css&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> fileref = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;link&quot;</span>);</span><br><span class="line">        fileref.<span class="title function_">setAttribute</span>(<span class="string">&quot;rel&quot;</span>, <span class="string">&quot;stylesheet&quot;</span>);</span><br><span class="line">        fileref.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text/css&quot;</span>);</span><br><span class="line">        fileref.<span class="title function_">setAttribute</span>(<span class="string">&quot;href&quot;</span>, filename);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> fileref != <span class="string">&quot;undefined&quot;</span>)</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(fileref);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="刪除文件"><a href="#刪除文件" class="headerlink" title="刪除文件"></a>刪除文件</h2><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">removeFile</span>(<span class="params">filename, filetype</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> targetelement = (filetype == <span class="string">&quot;js&quot;</span>)? <span class="string">&quot;script&quot;</span>: (filetype == <span class="string">&quot;css&quot;</span>)? <span class="string">&quot;link&quot;</span>: <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> targetattr = (filetype == <span class="string">&quot;js&quot;</span>)?<span class="string">&quot;src&quot;</span>: (filetype == <span class="string">&quot;css&quot;</span>)? <span class="string">&quot;href&quot;</span>: <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> allsuspects = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(targetelement);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = allsuspects.<span class="property">length</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (allsuspects[i] &amp;&amp; allsuspects[i].<span class="title function_">getAttribute</span>(targetattr) != <span class="literal">null</span> &amp;&amp; allsuspects[i].<span class="title function_">getAttribute</span>(targetattr).<span class="title function_">indexOf</span>(filename)!=-<span class="number">1</span>)</span><br><span class="line">            allsuspects[i].<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(allsuspects[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="調用函數示例"><a href="#調用函數示例" class="headerlink" title="調用函數示例"></a>調用函數示例</h2><p>有了這些編碼，我可以把明亮和黑暗主題語法高亮砍掉重練。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>以下編碼並非完整，僅作參考。</p>
</div>

<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// check current theme mode</span></span><br><span class="line"><span class="keyword">let</span> mode = <span class="title class_">Pu</span>.<span class="title function_">gLS</span>(<span class="string">&quot;webMode&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (mode == <span class="string">&quot;drK&quot;</span>) &#123; <span class="comment">// dark</span></span><br><span class="line">    filename = filenameDark;</span><br><span class="line">    <span class="title function_">removeFile</span>(filenameLight, filetype);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="string">&quot;lgT&quot;</span>) &#123; <span class="comment">// light</span></span><br><span class="line">    filename = filenameLight;</span><br><span class="line">    <span class="title function_">removeFile</span>(filenameDark, filetype);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">loadFile</span>(filename, filetype);</span><br></pre></td></tr></table></figure></div>

<hr>
<p>唉！如果早知道就好了。</p>
]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Css</tag>
      </tags>
  </entry>
  <entry>
    <title>Eruda 網頁源始碼在線檢查器</title>
    <url>//post/web_dev_eruda_online_web_inspect_tool.html</url>
    <content><![CDATA[<hr>
<p>相信大家都知道，在桌上電腦利用滑鼠點擊右鍵會釋出選項界面，點擊「<strong>檢視原始碼」</strong> 或於網頁鏈結的 HTTP 或 HTTPS 協定的前綴加上 <code>view-source:</code> 可以檢視目前網頁所編寫的編碼，如 HTML、JavaScript 等編碼，但我們<strong>往往不能利用它檢視更詳細的資訊</strong>。有見於此，Google Chrome 開發了一個原始碼檢查器。</p>
<p>Google Chrome 桌上網頁版以及軟件都提供一個原始碼檢查器，用戶只需要點擊實體鍵盤上的「F12」鍵，即可呼喚它出來。可是，這個功能並<strong>沒有兼容手機版本</strong>的 Google Chrome，但這不代表我們不能嚐一嚐這玩意。</p>
<p><img src="/post/web_dev_eruda_online_web_inspect_tool/img1.jpeg" alt="img1"></p>
<p>最近，我找到一個 JavaScript 編碼，是用以直接呼喚該程序顯示於網頁上，雖然，這工具<strong>並非還原的相當完整</strong> ，但基本的功能都是支援的。</p>
<hr>
<h1 id="預備適合的瀏覽器"><a href="#預備適合的瀏覽器" class="headerlink" title="預備適合的瀏覽器"></a>預備適合的瀏覽器</h1><p>先從 <a target="_blank" href="https://play.google.com/store/apps/details?id=com.android.chrome">Google Play 商店</a> 或 <a target="_blank" href="https://apps.apple.com/hk/app/google-chrome/id535886823">App Store</a> 下載 Google Chrome 瀏覽器，並把其開啟。（<strong>此功能或許不適用予其他瀏覽器）</strong></p>
<hr>
<h1 id="新增書籤"><a href="#新增書籤" class="headerlink" title="新增書籤"></a>新增書籤</h1><p>隨便輸入一個網址，導向一個網站，然後，在左上角的<strong>豎式三點圖標</strong>內，點擊 <strong>「加入標籤」</strong> ，若手機用戶，則點擊<strong>空心星星圖標</strong>。</p>
<p>完成後，會顯示該書籤已成功加入。這時候，我們可以編輯該書籤。</p>
<hr>
<h1 id="編輯書籤並加入-JavaScript-編碼"><a href="#編輯書籤並加入-JavaScript-編碼" class="headerlink" title="編輯書籤並加入 JavaScript 編碼"></a>編輯書籤並加入 JavaScript 編碼</h1><p>把網址修改為以下編碼並把<code>名稱</code>修改為任意名稱，如輸入「Inspect」，並於網址的輸入框中加入以下編碼。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">javascript</span>:</span><br><span class="line">  (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    <span class="keyword">var</span> script = %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">    %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    script.<span class="property">src</span>=<span class="string">&quot;//cdn.jsdelivr.net/npm/eruda&quot;</span>;</span><br><span class="line">    %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script); </span><br><span class="line">    %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    script.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">      eruda.<span class="title function_">init</span>()</span><br><span class="line">      %<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span>%<span class="variable constant_">C2</span>%<span class="variable constant_">A0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)();</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>在瀏覽器上方的搜尋框輸入「Inspect」（這是剛剛所命名的任意名稱），點擊確定便會出現該工具的懸浮圖標，點擊它便會出現其懸浮視窗。<strong>（若重新加載目前網頁，懸浮視窗會自動關閉，需要再次呼喚書籤）</strong></p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>iOS 或 iPad 裝置或許需要點擊書籤直接呼喚，而不是輸入「Inspect」。</p>
</div>

<hr>
<h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>這個程序提供了許多功能，如<strong>檢視標示屬性、控制台，實時偵錯</strong>等，就由大家自己發掘嘍～</p>
<p><img src="/post/web_dev_eruda_online_web_inspect_tool/img2.jpeg" alt="img2"></p>
<div class="note note-danger icon-padding"><i class="note-icon fa-solid fa-times-circle"></i><p>Eruda 線上檢查器不能應用於本地網址的網頁。</p>
</div>

<hr>
<p>更多關於 Eruda 線上網頁檢查器可 <a href="https://eruda.liriliri.io/" target="_blank">按此</a>。</p>
]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML 文件的跳脫字元</title>
    <url>//post/web_dev_html_escape_character.html</url>
    <content><![CDATA[<p>在你編寫 HTML 文件時，你經常所使用的 <code>&lt;</code> 和 <code>&gt;</code> 字符，想必對你並不陌生。</p>
<p>可是，你有沒有想過，HTML 看重的以上那些字符，若要把它們實際顯示出來，應要怎麼辦呢？</p>
<p>原來，在電腦科學，有一個概念叫做<strong>跳脫字元</strong>（escape character）。</p>
<hr>
<h1 id="跳脫。。字元？！"><a href="#跳脫。。字元？！" class="headerlink" title="跳脫。。字元？！"></a>跳脫。。字元？！</h1><p>哈哈！聽起來它很像如其名一樣活潑呢！其實並不是這樣，所謂的跳脫字元，其實是什麼呢？</p>
<div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>參考資料：<a href="https://docs.microsoft.com/zh-tw/biztalk/core/escape-characters" target="_blank">Microsoft</a><br>逸出字元 (又稱：轉義字元或逸出字元) 是單一字元，用來抑制跟隨在它後面之字元的任何特殊意義。</p>
</div>

<p>簡而言之，就是把程序碼上的字符<strong>無效化</strong>，並把其當作普通字符顯示。</p>
<p>例如，就以定義段落 <code>&lt;p&gt;</code> 為例，這個標示原本就會把新的段落定義於 HTML 文件裏，如果我們想運用跳脫字元呢？</p>
<p>要顯示完整的 <code>&lt;p&gt;</code> 整個字串，就需要使用 HTML 的跳脫字元。</p>
<hr>
<h1 id="HTML-的跳脫字元"><a href="#HTML-的跳脫字元" class="headerlink" title="HTML 的跳脫字元"></a>HTML 的跳脫字元</h1><div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>顯示 <code>&lt;</code> : 使用 <code>&amp;lt;</code><br>顯示 <code>&gt;</code> : 使用 <code>&amp;gt;</code></p>
</div>

<p>因此，若要顯示 <code>&lt;p&gt;</code>，就需要鍵入：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;amp;lt;p&amp;amp;gt;</span><br></pre></td></tr></table></figure></div>

<p>看到這裏，或許你會有一個疑問，就是為什麼我可以把這些跳脫字元顯示出來呢，因為理論上它們會被轉義為相應字元欸。</p>
<p>的確，但原來在 HTML，<code>&amp;</code> 也被認定，所以，若要顯示 <code>&amp;</code>，就需要鍵入：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;amp;amp;</span><br></pre></td></tr></table></figure></div>

<p>大概就是這樣了，HTML 提供許多跳脫字元，在這裏無法一一羅列，可到 <a href="https://html.spec.whatwg.org/multipage/named-characters.html#named-character-references" target="_blank">完整總表</a> 看看，下面有一個簡潔的常用跳脫字元總表，大家可以用作參考：</p>
<table>
    <tr>
        <th width="20%">顯示</th>
        <th>跳脫字元</th>
        <th>備註</th>
    </tr>
    <tr align="center">
        <td>&nbsp;</td>
        <td>&amp;nbsp;</td>
        <td>no-break space（空格）</td>
    </tr>
    <tr align="center">
        <td>&lt;</td>
        <td>&amp;lt;</td>
        <td>less than</td>
    </tr>
    <tr align="center">
        <td>&gt;</td>
        <td>&amp;gt;</td>
        <td>greater than</td>
    </tr>
    <tr align="center">
        <td>&amp;</td>
        <td>&amp;amp;</td>
        <td>ampersand</td>
    </tr>
    <tr align="center">
        <td>&quot;</td>
        <td>&amp:quot;</td>
        <td>double quotation mark</td>
    </tr>
    <tr align="center">
        <td>&apos;</td>
        <td>&amp;apos;</td>
        <td>single quotation mark (apostrophe)</td>
    </tr>
    <tr align="center">
        <td>&cent;</td>
        <td>&amp;cent;</td>
        <td>cent</td>
    </tr>
    <tr align="center">
        <td>&pound;</td>
        <td>&amp;pound;</td>
        <td>pound</td>
    </tr>
    <tr align="center">
        <td>&yen;</td>
        <td>&amp;yen;</td>
        <td>yen</td>
    </tr>
    <tr align="center">
        <td>&euro;</td>
        <td>&amp;euro;</td>
        <td>euro</td>
    </tr>
    <tr align="center">
        <td>&copy;</td>
        <td>&amp;copy;</td>
        <td>copyright</td>
    </tr>
    <tr align="center">
        <td>&reg;</td>
        <td>&amp;reg;</td>
        <td>registered trademark</td>
    </tr>
</table>

<p>但是，若是經常要自己手動轉義，未免過於哀了吧。不用擔心，你可以用網上的資源，例如 <a href="https://www.techyleaf.in/p/free-html-parse-tool.html" target="_blank">線上 HTML 解析編輯器</a> ，它的作用就是把跳脫字元一律顯示出來。。</p>
<hr>
<p>就是這樣，希望大家瞭解到跳脫字元的基本運作，再見。</p>
]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>嵌入 Monaco Editor 至網頁</title>
    <url>//post/web_dev_monaco_editor.html</url>
    <content><![CDATA[<p>大家好，今天我們會學習，如何把 Monaco Editor 嵌入至網頁上使用。</p>
<hr>
<h1 id="什麼是-Monaco-Editor？"><a href="#什麼是-Monaco-Editor？" class="headerlink" title="什麼是 Monaco Editor？"></a>什麼是 Monaco Editor？</h1><p>Monaco Editor 是一個代碼編輯器的函式庫組件，提供一個強大的編輯器功能，這個編輯器亦得到 Visual Studio Code (簡稱：VSCode) 的「賞識」，現在 VSCode 都是在用這個編輯器。</p>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>但是，Monaco Editor 目前不支援響應式設計，如果你試圖在手機裝置上使用它，可能在輸入方面，或是整體的使用體驗不佳。</p>
</div>

<a class="button " href="https://microsoft.github.io/monaco-editor/" title="Monaco Editor 官網">Monaco Editor 官網</a>

<hr>
<h1 id="開始使用"><a href="#開始使用" class="headerlink" title="開始使用"></a>開始使用</h1><hr>
<h2 id="匯入函式庫"><a href="#匯入函式庫" class="headerlink" title="匯入函式庫"></a>匯入函式庫</h2><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/monaco-editor@0.35.0/min/vs/loader.js&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="構建佈局"><a href="#構建佈局" class="headerlink" title="構建佈局"></a>構建佈局</h2><p>我們主要定義一個 <code>id</code> 為 <code>editor</code> 的 <code>&lt;div&gt;</code>。</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="調整編輯器外觀"><a href="#調整編輯器外觀" class="headerlink" title="調整編輯器外觀"></a>調整編輯器外觀</h2><hr>
<h3 id="匯入-JetBrains-Mono-等寬字型"><a href="#匯入-JetBrains-Mono-等寬字型" class="headerlink" title="匯入 JetBrains Mono 等寬字型"></a>匯入 JetBrains Mono 等寬字型</h3><div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.googleapis.com/css2?family=JetBrains+Mono&amp;display=swap&#x27;</span>);</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="設置編輯器外觀"><a href="#設置編輯器外觀" class="headerlink" title="設置編輯器外觀"></a>設置編輯器外觀</h3><div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#editor</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<h2 id="編寫編輯器功能"><a href="#編寫編輯器功能" class="headerlink" title="編寫編輯器功能"></a>編寫編輯器功能</h2><hr>
<h3 id="聲明全域變量-code"><a href="#聲明全域變量-code" class="headerlink" title="聲明全域變量 code"></a>聲明全域變量 <code>code</code></h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> code;</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="載入-Monaco-Editor-模塊"><a href="#載入-Monaco-Editor-模塊" class="headerlink" title="載入 Monaco Editor 模塊"></a>載入 Monaco Editor 模塊</h3><p>在這文章，我們會用 RequireJS 方法：</p>
<div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">    <span class="attr">paths</span>: &#123;</span><br><span class="line">        <span class="attr">vs</span>: <span class="string">&quot;https://cdn.jsdelivr.net/npm/monaco-editor@0.35.0/min/vs&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<hr>
<h3 id="設置編輯器"><a href="#設置編輯器" class="headerlink" title="設置編輯器"></a>設置編輯器</h3><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">&quot;vs/editor/editor.main&quot;</span>], <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    monaco.<span class="property">editor</span>.<span class="title function_">create</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;editor&quot;</span>), &#123;</span><br><span class="line">        <span class="attr">value</span>: code,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div>

<p>我們可以為編輯器進行許多不同設定：</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>點我看代碼 </summary>
              <div class="content">
              <table width="100%">    <tr>        <th> 設定 </th>        <th> 編碼 </th>    </tr>    <tr>        <td align="center"> 主題 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme</span>: <span class="string">&quot;vs-dark&quot;</span></span><br></pre></td></tr></table></figure></div>            <div class="note note-info icon-padding"><i class="note-icon fa-solid fa-info-circle"></i><p>以上的是黑暗主題，而 <code>vs-light</code> 是明亮主題。</p></div>        </td>    </tr>    <tr>        <td align="center"> 語法模式 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">language</span>: <span class="string">&quot;java&quot;</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr>    <tr>        <td align="center"> 字體 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">fontFamily</span>: <span class="string">&quot;JetBrains Mono&quot;</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr>    <tr>        <td align="center"> 字體大小 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">fontSize</span>: <span class="number">16</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr>    <tr>        <td align="center"> 字體連字 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">fontLigatures</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr>    <tr>        <td align="center"> 定位符 (Tab) 大小 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">tabSize</span>: <span class="number">4</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr>    <tr>        <td align="center"> 顏色括號比對高亮 </td>        <td>            <div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">colorDecoration</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></div>        </td>    </tr></table>
              </div>
            </details>

<hr>
<h1 id="源代碼"><a href="#源代碼" class="headerlink" title="源代碼"></a>源代碼</h1><div class="tabs" id="tab-source_code"><ul class="nav-tabs"><li class="tab active"><a class="#source_code-1">index.html</a></li><li class="tab"><a class="#source_code-2">style.css</a></li><li class="tab"><a class="#source_code-3">script.js</a></li></ul><div class="tab-content"><div class="tab-pane active" id="source_code-1"><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- style.css --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Monaco Editor 函式庫 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/monaco-editor@0.35.0/min/vs/loader.js&quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="comment">&lt;!-- RequireJS --&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js&quot;</span>&gt;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;editor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- script.js --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span> /&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-2"><div class="highlight-container" data-rel="Css"><figure class="iseeu highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&#x27;https://fonts.googleapis.com/css2?family=JetBrains+Mono&amp;display=swap&#x27;</span>);</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#editor</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-pane" id="source_code-3"><div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> code;</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>.<span class="title function_">config</span>(&#123;</span><br><span class="line">    <span class="attr">paths</span>: &#123;</span><br><span class="line">        <span class="attr">vs</span>: <span class="string">&quot;https://cdn.jsdelivr.net/npm/monaco-editor@0.35.0/min/vs&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>([<span class="string">&quot;vs/editor/editor.main&quot;</span>], <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    monaco.<span class="property">editor</span>.<span class="title function_">create</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;editor&quot;</span>), &#123;</span><br><span class="line">        <span class="attr">value</span>: code,</span><br><span class="line">        <span class="attr">theme</span>: <span class="string">&quot;vs-dark&quot;</span>,</span><br><span class="line">        <span class="attr">language</span>: <span class="string">&quot;java&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div></div></div></div>]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Css</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>利用愚蠢方式強硬實現語法突顯淺色和深色主題</title>
    <url>//post/web_dev_implement-light-dark-mode-stupid-way.html</url>
    <content><![CDATA[<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>本文章之內容不再建議使用，請稍移玉步至 <a href="/post/web_dev_dynamic_load_css_js.html" target="_blank"> 此文章 </a>。</p>
</div>

<p>由於這個網站採用主題更換設定，所以若要網頁內容看起來更美觀，便必須要為程式碼的語法突顯主題作考量，長話短說，立即分享我的愚蠢方式<strong>強硬實現語法突顯淺色和深色主題</strong>。</p>
<hr>
<h1 id="釐清主題更換事件"><a href="#釐清主題更換事件" class="headerlink" title="釐清主題更換事件"></a>釐清主題更換事件</h1><p>在開始之前，你需要知道你的主題更換程式是<strong>透過什麼準則或條件</strong>所更換，例如是我這個網站，是根據以下這個條件：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// this condition is according to your theme implementation</span></span><br><span class="line"><span class="keyword">let</span> mode = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;mode&quot;</span>);</span><br></pre></td></tr></table></figure></div>

<p>如果要偵測為淺色或深色模式：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// detect if its light mode</span></span><br><span class="line"><span class="keyword">if</span> (mode == <span class="string">&quot;light&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// detect if its dark mode</span></span><br><span class="line"><span class="keyword">if</span> (mode == <span class="string">&quot;darkmode&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>不過，在我這次實現的成品，沒有使用 <code>if then else</code> 的條件句，反而使用了條件運算符 <code>? :</code>。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> isLight = mode == <span class="string">&quot;light&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> foreground = isLight ? <span class="string">&quot;#546e7a&quot;</span> : <span class="string">&quot;#a6accd&quot;</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<h1 id="條件運算符的簡單介紹"><a href="#條件運算符的簡單介紹" class="headerlink" title="條件運算符的簡單介紹"></a>條件運算符的簡單介紹</h1><p>如果你不瞭解什麼是<code>條件運算符</code>（或稱三元條件符），簡而言之，就是簡化了 <code>if then else</code> 的結構，這裏只以例子作簡單的講解：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// normal condition (if else)</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0.1</span> + <span class="number">0.2</span> == <span class="number">0.3</span>) &#123;</span><br><span class="line">    result = <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ternary operator</span></span><br><span class="line">result = <span class="number">0.1</span> + <span class="number">0.2</span> == <span class="number">0.3</span> ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br></pre></td></tr></table></figure></div>

<p>在上述例子，<code>0.1 + 0.2 == 0.3</code> 是一個條件，所以條件運算符以 <code>?</code> 表示該語法，<code>?</code> 後所輸入的值就是 <code>then</code> 的部分，而 : 後所輸入的值就是 <code>else</code> 的部分。</p>
<blockquote>
<p><strong>公式</strong></p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line">condition ? expression <span class="number">1</span> : expression <span class="number">2</span></span><br></pre></td></tr></table></figure></div>
</blockquote>
<div class="note note-warning icon-padding"><i class="note-icon fa-solid fa-exclamation-circle"></i><p>條件運算式只限於 <code>if then else</code> 結構和<strong>不能當作跨行使用</strong>。</p>
</div>

<hr>
<h1 id="釐清語法突顯實現方式"><a href="#釐清語法突顯實現方式" class="headerlink" title="釐清語法突顯實現方式"></a>釐清語法突顯實現方式</h1><p>好了，回到說語法突顯，我們需要先知道 highlight.js 的語法突顯上色方式是靠 <code>&lt;span&gt;</code> 標示再依附一個 <code>class</code> 的，下方有一個羅列 highlight.js 所支援常用 <code>scope</code> 的精簡列表：</p>
<p>更多可參見 <a class="link" href="https://highlightjs.readthedocs.io/en/latest/css-classes-reference.html" target="_blank">highlight.js scope references <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<table>
<thead>
<tr>
<th align="center">Class Name</th>
<th align="center">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="center">.hljs-name</td>
<td align="center">HTML tag</td>
</tr>
<tr>
<td align="center">.hljs-variable</td>
<td align="center">Variable</td>
</tr>
<tr>
<td align="center">.hljs-subst</td>
<td align="center">Variable inside string (e.g <code>$&#123;...&#125;</code>)</td>
</tr>
<tr>
<td align="center">.hljs-attr</td>
<td align="center">HTML attribute</td>
</tr>
<tr>
<td align="center">.hljs-attribute</td>
<td align="center">CSS attribute</td>
</tr>
<tr>
<td align="center">.hljs-property</td>
<td align="center">Property</td>
</tr>
<tr>
<td align="center">.hljs-keyword</td>
<td align="center">Keyword</td>
</tr>
<tr>
<td align="center">.hljs-type</td>
<td align="center">Data types</td>
</tr>
<tr>
<td align="center">.hljs-title.function_</td>
<td align="center">Function title</td>
</tr>
<tr>
<td align="center">.hljs-title.class_</td>
<td align="center">Class title</td>
</tr>
<tr>
<td align="center">.hljs-selector-class</td>
<td align="center">Selector class</td>
</tr>
<tr>
<td align="center">.hljs-string</td>
<td align="center">String</td>
</tr>
<tr>
<td align="center">.hljs-number</td>
<td align="center">Number</td>
</tr>
<tr>
<td align="center">.hljs-literal</td>
<td align="center">True, false, null</td>
</tr>
<tr>
<td align="center">.hljs-built_in</td>
<td align="center">Built-in function or object</td>
</tr>
<tr>
<td align="center">.hljs-operator</td>
<td align="center">Operator</td>
</tr>
<tr>
<td align="center">.hljs-punctuation</td>
<td align="center">Punctuation</td>
</tr>
<tr>
<td align="center">.hljs-comment</td>
<td align="center">Comment</td>
</tr>
<tr>
<td align="center">.hljs-meta</td>
<td align="center">Metadata (e.g. pragma, directive, etc.)</td>
</tr>
</tbody></table>
<p>文本不屬於語法，所以在以上列表沒有文本類別的蹤影，只需要使用選擇器 <code>.hljs</code> 把 <code>color</code> 修改便可。</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> temp;</span><br><span class="line"><span class="keyword">let</span> anchorsForeground = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.hljs&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; anchorsForeground.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    temp = anchorsForeground[i];</span><br><span class="line">    temp.<span class="property">style</span>.<span class="property">color</span> = foreground;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果想修改關鍵字 <code>var</code>, <code>const</code> , <code>let</code> 等，就要使用選擇器 .<code>hljs-keyword</code>，做法與上述相近：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> anchorsKeyword = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.hljs-keyword&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; anchorsKeyword.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    temp = anchorsKeyword[i];</span><br><span class="line">    temp.<span class="property">style</span>.<span class="property">color</span> = keyword;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>如果想弄<strong>斜體或加上背景顏色和外框半徑</strong>，做法如下：</p>
<div class="highlight-container" data-rel="Javascript"><figure class="iseeu highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// italic</span></span><br><span class="line">temp.<span class="property">style</span>.<span class="property">fontStyle</span> = <span class="string">&quot;italic&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// background</span></span><br><span class="line">temp.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;#ff0000&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// border radius</span></span><br><span class="line">temp.<span class="property">style</span>.<span class="property">borderRadius</span> = <span class="string">&quot;4px&quot;</span>;</span><br></pre></td></tr></table></figure></div>

<hr>
<p>好了，基本上我就是這樣實現的了，這篇文章純粹是想分享一下這個愚蠢的做法，我也知道可以動態載入 CSS 之類的，但是。。嗯。。</p>
<a class="button  large center" href="/post/web_dev_dynamic_load_css_js.html" title="在嗯。。什麼？"><i class="fa-duotone fa-play-circle"></i> 在嗯。。什麼？</a>]]></content>
      <categories>
        <category>網頁開發</category>
      </categories>
      <tags>
        <tag>Javascript</tag>
        <tag>Css</tag>
      </tags>
  </entry>
</search>
